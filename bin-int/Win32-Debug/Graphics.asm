; Listing generated by Microsoft (R) Optimizing Compiler Version 19.27.29111.0 

	TITLE	F:\WindowSandbox\WindowSandbox\src\Graphics.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	___pobjectentryfirst
PUBLIC	___pobjectentrymid
PUBLIC	___pobjectentrylast
PUBLIC	?DefaultDelegateCheckMode@WRL@Microsoft@@3W4DelegateCheckMode@12@B ; Microsoft::WRL::DefaultDelegateCheckMode
PUBLIC	?g_XMSinCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMSinCoefficients0
PUBLIC	?g_XMSinCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMSinCoefficients1
PUBLIC	?g_XMCosCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMCosCoefficients0
PUBLIC	?g_XMCosCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMCosCoefficients1
PUBLIC	?g_XMTanCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMTanCoefficients0
PUBLIC	?g_XMTanCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMTanCoefficients1
PUBLIC	?g_XMTanCoefficients2@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMTanCoefficients2
PUBLIC	?g_XMArcCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMArcCoefficients0
PUBLIC	?g_XMArcCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMArcCoefficients1
PUBLIC	?g_XMATanCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMATanCoefficients0
PUBLIC	?g_XMATanCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMATanCoefficients1
PUBLIC	?g_XMATanEstCoefficients0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMATanEstCoefficients0
PUBLIC	?g_XMATanEstCoefficients1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMATanEstCoefficients1
PUBLIC	?g_XMTanEstCoefficients@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMTanEstCoefficients
PUBLIC	?g_XMArcEstCoefficients@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMArcEstCoefficients
PUBLIC	?g_XMPiConstants0@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMPiConstants0
PUBLIC	?g_XMIdentityR0@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMIdentityR0
PUBLIC	?g_XMIdentityR1@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMIdentityR1
PUBLIC	?g_XMIdentityR2@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMIdentityR2
PUBLIC	?g_XMIdentityR3@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMIdentityR3
PUBLIC	?g_XMNegIdentityR0@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegIdentityR0
PUBLIC	?g_XMNegIdentityR1@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegIdentityR1
PUBLIC	?g_XMNegIdentityR2@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegIdentityR2
PUBLIC	?g_XMNegIdentityR3@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegIdentityR3
PUBLIC	?g_XMNegativeZero@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMNegativeZero
PUBLIC	?g_XMNegate3@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMNegate3
PUBLIC	?g_XMMaskXY@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMMaskXY
PUBLIC	?g_XMMask3@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMMask3
PUBLIC	?g_XMMaskX@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMMaskX
PUBLIC	?g_XMMaskY@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMMaskY
PUBLIC	?g_XMMaskZ@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMMaskZ
PUBLIC	?g_XMMaskW@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMMaskW
PUBLIC	?g_XMOne@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMOne
PUBLIC	?g_XMOne3@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMOne3
PUBLIC	?g_XMZero@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMZero
PUBLIC	?g_XMTwo@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMTwo
PUBLIC	?g_XMFour@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMFour
PUBLIC	?g_XMSix@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMSix
PUBLIC	?g_XMNegativeOne@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegativeOne
PUBLIC	?g_XMOneHalf@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMOneHalf
PUBLIC	?g_XMNegativeOneHalf@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegativeOneHalf
PUBLIC	?g_XMNegativeTwoPi@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegativeTwoPi
PUBLIC	?g_XMNegativePi@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNegativePi
PUBLIC	?g_XMHalfPi@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMHalfPi
PUBLIC	?g_XMPi@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMPi
PUBLIC	?g_XMReciprocalPi@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMReciprocalPi
PUBLIC	?g_XMTwoPi@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMTwoPi
PUBLIC	?g_XMReciprocalTwoPi@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMReciprocalTwoPi
PUBLIC	?g_XMEpsilon@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMEpsilon
PUBLIC	?g_XMInfinity@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMInfinity
PUBLIC	?g_XMQNaN@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMQNaN
PUBLIC	?g_XMQNaNTest@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMQNaNTest
PUBLIC	?g_XMAbsMask@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMAbsMask
PUBLIC	?g_XMFltMin@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMFltMin
PUBLIC	?g_XMFltMax@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMFltMax
PUBLIC	?g_XMNegOneMask@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMNegOneMask
PUBLIC	?g_XMMaskA8R8G8B8@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMMaskA8R8G8B8
PUBLIC	?g_XMFlipA8R8G8B8@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMFlipA8R8G8B8
PUBLIC	?g_XMFixAA8R8G8B8@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixAA8R8G8B8
PUBLIC	?g_XMNormalizeA8R8G8B8@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMNormalizeA8R8G8B8
PUBLIC	?g_XMMaskA2B10G10R10@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMMaskA2B10G10R10
PUBLIC	?g_XMFlipA2B10G10R10@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMFlipA2B10G10R10
PUBLIC	?g_XMFixAA2B10G10R10@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixAA2B10G10R10
PUBLIC	?g_XMNormalizeA2B10G10R10@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMNormalizeA2B10G10R10
PUBLIC	?g_XMMaskX16Y16@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMMaskX16Y16
PUBLIC	?g_XMFlipX16Y16@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMFlipX16Y16
PUBLIC	?g_XMFixX16Y16@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixX16Y16
PUBLIC	?g_XMNormalizeX16Y16@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNormalizeX16Y16
PUBLIC	?g_XMMaskX16Y16Z16W16@DirectX@@3UXMVECTORU32@1@B ; DirectX::g_XMMaskX16Y16Z16W16
PUBLIC	?g_XMFlipX16Y16Z16W16@DirectX@@3UXMVECTORI32@1@B ; DirectX::g_XMFlipX16Y16Z16W16
PUBLIC	?g_XMFixX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixX16Y16Z16W16
PUBLIC	?g_XMNormalizeX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMNormalizeX16Y16Z16W16
PUBLIC	?g_XMNoFraction@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMNoFraction
PUBLIC	?g_XMMaskByte@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMMaskByte
PUBLIC	?g_XMNegateX@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMNegateX
PUBLIC	?g_XMNegateY@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMNegateY
PUBLIC	?g_XMNegateZ@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMNegateZ
PUBLIC	?g_XMNegateW@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMNegateW
PUBLIC	?g_XMSelect0101@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMSelect0101
PUBLIC	?g_XMSelect1010@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMSelect1010
PUBLIC	?g_XMOneHalfMinusEpsilon@DirectX@@3UXMVECTORI32@1@B ; DirectX::g_XMOneHalfMinusEpsilon
PUBLIC	?g_XMSelect1000@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMSelect1000
PUBLIC	?g_XMSelect1100@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMSelect1100
PUBLIC	?g_XMSelect1110@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMSelect1110
PUBLIC	?g_XMSelect1011@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMSelect1011
PUBLIC	?g_XMFixupY16@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixupY16
PUBLIC	?g_XMFixupY16W16@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixupY16W16
PUBLIC	?g_XMFlipY@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMFlipY
PUBLIC	?g_XMFlipZ@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMFlipZ
PUBLIC	?g_XMFlipW@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMFlipW
PUBLIC	?g_XMFlipYZ@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMFlipYZ
PUBLIC	?g_XMFlipZW@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMFlipZW
PUBLIC	?g_XMFlipYW@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMFlipYW
PUBLIC	?g_XMMaskDec4@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMMaskDec4
PUBLIC	?g_XMXorDec4@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMXorDec4
PUBLIC	?g_XMAddUDec4@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMAddUDec4
PUBLIC	?g_XMAddDec4@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMAddDec4
PUBLIC	?g_XMMulDec4@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMMulDec4
PUBLIC	?g_XMMaskByte4@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMMaskByte4
PUBLIC	?g_XMXorByte4@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMXorByte4
PUBLIC	?g_XMAddByte4@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMAddByte4
PUBLIC	?g_XMFixUnsigned@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMFixUnsigned
PUBLIC	?g_XMMaxInt@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMMaxInt
PUBLIC	?g_XMMaxUInt@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMMaxUInt
PUBLIC	?g_XMUnsignedFix@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMUnsignedFix
PUBLIC	?g_XMsrgbScale@DirectX@@3UXMVECTORF32@1@B	; DirectX::g_XMsrgbScale
PUBLIC	?g_XMsrgbA@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMsrgbA
PUBLIC	?g_XMsrgbA1@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMsrgbA1
PUBLIC	?g_XMExponentBias@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMExponentBias
PUBLIC	?g_XMSubnormalExponent@DirectX@@3UXMVECTORI32@1@B ; DirectX::g_XMSubnormalExponent
PUBLIC	?g_XMNumTrailing@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMNumTrailing
PUBLIC	?g_XMMinNormal@DirectX@@3UXMVECTORI32@1@B	; DirectX::g_XMMinNormal
PUBLIC	?g_XMNegInfinity@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMNegInfinity
PUBLIC	?g_XMNegQNaN@DirectX@@3UXMVECTORU32@1@B		; DirectX::g_XMNegQNaN
PUBLIC	?g_XMBin128@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XMBin128
PUBLIC	?g_XMBinNeg150@DirectX@@3UXMVECTORU32@1@B	; DirectX::g_XMBinNeg150
PUBLIC	?g_XM253@DirectX@@3UXMVECTORI32@1@B		; DirectX::g_XM253
PUBLIC	?g_XMExpEst1@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst1
PUBLIC	?g_XMExpEst2@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst2
PUBLIC	?g_XMExpEst3@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst3
PUBLIC	?g_XMExpEst4@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst4
PUBLIC	?g_XMExpEst5@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst5
PUBLIC	?g_XMExpEst6@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst6
PUBLIC	?g_XMExpEst7@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMExpEst7
PUBLIC	?g_XMLogEst0@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst0
PUBLIC	?g_XMLogEst1@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst1
PUBLIC	?g_XMLogEst2@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst2
PUBLIC	?g_XMLogEst3@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst3
PUBLIC	?g_XMLogEst4@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst4
PUBLIC	?g_XMLogEst5@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst5
PUBLIC	?g_XMLogEst6@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst6
PUBLIC	?g_XMLogEst7@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLogEst7
PUBLIC	?g_XMLgE@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMLgE
PUBLIC	?g_XMInvLgE@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_XMInvLgE
PUBLIC	?g_UByteMax@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_UByteMax
PUBLIC	?g_ByteMin@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_ByteMin
PUBLIC	?g_ByteMax@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_ByteMax
PUBLIC	?g_ShortMin@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_ShortMin
PUBLIC	?g_ShortMax@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_ShortMax
PUBLIC	?g_UShortMax@DirectX@@3UXMVECTORF32@1@B		; DirectX::g_UShortMax
msvcjmc	SEGMENT
__7242C389_ctype@h DB 01H
__90A1F774_basetsd@h DB 01H
__367CC694_corecrt_memcpy_s@h DB 01H
__35D7DDB3_corecrt_memory@h DB 01H
__DC9673E3_corecrt_wstring@h DB 01H
__A29A7DFB_string@h DB 01H
__3C23D660_guiddef@h DB 01H
__AF541008_winnt@h DB 01H
__0D001789_processthreadsapi@h DB 01H
__F972325D_memoryapi@h DB 01H
__76CD430D_winerror@h DB 01H
__737D49DB_winbase@h DB 01H
__1B9502AC_winuser@h DB 01H
__0396F1A5_stralign@h DB 01H
__8906660C_vcruntime_new@h DB 01H
__5DDA4519_cstddef DB 01H
__09340588_corecrt_math@h DB 01H
__24E9E95F_stdlib@h DB 01H
__F8119FB4_cstdlib DB 01H
__85A9AA98_type_traits DB 01H
__B0C4CEA9_malloc@h DB 01H
__E75714E4_vcruntime_exception@h DB 01H
__E4152856_exception DB 01H
__F66CEB67_corecrt_stdio_config@h DB 01H
__101834BA_corecrt_wstdio@h DB 01H
__AD6A91B7_stdio@h DB 01H
__5467428D_corecrt_wconio@h DB 01H
__4442441F_corecrt_wio@h DB 01H
__45F4AF76_corecrt_wtime@h DB 01H
__186FF47F_stat@h DB 01H
__534C724A_wchar@h DB 01H
__F2870A2C_limits DB 01H
__0104A505_compare DB 01H
__4324C6B3_xutility DB 01H
__A58979FC_xmemory DB 01H
__AC6CB2D0_tuple DB 01H
__E0552A5D_xpolymorphic_allocator@h DB 01H
__D15AFF60_xstring DB 01H
__3AFA803E_string DB 01H
__2CCBBE23_propidl@h DB 01H
__AD360DAF_oleauto@h DB 01H
__F57271C6_d3d11sdklayers@h DB 01H
__FA3A9F83_d3d10@h DB 01H
__FBF8F5B4_d3d11@h DB 01H
__CECC34C3_roapi@h DB 01H
__7B118BD6_internal@h DB 01H
__687F9F38_client@h DB 01H
__AF08451A_xmmintrin@h DB 01H
__9AC87C20_roerrorapi@h DB 01H
__CBC843C8_implements@h DB 01H
__15F97165_intsafe@h DB 01H
__EF1EFFE3_corewrappers@h DB 01H
__278E1207_module@h DB 01H
__BF1AC9A0_event@h DB 01H
__0A4FAB91_cmath DB 01H
__6D5B120B_stdexcept DB 01H
__160863A3_xcall_once@h DB 01H
__99B256EE_atomic DB 01H
__A9557183_system_error DB 01H
__FB364CBD_vcruntime_typeinfo@h DB 01H
__33FB35AA_typeinfo DB 01H
__4E2906A2_memory DB 01H
__626C51AD_xfacet DB 01H
__2C72D662_xlocinfo DB 01H
__0E648B51_xlocale DB 01H
__1597A171_xiosbase DB 01H
__90E3ED46_xlocnum DB 01H
__165C22CB_ios DB 01H
__64988D8D_DirectXMathConvert@inl DB 01H
__7AA729B1_DirectXMathVector@inl DB 01H
__7142F416_DirectXMathMatrix@inl DB 01H
__20B0B2D8_DirectXMathMisc@inl DB 01H
__A500D4E3_DirectXMath@h DB 01H
__29214A07_Graphics@h DB 01H
__AA27F043_Graphics@cpp DB 01H
__BD0AA72F_sstream DB 01H
__7EA464AF_istream DB 01H
__1D745195_ostream DB 01H
__6FFBAAB7_streambuf DB 01H
__528871F3_iterator DB 01H
__3E6EDFAA_iosfwd DB 01H
__CF1C1A3F_utility DB 01H
__38038D2D_xstddef DB 01H
__EE19A480_xatomic@h DB 01H
msvcjmc	ENDS
;	COMDAT ?g_UShortMax@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_UShortMax@DirectX@@3UXMVECTORF32@1@B DD 0477fff00r ; 65535 ; DirectX::g_UShortMax
	DD	0477fff00r			; 65535
	DD	0477fff00r			; 65535
	DD	0477fff00r			; 65535
CONST	ENDS
;	COMDAT ?g_ShortMax@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_ShortMax@DirectX@@3UXMVECTORF32@1@B DD 046fffe00r ; 32767 ; DirectX::g_ShortMax
	DD	046fffe00r			; 32767
	DD	046fffe00r			; 32767
	DD	046fffe00r			; 32767
CONST	ENDS
;	COMDAT ?g_ShortMin@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_ShortMin@DirectX@@3UXMVECTORF32@1@B DD 0c6fffe00r ; -32767 ; DirectX::g_ShortMin
	DD	0c6fffe00r			; -32767
	DD	0c6fffe00r			; -32767
	DD	0c6fffe00r			; -32767
CONST	ENDS
;	COMDAT ?g_ByteMax@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_ByteMax@DirectX@@3UXMVECTORF32@1@B DD 042fe0000r ; 127 ; DirectX::g_ByteMax
	DD	042fe0000r			; 127
	DD	042fe0000r			; 127
	DD	042fe0000r			; 127
CONST	ENDS
;	COMDAT ?g_ByteMin@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_ByteMin@DirectX@@3UXMVECTORF32@1@B DD 0c2fe0000r ; -127 ; DirectX::g_ByteMin
	DD	0c2fe0000r			; -127
	DD	0c2fe0000r			; -127
	DD	0c2fe0000r			; -127
CONST	ENDS
;	COMDAT ?g_UByteMax@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_UByteMax@DirectX@@3UXMVECTORF32@1@B DD 0437f0000r ; 255 ; DirectX::g_UByteMax
	DD	0437f0000r			; 255
	DD	0437f0000r			; 255
	DD	0437f0000r			; 255
CONST	ENDS
;	COMDAT ?g_XMInvLgE@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMInvLgE@DirectX@@3UXMVECTORF32@1@B DD 03f317218r ; 0.693147 ; DirectX::g_XMInvLgE
	DD	03f317218r			; 0.693147
	DD	03f317218r			; 0.693147
	DD	03f317218r			; 0.693147
CONST	ENDS
;	COMDAT ?g_XMLgE@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLgE@DirectX@@3UXMVECTORF32@1@B DD 03fb8aa3br ; 1.4427 ; DirectX::g_XMLgE
	DD	03fb8aa3br			; 1.4427
	DD	03fb8aa3br			; 1.4427
	DD	03fb8aa3br			; 1.4427
CONST	ENDS
;	COMDAT ?g_XMLogEst7@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst7@DirectX@@3UXMVECTORF32@1@B DD 0bc2d4f59r ; -0.010578 ; DirectX::g_XMLogEst7
	DD	0bc2d4f59r			; -0.010578
	DD	0bc2d4f59r			; -0.010578
	DD	0bc2d4f59r			; -0.010578
CONST	ENDS
;	COMDAT ?g_XMLogEst6@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst6@DirectX@@3UXMVECTORF32@1@B DD 03d6a1405r ; 0.057148 ; DirectX::g_XMLogEst6
	DD	03d6a1405r			; 0.057148
	DD	03d6a1405r			; 0.057148
	DD	03d6a1405r			; 0.057148
CONST	ENDS
;	COMDAT ?g_XMLogEst5@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst5@DirectX@@3UXMVECTORF32@1@B DD 0be153261r ; -0.1457 ; DirectX::g_XMLogEst5
	DD	0be153261r			; -0.1457
	DD	0be153261r			; -0.1457
	DD	0be153261r			; -0.1457
CONST	ENDS
;	COMDAT ?g_XMLogEst4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst4@DirectX@@3UXMVECTORF32@1@B DD 03e7e8e61r ; 0.24859 ; DirectX::g_XMLogEst4
	DD	03e7e8e61r			; 0.24859
	DD	03e7e8e61r			; 0.24859
	DD	03e7e8e61r			; 0.24859
CONST	ENDS
;	COMDAT ?g_XMLogEst3@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst3@DirectX@@3UXMVECTORF32@1@B DD 0beb359der ; -0.350295 ; DirectX::g_XMLogEst3
	DD	0beb359der			; -0.350295
	DD	0beb359der			; -0.350295
	DD	0beb359der			; -0.350295
CONST	ENDS
;	COMDAT ?g_XMLogEst2@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst2@DirectX@@3UXMVECTORF32@1@B DD 03ef571d2r ; 0.479384 ; DirectX::g_XMLogEst2
	DD	03ef571d2r			; 0.479384
	DD	03ef571d2r			; 0.479384
	DD	03ef571d2r			; 0.479384
CONST	ENDS
;	COMDAT ?g_XMLogEst1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst1@DirectX@@3UXMVECTORF32@1@B DD 0bf38a351r ; -0.721242 ; DirectX::g_XMLogEst1
	DD	0bf38a351r			; -0.721242
	DD	0bf38a351r			; -0.721242
	DD	0bf38a351r			; -0.721242
CONST	ENDS
;	COMDAT ?g_XMLogEst0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMLogEst0@DirectX@@3UXMVECTORF32@1@B DD 03fb8aa2ar ; 1.44269 ; DirectX::g_XMLogEst0
	DD	03fb8aa2ar			; 1.44269
	DD	03fb8aa2ar			; 1.44269
	DD	03fb8aa2ar			; 1.44269
CONST	ENDS
;	COMDAT ?g_XMExpEst7@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst7@DirectX@@3UXMVECTORF32@1@B DD 0b7364261r ; -1.08635e-05 ; DirectX::g_XMExpEst7
	DD	0b7364261r			; -1.08635e-05
	DD	0b7364261r			; -1.08635e-05
	DD	0b7364261r			; -1.08635e-05
CONST	ENDS
;	COMDAT ?g_XMExpEst6@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst6@DirectX@@3UXMVECTORF32@1@B DD 0391aa7d7r ; 0.000147491 ; DirectX::g_XMExpEst6
	DD	0391aa7d7r			; 0.000147491
	DD	0391aa7d7r			; 0.000147491
	DD	0391aa7d7r			; 0.000147491
CONST	ENDS
;	COMDAT ?g_XMExpEst5@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst5@DirectX@@3UXMVECTORF32@1@B DD 0baae1854r ; -0.00132824 ; DirectX::g_XMExpEst5
	DD	0baae1854r			; -0.00132824
	DD	0baae1854r			; -0.00132824
	DD	0baae1854r			; -0.00132824
CONST	ENDS
;	COMDAT ?g_XMExpEst4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst4@DirectX@@3UXMVECTORF32@1@B DD 03c1d8c54r ; 0.00961598 ; DirectX::g_XMExpEst4
	DD	03c1d8c54r			; 0.00961598
	DD	03c1d8c54r			; 0.00961598
	DD	03c1d8c54r			; 0.00961598
CONST	ENDS
;	COMDAT ?g_XMExpEst3@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst3@DirectX@@3UXMVECTORF32@1@B DD 0bd6357car ; -0.0555036 ; DirectX::g_XMExpEst3
	DD	0bd6357car			; -0.0555036
	DD	0bd6357car			; -0.0555036
	DD	0bd6357car			; -0.0555036
CONST	ENDS
;	COMDAT ?g_XMExpEst2@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst2@DirectX@@3UXMVECTORF32@1@B DD 03e75fdedr ; 0.240226 ; DirectX::g_XMExpEst2
	DD	03e75fdedr			; 0.240226
	DD	03e75fdedr			; 0.240226
	DD	03e75fdedr			; 0.240226
CONST	ENDS
;	COMDAT ?g_XMExpEst1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMExpEst1@DirectX@@3UXMVECTORF32@1@B DD 0bf317218r ; -0.693147 ; DirectX::g_XMExpEst1
	DD	0bf317218r			; -0.693147
	DD	0bf317218r			; -0.693147
	DD	0bf317218r			; -0.693147
CONST	ENDS
;	COMDAT ?g_XM253@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XM253@DirectX@@3UXMVECTORI32@1@B DD 0fdH		; DirectX::g_XM253
	DD	0fdH
	DD	0fdH
	DD	0fdH
CONST	ENDS
;	COMDAT ?g_XMBinNeg150@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMBinNeg150@DirectX@@3UXMVECTORU32@1@B DD 0c3160000H	; DirectX::g_XMBinNeg150
	DD	0c3160000H
	DD	0c3160000H
	DD	0c3160000H
CONST	ENDS
;	COMDAT ?g_XMBin128@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMBin128@DirectX@@3UXMVECTORI32@1@B DD 043000000H	; DirectX::g_XMBin128
	DD	043000000H
	DD	043000000H
	DD	043000000H
CONST	ENDS
;	COMDAT ?g_XMNegQNaN@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMNegQNaN@DirectX@@3UXMVECTORU32@1@B DD 0ffc00000H	; DirectX::g_XMNegQNaN
	DD	0ffc00000H
	DD	0ffc00000H
	DD	0ffc00000H
CONST	ENDS
;	COMDAT ?g_XMNegInfinity@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMNegInfinity@DirectX@@3UXMVECTORU32@1@B DD 0ff800000H ; DirectX::g_XMNegInfinity
	DD	0ff800000H
	DD	0ff800000H
	DD	0ff800000H
CONST	ENDS
;	COMDAT ?g_XMMinNormal@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMinNormal@DirectX@@3UXMVECTORI32@1@B DD 0800000H	; DirectX::g_XMMinNormal
	DD	0800000H
	DD	0800000H
	DD	0800000H
CONST	ENDS
;	COMDAT ?g_XMNumTrailing@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMNumTrailing@DirectX@@3UXMVECTORI32@1@B DD 017H	; DirectX::g_XMNumTrailing
	DD	017H
	DD	017H
	DD	017H
CONST	ENDS
;	COMDAT ?g_XMSubnormalExponent@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMSubnormalExponent@DirectX@@3UXMVECTORI32@1@B DD 0ffffff82H ; DirectX::g_XMSubnormalExponent
	DD	0ffffff82H
	DD	0ffffff82H
	DD	0ffffff82H
CONST	ENDS
;	COMDAT ?g_XMExponentBias@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMExponentBias@DirectX@@3UXMVECTORI32@1@B DD 07fH	; DirectX::g_XMExponentBias
	DD	07fH
	DD	07fH
	DD	07fH
CONST	ENDS
;	COMDAT ?g_XMsrgbA1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMsrgbA1@DirectX@@3UXMVECTORF32@1@B DD 03f870a3dr ; 1.055 ; DirectX::g_XMsrgbA1
	DD	03f870a3dr			; 1.055
	DD	03f870a3dr			; 1.055
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMsrgbA@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMsrgbA@DirectX@@3UXMVECTORF32@1@B DD 03d6147aer ; 0.055 ; DirectX::g_XMsrgbA
	DD	03d6147aer			; 0.055
	DD	03d6147aer			; 0.055
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMsrgbScale@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMsrgbScale@DirectX@@3UXMVECTORF32@1@B DD 0414eb852r ; 12.92 ; DirectX::g_XMsrgbScale
	DD	0414eb852r			; 12.92
	DD	0414eb852r			; 12.92
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMUnsignedFix@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMUnsignedFix@DirectX@@3UXMVECTORF32@1@B DD 04f000000r ; 2.14748e+09 ; DirectX::g_XMUnsignedFix
	DD	04f000000r			; 2.14748e+09
	DD	04f000000r			; 2.14748e+09
	DD	04f000000r			; 2.14748e+09
CONST	ENDS
;	COMDAT ?g_XMMaxUInt@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMMaxUInt@DirectX@@3UXMVECTORF32@1@B DD 04f7fffffr ; 4.29497e+09 ; DirectX::g_XMMaxUInt
	DD	04f7fffffr			; 4.29497e+09
	DD	04f7fffffr			; 4.29497e+09
	DD	04f7fffffr			; 4.29497e+09
CONST	ENDS
;	COMDAT ?g_XMMaxInt@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMMaxInt@DirectX@@3UXMVECTORF32@1@B DD 04effffffr ; 2.14748e+09 ; DirectX::g_XMMaxInt
	DD	04effffffr			; 2.14748e+09
	DD	04effffffr			; 2.14748e+09
	DD	04effffffr			; 2.14748e+09
CONST	ENDS
;	COMDAT ?g_XMFixUnsigned@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixUnsigned@DirectX@@3UXMVECTORF32@1@B DD 04f000000r ; 2.14748e+09 ; DirectX::g_XMFixUnsigned
	DD	04f000000r			; 2.14748e+09
	DD	04f000000r			; 2.14748e+09
	DD	04f000000r			; 2.14748e+09
CONST	ENDS
;	COMDAT ?g_XMAddByte4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMAddByte4@DirectX@@3UXMVECTORF32@1@B DD 0c3000000r ; -128 ; DirectX::g_XMAddByte4
	DD	0c7000000r			; -32768
	DD	0cb000000r			; -8.38861e+06
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMXorByte4@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMXorByte4@DirectX@@3UXMVECTORI32@1@B DD 080H	; DirectX::g_XMXorByte4
	DD	08000H
	DD	0800000H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMaskByte4@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskByte4@DirectX@@3UXMVECTORU32@1@B DD 0ffH	; DirectX::g_XMMaskByte4
	DD	0ff00H
	DD	0ff0000H
	DD	0ff000000H
CONST	ENDS
;	COMDAT ?g_XMMulDec4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMMulDec4@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMMulDec4
	DD	03a800000r			; 0.000976563
	DD	035800000r			; 9.53674e-07
	DD	030800000r			; 9.31323e-10
CONST	ENDS
;	COMDAT ?g_XMAddDec4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMAddDec4@DirectX@@3UXMVECTORF32@1@B DD 0c4000000r ; -512 ; DirectX::g_XMAddDec4
	DD	0c9000000r			; -524288
	DD	0ce000000r			; -5.36871e+08
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMAddUDec4@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMAddUDec4@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMAddUDec4
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	04f000000r			; 2.14748e+09
CONST	ENDS
;	COMDAT ?g_XMXorDec4@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMXorDec4@DirectX@@3UXMVECTORI32@1@B DD 0200H	; DirectX::g_XMXorDec4
	DD	080000H
	DD	020000000H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMaskDec4@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMaskDec4@DirectX@@3UXMVECTORI32@1@B DD 03ffH	; DirectX::g_XMMaskDec4
	DD	0ffc00H
	DD	03ff00000H
	DD	0c0000000H
CONST	ENDS
;	COMDAT ?g_XMFlipYW@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMFlipYW@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMFlipYW
	DD	080000000H
	DD	00H
	DD	080000000H
CONST	ENDS
;	COMDAT ?g_XMFlipZW@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMFlipZW@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMFlipZW
	DD	00H
	DD	080000000H
	DD	080000000H
CONST	ENDS
;	COMDAT ?g_XMFlipYZ@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMFlipYZ@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMFlipYZ
	DD	080000000H
	DD	080000000H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMFlipW@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMFlipW@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMFlipW
	DD	00H
	DD	00H
	DD	080000000H
CONST	ENDS
;	COMDAT ?g_XMFlipZ@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMFlipZ@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMFlipZ
	DD	00H
	DD	080000000H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMFlipY@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMFlipY@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMFlipY
	DD	080000000H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMFixupY16W16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixupY16W16@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMFixupY16W16
	DD	03f800000r			; 1
	DD	037800000r			; 1.52588e-05
	DD	037800000r			; 1.52588e-05
CONST	ENDS
;	COMDAT ?g_XMFixupY16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixupY16@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMFixupY16
	DD	037800000r			; 1.52588e-05
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMSelect1011@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMSelect1011@DirectX@@3UXMVECTORU32@1@B DD 0ffffffffH ; DirectX::g_XMSelect1011
	DD	00H
	DD	0ffffffffH
	DD	0ffffffffH
CONST	ENDS
;	COMDAT ?g_XMSelect1110@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMSelect1110@DirectX@@3UXMVECTORU32@1@B DD 0ffffffffH ; DirectX::g_XMSelect1110
	DD	0ffffffffH
	DD	0ffffffffH
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMSelect1100@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMSelect1100@DirectX@@3UXMVECTORU32@1@B DD 0ffffffffH ; DirectX::g_XMSelect1100
	DD	0ffffffffH
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMSelect1000@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMSelect1000@DirectX@@3UXMVECTORU32@1@B DD 0ffffffffH ; DirectX::g_XMSelect1000
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMOneHalfMinusEpsilon@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMOneHalfMinusEpsilon@DirectX@@3UXMVECTORI32@1@B DD 03efffffdH ; DirectX::g_XMOneHalfMinusEpsilon
	DD	03efffffdH
	DD	03efffffdH
	DD	03efffffdH
CONST	ENDS
;	COMDAT ?g_XMSelect1010@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMSelect1010@DirectX@@3UXMVECTORU32@1@B DD 0ffffffffH ; DirectX::g_XMSelect1010
	DD	00H
	DD	0ffffffffH
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMSelect0101@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMSelect0101@DirectX@@3UXMVECTORU32@1@B DD 00H	; DirectX::g_XMSelect0101
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
CONST	ENDS
;	COMDAT ?g_XMNegateW@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegateW@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMNegateW
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	0bf800000r			; -1
CONST	ENDS
;	COMDAT ?g_XMNegateZ@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegateZ@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMNegateZ
	DD	03f800000r			; 1
	DD	0bf800000r			; -1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMNegateY@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegateY@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMNegateY
	DD	0bf800000r			; -1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMNegateX@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegateX@DirectX@@3UXMVECTORF32@1@B DD 0bf800000r ; -1 ; DirectX::g_XMNegateX
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMMaskByte@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMMaskByte@DirectX@@3UXMVECTORI32@1@B DD 0ffH	; DirectX::g_XMMaskByte
	DD	0ffH
	DD	0ffH
	DD	0ffH
CONST	ENDS
;	COMDAT ?g_XMNoFraction@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNoFraction@DirectX@@3UXMVECTORF32@1@B DD 04b000000r ; 8.38861e+06 ; DirectX::g_XMNoFraction
	DD	04b000000r			; 8.38861e+06
	DD	04b000000r			; 8.38861e+06
	DD	04b000000r			; 8.38861e+06
CONST	ENDS
;	COMDAT ?g_XMNormalizeX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNormalizeX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B DD 038000100r ; 3.05185e-05 ; DirectX::g_XMNormalizeX16Y16Z16W16
	DD	038000100r			; 3.05185e-05
	DD	030000100r			; 4.65675e-10
	DD	030000100r			; 4.65675e-10
CONST	ENDS
;	COMDAT ?g_XMFixX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixX16Y16Z16W16@DirectX@@3UXMVECTORF32@1@B DD 0c7000000r ; -32768 ; DirectX::g_XMFixX16Y16Z16W16
	DD	0c7000000r			; -32768
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMFlipX16Y16Z16W16@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFlipX16Y16Z16W16@DirectX@@3UXMVECTORI32@1@B DD 08000H ; DirectX::g_XMFlipX16Y16Z16W16
	DD	08000H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMaskX16Y16Z16W16@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskX16Y16Z16W16@DirectX@@3UXMVECTORU32@1@B DD 0ffffH ; DirectX::g_XMMaskX16Y16Z16W16
	DD	0ffffH
	DD	0ffff0000H
	DD	0ffff0000H
CONST	ENDS
;	COMDAT ?g_XMNormalizeX16Y16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNormalizeX16Y16@DirectX@@3UXMVECTORF32@1@B DD 038000100r ; 3.05185e-05 ; DirectX::g_XMNormalizeX16Y16
	DD	030000100r			; 4.65675e-10
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMFixX16Y16@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixX16Y16@DirectX@@3UXMVECTORF32@1@B DD 0c7000000r ; -32768 ; DirectX::g_XMFixX16Y16
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMFlipX16Y16@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFlipX16Y16@DirectX@@3UXMVECTORI32@1@B DD 08000H	; DirectX::g_XMFlipX16Y16
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMaskX16Y16@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskX16Y16@DirectX@@3UXMVECTORU32@1@B DD 0ffffH	; DirectX::g_XMMaskX16Y16
	DD	0ffff0000H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMNormalizeA2B10G10R10@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNormalizeA2B10G10R10@DirectX@@3UXMVECTORF32@1@B DD 03b004020r ; 0.00195695 ; DirectX::g_XMNormalizeA2B10G10R10
	DD	036004020r			; 1.91108e-06
	DD	031004020r			; 1.86629e-09
	DD	02faaaaabr			; 3.10441e-10
CONST	ENDS
;	COMDAT ?g_XMFixAA2B10G10R10@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixAA2B10G10R10@DirectX@@3UXMVECTORF32@1@B DD 0c4000000r ; -512 ; DirectX::g_XMFixAA2B10G10R10
	DD	0c9000000r			; -524288
	DD	0ce000000r			; -5.36871e+08
	DD	04f000000r			; 2.14748e+09
CONST	ENDS
;	COMDAT ?g_XMFlipA2B10G10R10@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMFlipA2B10G10R10@DirectX@@3UXMVECTORU32@1@B DD 0200H ; DirectX::g_XMFlipA2B10G10R10
	DD	080000H
	DD	020000000H
	DD	080000000H
CONST	ENDS
;	COMDAT ?g_XMMaskA2B10G10R10@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskA2B10G10R10@DirectX@@3UXMVECTORU32@1@B DD 03ffH ; DirectX::g_XMMaskA2B10G10R10
	DD	0ffc00H
	DD	03ff00000H
	DD	0c0000000H
CONST	ENDS
;	COMDAT ?g_XMNormalizeA8R8G8B8@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNormalizeA8R8G8B8@DirectX@@3UXMVECTORF32@1@B DD 033808081r ; 5.98384e-08 ; DirectX::g_XMNormalizeA8R8G8B8
	DD	037808081r			; 1.53186e-05
	DD	03b808081r			; 0.00392157
	DD	02f808081r			; 2.33744e-10
CONST	ENDS
;	COMDAT ?g_XMFixAA8R8G8B8@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFixAA8R8G8B8@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMFixAA8R8G8B8
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	04f000000r			; 2.14748e+09
CONST	ENDS
;	COMDAT ?g_XMFlipA8R8G8B8@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMFlipA8R8G8B8@DirectX@@3UXMVECTORU32@1@B DD 00H	; DirectX::g_XMFlipA8R8G8B8
	DD	00H
	DD	00H
	DD	080000000H
CONST	ENDS
;	COMDAT ?g_XMMaskA8R8G8B8@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskA8R8G8B8@DirectX@@3UXMVECTORU32@1@B DD 0ff0000H ; DirectX::g_XMMaskA8R8G8B8
	DD	0ff00H
	DD	0ffH
	DD	0ff000000H
CONST	ENDS
;	COMDAT ?g_XMNegOneMask@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMNegOneMask@DirectX@@3UXMVECTORU32@1@B DD 0ffffffffH ; DirectX::g_XMNegOneMask
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
CONST	ENDS
;	COMDAT ?g_XMFltMax@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFltMax@DirectX@@3UXMVECTORI32@1@B DD 07f7fffffH	; DirectX::g_XMFltMax
	DD	07f7fffffH
	DD	07f7fffffH
	DD	07f7fffffH
CONST	ENDS
;	COMDAT ?g_XMFltMin@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMFltMin@DirectX@@3UXMVECTORI32@1@B DD 0800000H	; DirectX::g_XMFltMin
	DD	0800000H
	DD	0800000H
	DD	0800000H
CONST	ENDS
;	COMDAT ?g_XMAbsMask@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMAbsMask@DirectX@@3UXMVECTORI32@1@B DD 07fffffffH	; DirectX::g_XMAbsMask
	DD	07fffffffH
	DD	07fffffffH
	DD	07fffffffH
CONST	ENDS
;	COMDAT ?g_XMQNaNTest@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMQNaNTest@DirectX@@3UXMVECTORI32@1@B DD 07fffffH	; DirectX::g_XMQNaNTest
	DD	07fffffH
	DD	07fffffH
	DD	07fffffH
CONST	ENDS
;	COMDAT ?g_XMQNaN@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMQNaN@DirectX@@3UXMVECTORI32@1@B DD 07fc00000H	; DirectX::g_XMQNaN
	DD	07fc00000H
	DD	07fc00000H
	DD	07fc00000H
CONST	ENDS
;	COMDAT ?g_XMInfinity@DirectX@@3UXMVECTORI32@1@B
CONST	SEGMENT
?g_XMInfinity@DirectX@@3UXMVECTORI32@1@B DD 07f800000H	; DirectX::g_XMInfinity
	DD	07f800000H
	DD	07f800000H
	DD	07f800000H
CONST	ENDS
;	COMDAT ?g_XMEpsilon@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMEpsilon@DirectX@@3UXMVECTORF32@1@B DD 034000000r ; 1.19209e-07 ; DirectX::g_XMEpsilon
	DD	034000000r			; 1.19209e-07
	DD	034000000r			; 1.19209e-07
	DD	034000000r			; 1.19209e-07
CONST	ENDS
;	COMDAT ?g_XMReciprocalTwoPi@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMReciprocalTwoPi@DirectX@@3UXMVECTORF32@1@B DD 03e22f983r ; 0.159155 ; DirectX::g_XMReciprocalTwoPi
	DD	03e22f983r			; 0.159155
	DD	03e22f983r			; 0.159155
	DD	03e22f983r			; 0.159155
CONST	ENDS
;	COMDAT ?g_XMTwoPi@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMTwoPi@DirectX@@3UXMVECTORF32@1@B DD 040c90fdbr ; 6.28319 ; DirectX::g_XMTwoPi
	DD	040c90fdbr			; 6.28319
	DD	040c90fdbr			; 6.28319
	DD	040c90fdbr			; 6.28319
CONST	ENDS
;	COMDAT ?g_XMReciprocalPi@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMReciprocalPi@DirectX@@3UXMVECTORF32@1@B DD 03ea2f983r ; 0.31831 ; DirectX::g_XMReciprocalPi
	DD	03ea2f983r			; 0.31831
	DD	03ea2f983r			; 0.31831
	DD	03ea2f983r			; 0.31831
CONST	ENDS
;	COMDAT ?g_XMPi@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMPi@DirectX@@3UXMVECTORF32@1@B DD 040490fdbr ; 3.14159 ; DirectX::g_XMPi
	DD	040490fdbr			; 3.14159
	DD	040490fdbr			; 3.14159
	DD	040490fdbr			; 3.14159
CONST	ENDS
;	COMDAT ?g_XMHalfPi@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMHalfPi@DirectX@@3UXMVECTORF32@1@B DD 03fc90fdbr ; 1.5708 ; DirectX::g_XMHalfPi
	DD	03fc90fdbr			; 1.5708
	DD	03fc90fdbr			; 1.5708
	DD	03fc90fdbr			; 1.5708
CONST	ENDS
;	COMDAT ?g_XMNegativePi@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegativePi@DirectX@@3UXMVECTORF32@1@B DD 0c0490fdbr ; -3.14159 ; DirectX::g_XMNegativePi
	DD	0c0490fdbr			; -3.14159
	DD	0c0490fdbr			; -3.14159
	DD	0c0490fdbr			; -3.14159
CONST	ENDS
;	COMDAT ?g_XMNegativeTwoPi@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegativeTwoPi@DirectX@@3UXMVECTORF32@1@B DD 0c0c90fdbr ; -6.28319 ; DirectX::g_XMNegativeTwoPi
	DD	0c0c90fdbr			; -6.28319
	DD	0c0c90fdbr			; -6.28319
	DD	0c0c90fdbr			; -6.28319
CONST	ENDS
;	COMDAT ?g_XMNegativeOneHalf@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegativeOneHalf@DirectX@@3UXMVECTORF32@1@B DD 0bf000000r ; -0.5 ; DirectX::g_XMNegativeOneHalf
	DD	0bf000000r			; -0.5
	DD	0bf000000r			; -0.5
	DD	0bf000000r			; -0.5
CONST	ENDS
;	COMDAT ?g_XMOneHalf@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMOneHalf@DirectX@@3UXMVECTORF32@1@B DD 03f000000r ; 0.5 ; DirectX::g_XMOneHalf
	DD	03f000000r			; 0.5
	DD	03f000000r			; 0.5
	DD	03f000000r			; 0.5
CONST	ENDS
;	COMDAT ?g_XMNegativeOne@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegativeOne@DirectX@@3UXMVECTORF32@1@B DD 0bf800000r ; -1 ; DirectX::g_XMNegativeOne
	DD	0bf800000r			; -1
	DD	0bf800000r			; -1
	DD	0bf800000r			; -1
CONST	ENDS
;	COMDAT ?g_XMSix@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMSix@DirectX@@3UXMVECTORF32@1@B DD 040c00000r ; 6	; DirectX::g_XMSix
	DD	040c00000r			; 6
	DD	040c00000r			; 6
	DD	040c00000r			; 6
CONST	ENDS
;	COMDAT ?g_XMFour@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMFour@DirectX@@3UXMVECTORF32@1@B DD 040800000r ; 4	; DirectX::g_XMFour
	DD	040800000r			; 4
	DD	040800000r			; 4
	DD	040800000r			; 4
CONST	ENDS
;	COMDAT ?g_XMTwo@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMTwo@DirectX@@3UXMVECTORF32@1@B DD 040000000r ; 2	; DirectX::g_XMTwo
	DD	040000000r			; 2
	DD	040000000r			; 2
	DD	040000000r			; 2
CONST	ENDS
;	COMDAT ?g_XMZero@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMZero@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0	; DirectX::g_XMZero
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMOne3@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMOne3@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1	; DirectX::g_XMOne3
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMOne@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMOne@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1	; DirectX::g_XMOne
	DD	03f800000r			; 1
	DD	03f800000r			; 1
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMMaskW@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskW@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMMaskW
	DD	00H
	DD	00H
	DD	0ffffffffH
CONST	ENDS
;	COMDAT ?g_XMMaskZ@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskZ@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMMaskZ
	DD	00H
	DD	0ffffffffH
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMaskY@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskY@DirectX@@3UXMVECTORU32@1@B DD 00H		; DirectX::g_XMMaskY
	DD	0ffffffffH
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMaskX@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskX@DirectX@@3UXMVECTORU32@1@B DD 0ffffffffH	; DirectX::g_XMMaskX
	DD	00H
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMask3@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMask3@DirectX@@3UXMVECTORU32@1@B DD 0ffffffffH	; DirectX::g_XMMask3
	DD	0ffffffffH
	DD	0ffffffffH
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMMaskXY@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMMaskXY@DirectX@@3UXMVECTORU32@1@B DD 0ffffffffH	; DirectX::g_XMMaskXY
	DD	0ffffffffH
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMNegate3@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMNegate3@DirectX@@3UXMVECTORU32@1@B DD 080000000H	; DirectX::g_XMNegate3
	DD	080000000H
	DD	080000000H
	DD	00H
CONST	ENDS
;	COMDAT ?g_XMNegativeZero@DirectX@@3UXMVECTORU32@1@B
CONST	SEGMENT
?g_XMNegativeZero@DirectX@@3UXMVECTORU32@1@B DD 080000000H ; DirectX::g_XMNegativeZero
	DD	080000000H
	DD	080000000H
	DD	080000000H
CONST	ENDS
;	COMDAT ?g_XMNegIdentityR3@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegIdentityR3@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMNegIdentityR3
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	0bf800000r			; -1
CONST	ENDS
;	COMDAT ?g_XMNegIdentityR2@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegIdentityR2@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMNegIdentityR2
	DD	000000000r			; 0
	DD	0bf800000r			; -1
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMNegIdentityR1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegIdentityR1@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMNegIdentityR1
	DD	0bf800000r			; -1
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMNegIdentityR0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMNegIdentityR0@DirectX@@3UXMVECTORF32@1@B DD 0bf800000r ; -1 ; DirectX::g_XMNegIdentityR0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMIdentityR3@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMIdentityR3@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMIdentityR3
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	03f800000r			; 1
CONST	ENDS
;	COMDAT ?g_XMIdentityR2@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMIdentityR2@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMIdentityR2
	DD	000000000r			; 0
	DD	03f800000r			; 1
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMIdentityR1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMIdentityR1@DirectX@@3UXMVECTORF32@1@B DD 000000000r ; 0 ; DirectX::g_XMIdentityR1
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMIdentityR0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMIdentityR0@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMIdentityR0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
CONST	ENDS
;	COMDAT ?g_XMPiConstants0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMPiConstants0@DirectX@@3UXMVECTORF32@1@B DD 040490fdbr ; 3.14159 ; DirectX::g_XMPiConstants0
	DD	040c90fdbr			; 6.28319
	DD	03ea2f983r			; 0.31831
	DD	03e22f983r			; 0.159155
CONST	ENDS
;	COMDAT ?g_XMArcEstCoefficients@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMArcEstCoefficients@DirectX@@3UXMVECTORF32@1@B DD 03fc90da4r ; 1.57073 ; DirectX::g_XMArcEstCoefficients
	DD	0be593484r			; -0.212114
	DD	03d981627r			; 0.074261
	DD	0bc996e30r			; -0.0187293
CONST	ENDS
;	COMDAT ?g_XMTanEstCoefficients@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMTanEstCoefficients@DirectX@@3UXMVECTORF32@1@B DD 0401ef9dbr ; 2.484 ; DirectX::g_XMTanEstCoefficients
	DD	0be482f23r			; -0.195492
	DD	0401de9e6r			; 2.4674
	DD	03ea2f983r			; 0.31831
CONST	ENDS
;	COMDAT ?g_XMATanEstCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMATanEstCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 0bea91d04r ; -0.330299 ; DirectX::g_XMATanEstCoefficients1
	DD	03e3876e2r			; 0.180141
	DD	0bdae5a36r			; -0.085133
	DD	03caaae5fr			; 0.0208351
CONST	ENDS
;	COMDAT ?g_XMATanEstCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMATanEstCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 03f7ff738r ; 0.999866 ; DirectX::g_XMATanEstCoefficients0
	DD	03f7ff738r			; 0.999866
	DD	03f7ff738r			; 0.999866
	DD	03f7ff738r			; 0.999866
CONST	ENDS
;	COMDAT ?g_XMATanCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMATanCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 0bd9a3174r ; -0.0752896 ; DirectX::g_XMATanCoefficients1
	DD	03d2fc1fer			; 0.0429096
	DD	0bc846e02r			; -0.0161657
	DD	03b3bd74ar			; 0.00286623
CONST	ENDS
;	COMDAT ?g_XMATanCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMATanCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 0beaaaa6cr ; -0.333331 ; DirectX::g_XMATanCoefficients0
	DD	03e4cbbe5r			; 0.199936
	DD	0be117fc7r			; -0.142089
	DD	03dda3d83r			; 0.106563
CONST	ENDS
;	COMDAT ?g_XMArcCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMArcCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 03cfd10f8r ; 0.0308919 ; DirectX::g_XMArcCoefficients1
	DD	0bc8bfc66r			; -0.0170881
	DD	03bda90c5r			; 0.00667009
	DD	0baa57a2cr			; -0.00126249
CONST	ENDS
;	COMDAT ?g_XMArcCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMArcCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 03fc90fdar ; 1.5708 ; DirectX::g_XMArcCoefficients0
	DD	0be5bbfcar			; -0.214599
	DD	03db63a9er			; 0.088979
	DD	0bd4d8392r			; -0.0501743
CONST	ENDS
;	COMDAT ?g_XMTanCoefficients2@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMTanCoefficients2@DirectX@@3UXMVECTORF32@1@B DD 03a1aac12r ; 0.000590027 ; DirectX::g_XMTanCoefficients2
	DD	0397abeb9r			; 0.000239129
	DD	038cb3f0cr			; 9.69154e-05
	DD	03824bec9r			; 3.92783e-05
CONST	ENDS
;	COMDAT ?g_XMTanCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMTanCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 03cb327a4r ; 0.0218695 ; DirectX::g_XMTanCoefficients1
	DD	03c11371br			; 0.00886324
	DD	03b6b69e9r			; 0.00359213
	DD	03abed1b3r			; 0.00145583
CONST	ENDS
;	COMDAT ?g_XMTanCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMTanCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 03f800000r ; 1 ; DirectX::g_XMTanCoefficients0
	DD	03eaaaaabr			; 0.333333
	DD	03e088889r			; 0.133333
	DD	03d5d0dd1r			; 0.0539683
CONST	ENDS
;	COMDAT ?g_XMCosCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMCosCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 0b48bdd11r ; -2.60516e-07 ; DirectX::g_XMCosCoefficients1
	DD	0befff67er			; -0.499927
	DD	03d29f587r			; 0.0414939
	DD	0baa69fdbr			; -0.00127124
CONST	ENDS
;	COMDAT ?g_XMCosCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMCosCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 0bf000000r ; -0.5 ; DirectX::g_XMCosCoefficients0
	DD	03d2aaaa3r			; 0.0416666
	DD	0bab609aar			; -0.00138884
	DD	037cfb4c2r			; 2.47605e-05
CONST	ENDS
;	COMDAT ?g_XMSinCoefficients1@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMSinCoefficients1@DirectX@@3UXMVECTORF32@1@B DD 0b2cd365br ; -2.38899e-08 ; DirectX::g_XMSinCoefficients1
	DD	0be2aa888r			; -0.166659
	DD	03c08373cr			; 0.00831395
	DD	0b9423ec8r			; -0.000185247
CONST	ENDS
;	COMDAT ?g_XMSinCoefficients0@DirectX@@3UXMVECTORF32@1@B
CONST	SEGMENT
?g_XMSinCoefficients0@DirectX@@3UXMVECTORF32@1@B DD 0be2aaaabr ; -0.166667 ; DirectX::g_XMSinCoefficients0
	DD	03c088886r			; 0.00833333
	DD	0b9500bf1r			; -0.000198409
	DD	03638b88er			; 2.75256e-06
CONST	ENDS
;	COMDAT ?DefaultDelegateCheckMode@WRL@Microsoft@@3W4DelegateCheckMode@12@B
CONST	SEGMENT
?DefaultDelegateCheckMode@WRL@Microsoft@@3W4DelegateCheckMode@12@B DD 01H ; Microsoft::WRL::DefaultDelegateCheckMode
CONST	ENDS
;	COMDAT ___pobjectentrylast
minATL$__z	SEGMENT
___pobjectentrylast DD 00H
minATL$__z	ENDS
;	COMDAT ___pobjectentrymid
minATL$__m	SEGMENT
___pobjectentrymid DD 00H
minATL$__m	ENDS
;	COMDAT ___pobjectentryfirst
minATL$__a	SEGMENT
___pobjectentryfirst DD 00H
minATL$__a	ENDS
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXW4align_val_t@std@@@Z ; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXIW4align_val_t@std@@@Z ; __empty_global_delete
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	_fabsf
PUBLIC	??0exception@std@@QAE@QBDH@Z			; std::exception::exception
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@AAE@QBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??1bad_alloc@std@@UAE@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?max@?$numeric_limits@H@std@@SAHXZ		; std::numeric_limits<int>::max
PUBLIC	?_Allocate@_Default_allocate_traits@std@@SAPAXI@Z ; std::_Default_allocate_traits::_Allocate
PUBLIC	?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z ; std::_Adjust_manually_vector_aligned
PUBLIC	??$_Convert_size@I@std@@YAII@Z			; std::_Convert_size<unsigned int>
PUBLIC	??0_Container_proxy@std@@QAE@PAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy
PUBLIC	??0_Container_base12@std@@QAE@XZ		; std::_Container_base12::_Container_base12
PUBLIC	?_Orphan_all@_Container_base12@std@@QAEXXZ	; std::_Container_base12::_Orphan_all
PUBLIC	?_Swap_proxy_and_iterators@_Container_base12@std@@QAEXAAU12@@Z ; std::_Container_base12::_Swap_proxy_and_iterators
PUBLIC	?_Release@_Basic_container_proxy_ptr12@std@@QAEXXZ ; std::_Basic_container_proxy_ptr12::_Release
PUBLIC	??$addressof@U_Container_base12@std@@@std@@YAPAU_Container_base12@0@AAU10@@Z ; std::addressof<std::_Container_base12>
PUBLIC	??$_Construct_in_place@U_Container_proxy@std@@PAU_Container_base12@2@@std@@YAXAAU_Container_proxy@0@$$QAPAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QAEXQADI@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
PUBLIC	?length@?$_Narrow_char_traits@DH@std@@SAIQBD@Z	; std::_Narrow_char_traits<char,int>::length
PUBLIC	?copy@?$_Narrow_char_traits@DH@std@@SAPADQADQBDI@Z ; std::_Narrow_char_traits<char,int>::copy
PUBLIC	?move@?$_Narrow_char_traits@DH@std@@SAPADQADQBDI@Z ; std::_Narrow_char_traits<char,int>::move
PUBLIC	?assign@?$_Narrow_char_traits@DH@std@@SAXAADABD@Z ; std::_Narrow_char_traits<char,int>::assign
PUBLIC	?eq@?$_Narrow_char_traits@DH@std@@SA_NABD0@Z	; std::_Narrow_char_traits<char,int>::eq
PUBLIC	?to_char_type@?$_Narrow_char_traits@DH@std@@SADABH@Z ; std::_Narrow_char_traits<char,int>::to_char_type
PUBLIC	?to_int_type@?$_Narrow_char_traits@DH@std@@SAHABD@Z ; std::_Narrow_char_traits<char,int>::to_int_type
PUBLIC	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NABH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
PUBLIC	?not_eof@?$_Narrow_char_traits@DH@std@@SAHABH@Z	; std::_Narrow_char_traits<char,int>::not_eof
PUBLIC	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ	; std::_Narrow_char_traits<char,int>::eof
PUBLIC	?_Xlen_string@std@@YAXXZ			; std::_Xlen_string
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::_Default_allocator_traits<std::allocator<char> >::max_size
PUBLIC	?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@ABV32@@Z ; std::_Default_allocator_traits<std::allocator<char> >::select_on_container_copy_construction
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QBE_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
PUBLIC	??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
PUBLIC	??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
PUBLIC	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$allocator@D@1@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?_Move_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@U_Equal_allocators@2@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Move_assign
PUBLIC	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
PUBLIC	?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Memcpy_val_from
PUBLIC	?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@U?$integral_constant@_N$00@2@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents
PUBLIC	?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct_lv_contents
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
PUBLIC	?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAIIII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
PUBLIC	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABEII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
PUBLIC	?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
PUBLIC	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
PUBLIC	?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Swap_proxy_and_iterators
PUBLIC	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
PUBLIC	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABEABV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>
PUBLIC	??1Exception@@UAE@XZ				; Exception::~Exception
PUBLIC	??0Exception@@QAE@ABV0@@Z			; Exception::Exception
PUBLIC	??_GException@@UAEPAXI@Z			; Exception::`scalar deleting destructor'
PUBLIC	?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IUnknown>::InternalRelease
PUBLIC	??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAE@XZ	; Microsoft::WRL::ComPtr<IUnknown>::~ComPtr<IUnknown>
PUBLIC	??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAEPAXI@Z ; Microsoft::WRL::ComPtr<IUnknown>::`vector deleting destructor'
PUBLIC	??0?$fpos@U_Mbstatet@@@std@@QAE@_J@Z		; std::fpos<_Mbstatet>::fpos<_Mbstatet>
PUBLIC	??B?$fpos@U_Mbstatet@@@std@@QBE_JXZ		; std::fpos<_Mbstatet>::operator __int64
PUBLIC	??0GraphicsException@Graphics@@QAE@HPBDJ@Z	; Graphics::GraphicsException::GraphicsException
PUBLIC	?what@GraphicsException@Graphics@@UBEPBDXZ	; Graphics::GraphicsException::what
PUBLIC	?GetType@GraphicsException@Graphics@@UBEPBDXZ	; Graphics::GraphicsException::GetType
PUBLIC	?TranslateErrorCode@GraphicsException@Graphics@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@J@Z ; Graphics::GraphicsException::TranslateErrorCode
PUBLIC	?GetErrorCode@GraphicsException@Graphics@@QBEJXZ ; Graphics::GraphicsException::GetErrorCode
PUBLIC	?GetErrorString@GraphicsException@Graphics@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; Graphics::GraphicsException::GetErrorString
PUBLIC	??1GraphicsException@Graphics@@UAE@XZ		; Graphics::GraphicsException::~GraphicsException
PUBLIC	??0GraphicsException@Graphics@@QAE@ABV01@@Z	; Graphics::GraphicsException::GraphicsException
PUBLIC	??_GGraphicsException@Graphics@@UAEPAXI@Z	; Graphics::GraphicsException::`scalar deleting destructor'
PUBLIC	??0Graphics@@QAE@PAUHWND__@@@Z			; Graphics::Graphics
PUBLIC	?EndFrame@Graphics@@QAEXXZ			; Graphics::EndFrame
PUBLIC	?ClearBuffer@Graphics@@QAEXMMM@Z		; Graphics::ClearBuffer
PUBLIC	?DrawTriangle@Graphics@@QAEXMMM@Z		; Graphics::DrawTriangle
PUBLIC	?InternalRelease@?$ComPtr@UID3D11Device@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<ID3D11Device>::InternalRelease
PUBLIC	??0?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Device>::ComPtr<ID3D11Device>
PUBLIC	??1?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Device>::~ComPtr<ID3D11Device>
PUBLIC	??C?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QBEPAUID3D11Device@@XZ ; Microsoft::WRL::ComPtr<ID3D11Device>::operator->
PUBLIC	??I?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11Device@@@WRL@Microsoft@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D11Device>::operator&
PUBLIC	?ReleaseAndGetAddressOf@?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAEPAPAUID3D11Device@@XZ ; Microsoft::WRL::ComPtr<ID3D11Device>::ReleaseAndGetAddressOf
PUBLIC	?InternalRelease@?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IDXGISwapChain>::InternalRelease
PUBLIC	??0?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IDXGISwapChain>::ComPtr<IDXGISwapChain>
PUBLIC	??1?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IDXGISwapChain>::~ComPtr<IDXGISwapChain>
PUBLIC	??C?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QBEPAUIDXGISwapChain@@XZ ; Microsoft::WRL::ComPtr<IDXGISwapChain>::operator->
PUBLIC	??I?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IDXGISwapChain>::operator&
PUBLIC	?ReleaseAndGetAddressOf@?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QAEPAPAUIDXGISwapChain@@XZ ; Microsoft::WRL::ComPtr<IDXGISwapChain>::ReleaseAndGetAddressOf
PUBLIC	?InternalRelease@?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<ID3D11DeviceContext>::InternalRelease
PUBLIC	??0?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11DeviceContext>::ComPtr<ID3D11DeviceContext>
PUBLIC	??1?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11DeviceContext>::~ComPtr<ID3D11DeviceContext>
PUBLIC	??C?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@QBEPAUID3D11DeviceContext@@XZ ; Microsoft::WRL::ComPtr<ID3D11DeviceContext>::operator->
PUBLIC	??I?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D11DeviceContext>::operator&
PUBLIC	?ReleaseAndGetAddressOf@?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@QAEPAPAUID3D11DeviceContext@@XZ ; Microsoft::WRL::ComPtr<ID3D11DeviceContext>::ReleaseAndGetAddressOf
PUBLIC	?InternalRelease@?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<ID3D11RenderTargetView>::InternalRelease
PUBLIC	??0?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11RenderTargetView>::ComPtr<ID3D11RenderTargetView>
PUBLIC	??1?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11RenderTargetView>::~ComPtr<ID3D11RenderTargetView>
PUBLIC	?Get@?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@QBEPAUID3D11RenderTargetView@@XZ ; Microsoft::WRL::ComPtr<ID3D11RenderTargetView>::Get
PUBLIC	??I?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D11RenderTargetView>::operator&
PUBLIC	?GetAddressOf@?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@QAEPAPAUID3D11RenderTargetView@@XZ ; Microsoft::WRL::ComPtr<ID3D11RenderTargetView>::GetAddressOf
PUBLIC	?ReleaseAndGetAddressOf@?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@QAEPAPAUID3D11RenderTargetView@@XZ ; Microsoft::WRL::ComPtr<ID3D11RenderTargetView>::ReleaseAndGetAddressOf
PUBLIC	?InternalRelease@?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<ID3D11DepthStencilView>::InternalRelease
PUBLIC	??0?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11DepthStencilView>::ComPtr<ID3D11DepthStencilView>
PUBLIC	??1?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11DepthStencilView>::~ComPtr<ID3D11DepthStencilView>
PUBLIC	?Get@?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@QBEPAUID3D11DepthStencilView@@XZ ; Microsoft::WRL::ComPtr<ID3D11DepthStencilView>::Get
PUBLIC	??I?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D11DepthStencilView>::operator&
PUBLIC	?ReleaseAndGetAddressOf@?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@QAEPAPAUID3D11DepthStencilView@@XZ ; Microsoft::WRL::ComPtr<ID3D11DepthStencilView>::ReleaseAndGetAddressOf
PUBLIC	??BXMVECTORF32@DirectX@@QBE?AT__m128@@XZ	; DirectX::XMVECTORF32::operator __m128
PUBLIC	??BXMVECTORU32@DirectX@@QBE?AT__m128@@XZ	; DirectX::XMVECTORU32::operator __m128
PUBLIC	??DXMMATRIX@DirectX@@QBQ?AU01@U01@@Z		; DirectX::XMMATRIX::operator*
PUBLIC	?XMVectorSet@DirectX@@YQ?AT__m128@@MMMM@Z	; DirectX::XMVectorSet
PUBLIC	?XMMatrixMultiply@DirectX@@YQ?AUXMMATRIX@1@U21@ABU21@@Z ; DirectX::XMMatrixMultiply
PUBLIC	?XMMatrixTranspose@DirectX@@YQ?AUXMMATRIX@1@U21@@Z ; DirectX::XMMatrixTranspose
PUBLIC	?XMMatrixTranslation@DirectX@@YQ?AUXMMATRIX@1@MMM@Z ; DirectX::XMMatrixTranslation
PUBLIC	?XMMatrixRotationX@DirectX@@YQ?AUXMMATRIX@1@M@Z	; DirectX::XMMatrixRotationX
PUBLIC	?XMMatrixRotationY@DirectX@@YQ?AUXMMATRIX@1@M@Z	; DirectX::XMMatrixRotationY
PUBLIC	?XMMatrixPerspectiveLH@DirectX@@YQ?AUXMMATRIX@1@MMMM@Z ; DirectX::XMMatrixPerspectiveLH
PUBLIC	?XMScalarNearEqual@DirectX@@YA_NMMM@Z		; DirectX::XMScalarNearEqual
PUBLIC	?XMScalarSinCos@DirectX@@YAXPAM0M@Z		; DirectX::XMScalarSinCos
PUBLIC	??0?$ComPtrRef@V?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UIDXGISwapChain@@@23@@Z ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IDXGISwapChain> >::ComPtrRef<Microsoft::WRL::ComPtr<IDXGISwapChain> >
PUBLIC	??B?$ComPtrRef@V?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUIDXGISwapChain@@XZ ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IDXGISwapChain> >::operator IDXGISwapChain * *
PUBLIC	??0?$ComPtrRef@V?$ComPtr@UID3D11Device@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11Device@@@23@@Z ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11Device> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11Device> >
PUBLIC	??B?$ComPtrRef@V?$ComPtr@UID3D11Device@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11Device@@XZ ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11Device> >::operator ID3D11Device * *
PUBLIC	??0?$ComPtrRef@V?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11DeviceContext@@@23@@Z ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11DeviceContext> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11DeviceContext> >
PUBLIC	??B?$ComPtrRef@V?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11DeviceContext@@XZ ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11DeviceContext> >::operator ID3D11DeviceContext * *
PUBLIC	?InternalRelease@?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<ID3D11Resource>::InternalRelease
PUBLIC	??0?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Resource>::ComPtr<ID3D11Resource>
PUBLIC	??1?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Resource>::~ComPtr<ID3D11Resource>
PUBLIC	?Get@?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@QBEPAUID3D11Resource@@XZ ; Microsoft::WRL::ComPtr<ID3D11Resource>::Get
PUBLIC	??I?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D11Resource>::operator&
PUBLIC	?ReleaseAndGetAddressOf@?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@QAEPAPAUID3D11Resource@@XZ ; Microsoft::WRL::ComPtr<ID3D11Resource>::ReleaseAndGetAddressOf
PUBLIC	?__autoclassinit2@?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@QAEXI@Z ; Microsoft::WRL::ComPtr<ID3D11Resource>::__autoclassinit2
PUBLIC	??0?$ComPtrRef@V?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11Resource@@@23@@Z ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11Resource> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11Resource> >
PUBLIC	??B?$ComPtrRef@V?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QBEPAPAXXZ ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11Resource> >::operator void * *
PUBLIC	??0?$ComPtrRef@V?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11RenderTargetView@@@23@@Z ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11RenderTargetView> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11RenderTargetView> >
PUBLIC	??B?$ComPtrRef@V?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11RenderTargetView@@XZ ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11RenderTargetView> >::operator ID3D11RenderTargetView * *
PUBLIC	?InternalRelease@?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<ID3D11DepthStencilState>::InternalRelease
PUBLIC	??0?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11DepthStencilState>::ComPtr<ID3D11DepthStencilState>
PUBLIC	??1?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11DepthStencilState>::~ComPtr<ID3D11DepthStencilState>
PUBLIC	?Get@?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@QBEPAUID3D11DepthStencilState@@XZ ; Microsoft::WRL::ComPtr<ID3D11DepthStencilState>::Get
PUBLIC	??I?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D11DepthStencilState>::operator&
PUBLIC	?ReleaseAndGetAddressOf@?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@QAEPAPAUID3D11DepthStencilState@@XZ ; Microsoft::WRL::ComPtr<ID3D11DepthStencilState>::ReleaseAndGetAddressOf
PUBLIC	?__autoclassinit2@?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@QAEXI@Z ; Microsoft::WRL::ComPtr<ID3D11DepthStencilState>::__autoclassinit2
PUBLIC	??0?$ComPtrRef@V?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11DepthStencilState@@@23@@Z ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11DepthStencilState> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11DepthStencilState> >
PUBLIC	??B?$ComPtrRef@V?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11DepthStencilState@@XZ ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11DepthStencilState> >::operator ID3D11DepthStencilState * *
PUBLIC	?InternalRelease@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::InternalRelease
PUBLIC	??0?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::ComPtr<ID3D11Texture2D>
PUBLIC	??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
PUBLIC	?Get@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QBEPAUID3D11Texture2D@@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::Get
PUBLIC	??I?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::operator&
PUBLIC	?ReleaseAndGetAddressOf@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAEPAPAUID3D11Texture2D@@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::ReleaseAndGetAddressOf
PUBLIC	?__autoclassinit2@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAEXI@Z ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::__autoclassinit2
PUBLIC	??0?$ComPtrRef@V?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11Texture2D@@@23@@Z ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11Texture2D> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11Texture2D> >
PUBLIC	??B?$ComPtrRef@V?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11Texture2D@@XZ ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11Texture2D> >::operator ID3D11Texture2D * *
PUBLIC	??0?$ComPtrRef@V?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11DepthStencilView@@@23@@Z ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11DepthStencilView> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11DepthStencilView> >
PUBLIC	??B?$ComPtrRef@V?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11DepthStencilView@@XZ ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11DepthStencilView> >::operator ID3D11DepthStencilView * *
PUBLIC	?InternalRelease@?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<ID3D11Buffer>::InternalRelease
PUBLIC	??0?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Buffer>::ComPtr<ID3D11Buffer>
PUBLIC	??1?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Buffer>::~ComPtr<ID3D11Buffer>
PUBLIC	?Get@?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QBEPAUID3D11Buffer@@XZ ; Microsoft::WRL::ComPtr<ID3D11Buffer>::Get
PUBLIC	??I?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D11Buffer>::operator&
PUBLIC	?GetAddressOf@?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QAEPAPAUID3D11Buffer@@XZ ; Microsoft::WRL::ComPtr<ID3D11Buffer>::GetAddressOf
PUBLIC	?ReleaseAndGetAddressOf@?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QAEPAPAUID3D11Buffer@@XZ ; Microsoft::WRL::ComPtr<ID3D11Buffer>::ReleaseAndGetAddressOf
PUBLIC	?__autoclassinit2@?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QAEXI@Z ; Microsoft::WRL::ComPtr<ID3D11Buffer>::__autoclassinit2
PUBLIC	??0?$ComPtrRef@V?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11Buffer@@@23@@Z ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11Buffer> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11Buffer> >
PUBLIC	??B?$ComPtrRef@V?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11Buffer@@XZ ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11Buffer> >::operator ID3D11Buffer * *
PUBLIC	?InternalRelease@?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<ID3D11PixelShader>::InternalRelease
PUBLIC	??0?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11PixelShader>::ComPtr<ID3D11PixelShader>
PUBLIC	??1?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11PixelShader>::~ComPtr<ID3D11PixelShader>
PUBLIC	?Get@?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@QBEPAUID3D11PixelShader@@XZ ; Microsoft::WRL::ComPtr<ID3D11PixelShader>::Get
PUBLIC	??I?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D11PixelShader>::operator&
PUBLIC	?ReleaseAndGetAddressOf@?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@QAEPAPAUID3D11PixelShader@@XZ ; Microsoft::WRL::ComPtr<ID3D11PixelShader>::ReleaseAndGetAddressOf
PUBLIC	?__autoclassinit2@?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@QAEXI@Z ; Microsoft::WRL::ComPtr<ID3D11PixelShader>::__autoclassinit2
PUBLIC	?InternalRelease@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<ID3D10Blob>::InternalRelease
PUBLIC	??0?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QAE@XZ	; Microsoft::WRL::ComPtr<ID3D10Blob>::ComPtr<ID3D10Blob>
PUBLIC	??1?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QAE@XZ	; Microsoft::WRL::ComPtr<ID3D10Blob>::~ComPtr<ID3D10Blob>
PUBLIC	??C?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QBEPAUID3D10Blob@@XZ ; Microsoft::WRL::ComPtr<ID3D10Blob>::operator->
PUBLIC	??I?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D10Blob>::operator&
PUBLIC	?ReleaseAndGetAddressOf@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QAEPAPAUID3D10Blob@@XZ ; Microsoft::WRL::ComPtr<ID3D10Blob>::ReleaseAndGetAddressOf
PUBLIC	?__autoclassinit2@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QAEXI@Z ; Microsoft::WRL::ComPtr<ID3D10Blob>::__autoclassinit2
PUBLIC	??0?$ComPtrRef@V?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D10Blob@@@23@@Z ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D10Blob> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D10Blob> >
PUBLIC	??B?$ComPtrRef@V?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D10Blob@@XZ ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D10Blob> >::operator ID3D10Blob * *
PUBLIC	??0?$ComPtrRef@V?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11PixelShader@@@23@@Z ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11PixelShader> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11PixelShader> >
PUBLIC	??B?$ComPtrRef@V?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11PixelShader@@XZ ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11PixelShader> >::operator ID3D11PixelShader * *
PUBLIC	?InternalRelease@?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<ID3D11VertexShader>::InternalRelease
PUBLIC	??0?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11VertexShader>::ComPtr<ID3D11VertexShader>
PUBLIC	??1?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11VertexShader>::~ComPtr<ID3D11VertexShader>
PUBLIC	?Get@?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@QBEPAUID3D11VertexShader@@XZ ; Microsoft::WRL::ComPtr<ID3D11VertexShader>::Get
PUBLIC	??I?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D11VertexShader>::operator&
PUBLIC	?ReleaseAndGetAddressOf@?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@QAEPAPAUID3D11VertexShader@@XZ ; Microsoft::WRL::ComPtr<ID3D11VertexShader>::ReleaseAndGetAddressOf
PUBLIC	?__autoclassinit2@?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@QAEXI@Z ; Microsoft::WRL::ComPtr<ID3D11VertexShader>::__autoclassinit2
PUBLIC	??0?$ComPtrRef@V?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11VertexShader@@@23@@Z ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11VertexShader> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11VertexShader> >
PUBLIC	??B?$ComPtrRef@V?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11VertexShader@@XZ ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11VertexShader> >::operator ID3D11VertexShader * *
PUBLIC	?InternalRelease@?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<ID3D11InputLayout>::InternalRelease
PUBLIC	??0?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11InputLayout>::ComPtr<ID3D11InputLayout>
PUBLIC	??1?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11InputLayout>::~ComPtr<ID3D11InputLayout>
PUBLIC	?Get@?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@QBEPAUID3D11InputLayout@@XZ ; Microsoft::WRL::ComPtr<ID3D11InputLayout>::Get
PUBLIC	??I?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D11InputLayout>::operator&
PUBLIC	?ReleaseAndGetAddressOf@?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@QAEPAPAUID3D11InputLayout@@XZ ; Microsoft::WRL::ComPtr<ID3D11InputLayout>::ReleaseAndGetAddressOf
PUBLIC	?__autoclassinit2@?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@QAEXI@Z ; Microsoft::WRL::ComPtr<ID3D11InputLayout>::__autoclassinit2
PUBLIC	??$size@UD3D11_INPUT_ELEMENT_DESC@@$00@std@@YAIAAY00$$CBUD3D11_INPUT_ELEMENT_DESC@@@Z ; std::size<D3D11_INPUT_ELEMENT_DESC,1>
PUBLIC	??0?$ComPtrRef@V?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11InputLayout@@@23@@Z ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11InputLayout> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11InputLayout> >
PUBLIC	??B?$ComPtrRef@V?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11InputLayout@@XZ ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11InputLayout> >::operator ID3D11InputLayout * *
PUBLIC	??$size@G$0CE@@std@@YAIAAY0CE@$$CBG@Z		; std::size<unsigned short,36>
PUBLIC	??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::str
PUBLIC	??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str
PUBLIC	?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::overflow
PUBLIC	?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::pbackfail
PUBLIC	?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHXZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::underflow
PUBLIC	?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@U_Mbstatet@@@2@_JHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekoff
PUBLIC	?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@U_Mbstatet@@@2@V32@H@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekpos
PUBLIC	?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXXZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Tidy
PUBLIC	?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Getstate
PUBLIC	??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
PUBLIC	?__autoclassinit2@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::__autoclassinit2
PUBLIC	??_G?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
PUBLIC	??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vbase destructor'
PUBLIC	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
PUBLIC	??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
PUBLIC	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??$max@PAD@std@@YAABQADABQAD0@Z			; std::max<char *>
PUBLIC	??$_Unfancy@D@std@@YAPADPAD@Z			; std::_Unfancy<char>
PUBLIC	?pointer_to@?$pointer_traits@PAD@std@@SAPADAAD@Z ; std::pointer_traits<char *>::pointer_to
PUBLIC	??$addressof@V?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::addressof<std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
PUBLIC	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
PUBLIC	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
PUBLIC	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
PUBLIC	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
PUBLIC	??$min@I@std@@YAABIABI0@Z			; std::min<unsigned int>
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
PUBLIC	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAV?$allocator@U_Container_proxy@std@@@1@AAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
PUBLIC	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
PUBLIC	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QAEX$$QAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
PUBLIC	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
PUBLIC	??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
PUBLIC	??$move@AAV?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z ; std::move<std::allocator<char> &>
PUBLIC	??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@D@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
PUBLIC	??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z ; std::_Unfancy<std::_Container_proxy>
PUBLIC	??$addressof@D@std@@YAPADAAD@Z			; std::addressof<char>
PUBLIC	??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z	; std::_Destroy_in_place<char *>
PUBLIC	??R<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV23@QBDI@Z@QBE@QADI0@Z ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign'::`2'::<lambda_1>::operator()
PUBLIC	??$_Reallocate_for@V<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV34@QBDI@Z@PBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV01@IV<lambda_1>@?1??assign@01@QAEAAV01@QBDI@Z@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign'::`2'::<lambda_1>,char const *>
PUBLIC	??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
PUBLIC	??$_Pocma@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@0@Z ; std::_Pocma<std::allocator<char> >
PUBLIC	??$max@I@std@@YAABIABI0@Z			; std::max<unsigned int>
PUBLIC	??$_Get_size_of_n@$00@std@@YAII@Z		; std::_Get_size_of_n<1>
PUBLIC	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
PUBLIC	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z		; std::_Deallocate<8,0>
PUBLIC	??$_Get_size_of_n@$07@std@@YAII@Z		; std::_Get_size_of_n<8>
PUBLIC	??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPAV?$_String_val@U?$_Simple_types@D@std@@@0@AAV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<char> > >
PUBLIC	??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPBV?$_String_val@U?$_Simple_types@D@std@@@0@ABV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<char> > const >
PUBLIC	??$?0ABV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@D@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> const &>
PUBLIC	??$addressof@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@AAU10@@Z ; std::addressof<std::_Container_proxy>
PUBLIC	??$forward@PAU_Container_base12@std@@@std@@YA$$QAPAU_Container_base12@0@AAPAU10@@Z ; std::forward<std::_Container_base12 *>
PUBLIC	??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z ; std::_Insert_string<char,std::char_traits<char>,unsigned int>
PUBLIC	??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
PUBLIC	??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z ; std::forward<std::allocator<char> >
PUBLIC	??$addressof@PAD@std@@YAPAPADAAPAD@Z		; std::addressof<char *>
PUBLIC	??$forward@ABQAD@std@@YAABQADABQAD@Z		; std::forward<char * const &>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??$forward@ABV?$allocator@D@std@@@std@@YAABV?$allocator@D@0@ABV10@@Z ; std::forward<std::allocator<char> const &>
PUBLIC	?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@2@QAU_Container_proxy@2@I@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
PUBLIC	??_E?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@AEPAXI@Z ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor'
PUBLIC	__JustMyCode_Default
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z@4JA ; `std::_Adjust_manually_vector_aligned'::`1'::__LINE__Var
PUBLIC	??_C@_0BB@FCMFBGOM@invalid?5argument@		; `string'
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	??_C@_0GI@JMEOMKJO@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1NA@FEEOBALC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@ ; `string'
PUBLIC	??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ ; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long@		; `string'
PUBLIC	??_7Exception@@6B@				; Exception::`vftable'
PUBLIC	??_7GraphicsException@Graphics@@6B@		; Graphics::GraphicsException::`vftable'
PUBLIC	??_C@_1KK@OEJMKAH@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	?__LINE__Var@?0??XMMatrixPerspectiveLH@DirectX@@YQ?AUXMMATRIX@2@MMMM@Z@4JA ; `DirectX::XMMatrixPerspectiveLH'::`1'::__LINE__Var
PUBLIC	??_C@_1DE@NHJOKGBK@?$AAN?$AAe?$AAa?$AAr?$AAZ?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?4?$AAf?$AA?5?$AA?$CG?$AA?$CG?$AA?5@ ; `string'
PUBLIC	??_C@_1FM@GHGDCEAE@?$AA?$CB?$AAX?$AAM?$AAS?$AAc?$AAa?$AAl?$AAa?$AAr?$AAN?$AAe?$AAa?$AAr?$AAE?$AAq@ ; `string'
PUBLIC	??_C@_1FO@OGFPCKGG@?$AA?$CB?$AAX?$AAM?$AAS?$AAc?$AAa?$AAl?$AAa?$AAr?$AAN?$AAe?$AAa?$AAr?$AAE?$AAq@ ; `string'
PUBLIC	??_C@_1FE@IMEJOJAH@?$AA?$CB?$AAX?$AAM?$AAS?$AAc?$AAa?$AAl?$AAa?$AAr?$AAN?$AAe?$AAa?$AAr?$AAE?$AAq@ ; `string'
PUBLIC	??_C@_1KG@NLJHBPON@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	?__LINE__Var@?0??XMScalarSinCos@DirectX@@YAXPAM0M@Z@4JA ; `DirectX::XMScalarSinCos'::`1'::__LINE__Var
PUBLIC	??_C@_19MFJHDIJG@?$AAp?$AAS?$AAi?$AAn@		; `string'
PUBLIC	??_C@_19MNAGGFOC@?$AAp?$AAC?$AAo?$AAs@		; `string'
PUBLIC	?__LINE__Var@?0???0Graphics@@QAE@PAUHWND__@@@Z@4JA ; `Graphics::Graphics'::`1'::__LINE__Var
PUBLIC	__GUID_dc8e63f3_d12b_4952_b47b_5e45026a862d
PUBLIC	__TI3?AVGraphicsException@Graphics@@
PUBLIC	__CTA3?AVGraphicsException@Graphics@@
PUBLIC	??_R0?AVGraphicsException@Graphics@@@8		; Graphics::GraphicsException `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVGraphicsException@Graphics@@@8??0GraphicsException@Graphics@@QAE@ABV01@@Z76
PUBLIC	??_R0?AVException@@@8				; Exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVException@@@8??0Exception@@QAE@ABV0@@Z72
PUBLIC	??_C@_0DA@OCAIHLLA@F?3?2WindowSandbox?2WindowSandbox?2@ ; `string'
PUBLIC	?__LINE__Var@?0??DrawTriangle@Graphics@@QAEXMMM@Z@4JA ; `Graphics::DrawTriangle'::`1'::__LINE__Var
PUBLIC	??_C@_1CA@PHIKDPIA@?$AAP?$AAi?$AAx?$AAe?$AAl?$AAS?$AAh?$AAa?$AAd?$AAe?$AAr?$AA?4?$AAc?$AAs?$AAo@ ; `string'
PUBLIC	??_C@_1CC@HBAHMJMC@?$AAV?$AAe?$AAr?$AAt?$AAe?$AAx?$AAS?$AAh?$AAa?$AAd?$AAe?$AAr?$AA?4?$AAc?$AAs@ ; `string'
PUBLIC	??_C@_08GCJNLIKG@Position@			; `string'
PUBLIC	?__LINE__Var@?0??EndFrame@Graphics@@QAEXXZ@4JA	; `Graphics::EndFrame'::`1'::__LINE__Var
PUBLIC	??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`vftable'
PUBLIC	??_7?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vftable'
PUBLIC	??_8?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B@ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vbtable'
PUBLIC	??_C@_0O@BLDOFIJ@?$FLDescription?$FN@		; `string'
PUBLIC	??_C@_0N@CHALHMAE@?$FLError?5Code?$FN@		; `string'
PUBLIC	??_C@_0BD@EBLMECGC@Graphics?5Exception@		; `string'
PUBLIC	??_C@_0BF@KPHDJHEI@Undefined?5Error?5Code@	; `string'
PUBLIC	??_C@_1EO@GFNCMDLA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA_@ ; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8 ; std::basic_streambuf<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R4?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ostream<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,0,4,80)'
PUBLIC	??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ios<char,std::char_traits<char> > `RTTI Type Descriptor'
PUBLIC	??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8	; std::basic_ios<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8	; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ios_base@std@@8			; std::ios_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVios_base@std@@@8			; std::ios_base `RTTI Type Descriptor'
PUBLIC	??_R3ios_base@std@@8				; std::ios_base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ios_base@std@@8				; std::ios_base::`RTTI Base Class Array'
PUBLIC	??_R17?0A@EA@?$_Iosb@H@std@@8			; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	??_R0?AV?$_Iosb@H@std@@@8			; std::_Iosb<int> `RTTI Type Descriptor'
PUBLIC	??_R3?$_Iosb@H@std@@8				; std::_Iosb<int>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$_Iosb@H@std@@8				; std::_Iosb<int>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$_Iosb@H@std@@8			; std::_Iosb<int>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@A@3EA@ios_base@std@@8			; std::ios_base::`RTTI Base Class Descriptor at (0,0,4,64)'
PUBLIC	??_R17A@3EA@?$_Iosb@H@std@@8			; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,0,4,64)'
PUBLIC	??_R4Exception@@6B@				; Exception::`RTTI Complete Object Locator'
PUBLIC	??_R3Exception@@8				; Exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Exception@@8				; Exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Exception@@8			; Exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4GraphicsException@Graphics@@6B@		; Graphics::GraphicsException::`RTTI Complete Object Locator'
PUBLIC	??_R3GraphicsException@Graphics@@8		; Graphics::GraphicsException::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2GraphicsException@Graphics@@8		; Graphics::GraphicsException::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@GraphicsException@Graphics@@8	; Graphics::GraphicsException::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@00000000
PUBLIC	__real@3638b88e
PUBLIC	__real@3727c5ac
PUBLIC	__real@37cfb4c2
PUBLIC	__real@39500bf1
PUBLIC	__real@3ab609aa
PUBLIC	__real@3c088886
PUBLIC	__real@3d2aaaa3
PUBLIC	__real@3e22f983
PUBLIC	__real@3e2aaaab
PUBLIC	__real@3f000000
PUBLIC	__real@3f800000
PUBLIC	__real@3fc90fdb
PUBLIC	__real@40000000
PUBLIC	__real@40490fdb
PUBLIC	__real@40a00000
PUBLIC	__real@40c90fdb
PUBLIC	__real@41200000
PUBLIC	__real@44000000
PUBLIC	__real@b2cd365b
PUBLIC	__real@b48bdd11
PUBLIC	__real@bf800000
PUBLIC	__real@bfc90fdb
PUBLIC	__real@c0490fdb
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	??_M@YGXPAXIIP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	??_V@YAXPAXI@Z:PROC				; operator delete[]
EXTRN	__imp___invalid_parameter:PROC
EXTRN	_memcpy:PROC
EXTRN	_memmove:PROC
EXTRN	__imp__LocalFree@4:PROC
EXTRN	__imp__FormatMessageA@28:PROC
EXTRN	__imp___CrtDbgReport:PROC
EXTRN	__imp_??0_Lockit@std@@QAE@H@Z:PROC
EXTRN	__imp_??1_Lockit@std@@QAE@XZ:PROC
EXTRN	_fabs:PROC
EXTRN	?uncaught_exceptions@std@@YAHXZ:PROC		; std::uncaught_exceptions
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	??0Exception@@QAE@IPBD@Z:PROC			; Exception::Exception
EXTRN	?what@Exception@@UBEPBDXZ:PROC			; Exception::what
EXTRN	?GetType@Exception@@UBEPBDXZ:PROC		; Exception::GetType
EXTRN	?GetOriginString@Exception@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ:PROC ; Exception::GetOriginString
EXTRN	??_EException@@UAEPAXI@Z:PROC			; Exception::`vector deleting destructor'
EXTRN	_D3D11CreateDeviceAndSwapChain@48:PROC
EXTRN	_D3DReadFileToBlob@8:PROC
EXTRN	__imp_?good@ios_base@std@@QBE_NXZ:PROC
EXTRN	__imp_?flags@ios_base@std@@QBEHXZ:PROC
EXTRN	__imp_?width@ios_base@std@@QBE_JXZ:PROC
EXTRN	__imp_?width@ios_base@std@@QAE_J_J@Z:PROC
EXTRN	__imp_??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ:PROC
EXTRN	__imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ:PROC
EXTRN	__imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z:PROC
EXTRN	__imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE_JPBD_J@Z:PROC
EXTRN	__imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:PROC
EXTRN	__imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:PROC
EXTRN	__imp_?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:PROC
EXTRN	__imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:PROC
EXTRN	__imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:PROC
EXTRN	__imp_?gbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z:PROC
EXTRN	__imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z:PROC
EXTRN	__imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ:PROC
EXTRN	__imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD0@Z:PROC
EXTRN	__imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z:PROC
EXTRN	__imp_?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ:PROC
EXTRN	__imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ:PROC
EXTRN	__imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z:PROC
EXTRN	__imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ:PROC
EXTRN	__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ:PROC
EXTRN	__imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ:PROC
EXTRN	__imp_?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z:PROC
EXTRN	__imp_??0?$basic_ios@DU?$char_traits@D@std@@@std@@IAE@XZ:PROC
EXTRN	__imp_??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z:PROC
EXTRN	__imp_??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UAE@XZ:PROC
EXTRN	__imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@J@Z:PROC
EXTRN	__imp_?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z:PROC
EXTRN	__imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ:PROC
EXTRN	??_EGraphicsException@Graphics@@UAEPAXI@Z:PROC	; Graphics::GraphicsException::`vector deleting destructor'
EXTRN	__imp___wassert:PROC
EXTRN	??_E?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z:PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor'
EXTRN	??_E?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z:PROC ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor'
EXTRN	?_Lock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEXXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::_Lock
EXTRN	?_Unlock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEXXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::_Unlock
EXTRN	?imbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z:PROC ; std::basic_streambuf<char,std::char_traits<char> >::imbue
EXTRN	?setbuf@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEPAV12@PAD_J@Z:PROC ; std::basic_streambuf<char,std::char_traits<char> >::setbuf
EXTRN	?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::showmanyc
EXTRN	?sync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::sync
EXTRN	?uflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ:PROC ; std::basic_streambuf<char,std::char_traits<char> >::uflow
EXTRN	?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPAD_J@Z:PROC ; std::basic_streambuf<char,std::char_traits<char> >::xsgetn
EXTRN	?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPBD_J@Z:PROC ; std::basic_streambuf<char,std::char_traits<char> >::xsputn
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__CheckForDebuggerJustMyCode@4:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__chkstk:PROC
EXTRN	_memset:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __real@c0490fdb
CONST	SEGMENT
__real@c0490fdb DD 0c0490fdbr			; -3.14159
CONST	ENDS
;	COMDAT __real@bfc90fdb
CONST	SEGMENT
__real@bfc90fdb DD 0bfc90fdbr			; -1.5708
CONST	ENDS
;	COMDAT __real@bf800000
CONST	SEGMENT
__real@bf800000 DD 0bf800000r			; -1
CONST	ENDS
;	COMDAT __real@b48bdd11
CONST	SEGMENT
__real@b48bdd11 DD 0b48bdd11r			; -2.60516e-07
CONST	ENDS
;	COMDAT __real@b2cd365b
CONST	SEGMENT
__real@b2cd365b DD 0b2cd365br			; -2.38899e-08
CONST	ENDS
;	COMDAT __real@44000000
CONST	SEGMENT
__real@44000000 DD 044000000r			; 512
CONST	ENDS
;	COMDAT __real@41200000
CONST	SEGMENT
__real@41200000 DD 041200000r			; 10
CONST	ENDS
;	COMDAT __real@40c90fdb
CONST	SEGMENT
__real@40c90fdb DD 040c90fdbr			; 6.28319
CONST	ENDS
;	COMDAT __real@40a00000
CONST	SEGMENT
__real@40a00000 DD 040a00000r			; 5
CONST	ENDS
;	COMDAT __real@40490fdb
CONST	SEGMENT
__real@40490fdb DD 040490fdbr			; 3.14159
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@3fc90fdb
CONST	SEGMENT
__real@3fc90fdb DD 03fc90fdbr			; 1.5708
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@3e2aaaab
CONST	SEGMENT
__real@3e2aaaab DD 03e2aaaabr			; 0.166667
CONST	ENDS
;	COMDAT __real@3e22f983
CONST	SEGMENT
__real@3e22f983 DD 03e22f983r			; 0.159155
CONST	ENDS
;	COMDAT __real@3d2aaaa3
CONST	SEGMENT
__real@3d2aaaa3 DD 03d2aaaa3r			; 0.0416666
CONST	ENDS
;	COMDAT __real@3c088886
CONST	SEGMENT
__real@3c088886 DD 03c088886r			; 0.00833333
CONST	ENDS
;	COMDAT __real@3ab609aa
CONST	SEGMENT
__real@3ab609aa DD 03ab609aar			; 0.00138884
CONST	ENDS
;	COMDAT __real@39500bf1
CONST	SEGMENT
__real@39500bf1 DD 039500bf1r			; 0.000198409
CONST	ENDS
;	COMDAT __real@37cfb4c2
CONST	SEGMENT
__real@37cfb4c2 DD 037cfb4c2r			; 2.47605e-05
CONST	ENDS
;	COMDAT __real@3727c5ac
CONST	SEGMENT
__real@3727c5ac DD 03727c5acr			; 1e-05
CONST	ENDS
;	COMDAT __real@3638b88e
CONST	SEGMENT
__real@3638b88e DD 03638b88er			; 2.75256e-06
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@GraphicsException@Graphics@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@GraphicsException@Graphics@@8 DD FLAT:??_R0?AVGraphicsException@Graphics@@@8 ; Graphics::GraphicsException::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3GraphicsException@Graphics@@8
rdata$r	ENDS
;	COMDAT ??_R2GraphicsException@Graphics@@8
rdata$r	SEGMENT
??_R2GraphicsException@Graphics@@8 DD FLAT:??_R1A@?0A@EA@GraphicsException@Graphics@@8 ; Graphics::GraphicsException::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Exception@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3GraphicsException@Graphics@@8
rdata$r	SEGMENT
??_R3GraphicsException@Graphics@@8 DD 00H		; Graphics::GraphicsException::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2GraphicsException@Graphics@@8
rdata$r	ENDS
;	COMDAT ??_R4GraphicsException@Graphics@@6B@
rdata$r	SEGMENT
??_R4GraphicsException@Graphics@@6B@ DD 00H		; Graphics::GraphicsException::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVGraphicsException@Graphics@@@8
	DD	FLAT:??_R3GraphicsException@Graphics@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Exception@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Exception@@8 DD FLAT:??_R0?AVException@@@8 ; Exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Exception@@8
rdata$r	ENDS
;	COMDAT ??_R2Exception@@8
rdata$r	SEGMENT
??_R2Exception@@8 DD FLAT:??_R1A@?0A@EA@Exception@@8	; Exception::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3Exception@@8
rdata$r	SEGMENT
??_R3Exception@@8 DD 00H				; Exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2Exception@@8
rdata$r	ENDS
;	COMDAT ??_R4Exception@@6B@
rdata$r	SEGMENT
??_R4Exception@@6B@ DD 00H				; Exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVException@@@8
	DD	FLAT:??_R3Exception@@8
rdata$r	ENDS
;	COMDAT ??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R17A@3EA@?$_Iosb@H@std@@8 DD FLAT:??_R0?AV?$_Iosb@H@std@@@8 ; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,0,4,64)'
	DD	00H
	DD	08H
	DD	00H
	DD	04H
	DD	040H
	DD	FLAT:??_R3?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@A@3EA@ios_base@std@@8
rdata$r	SEGMENT
??_R1A@A@3EA@ios_base@std@@8 DD FLAT:??_R0?AVios_base@std@@@8 ; std::ios_base::`RTTI Base Class Descriptor at (0,0,4,64)'
	DD	01H
	DD	00H
	DD	00H
	DD	04H
	DD	040H
	DD	FLAT:??_R3ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$_Iosb@H@std@@8 DD FLAT:??_R0?AV?$_Iosb@H@std@@@8 ; std::_Iosb<int>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R2?$_Iosb@H@std@@8 DD FLAT:??_R1A@?0A@EA@?$_Iosb@H@std@@8 ; std::_Iosb<int>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R3?$_Iosb@H@std@@8 DD 00H				; std::_Iosb<int>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$_Iosb@H@std@@@8
data$r	SEGMENT
??_R0?AV?$_Iosb@H@std@@@8 DD FLAT:??_7type_info@@6B@	; std::_Iosb<int> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$_Iosb@H@std@@', 00H
data$r	ENDS
;	COMDAT ??_R17?0A@EA@?$_Iosb@H@std@@8
rdata$r	SEGMENT
??_R17?0A@EA@?$_Iosb@H@std@@8 DD FLAT:??_R0?AV?$_Iosb@H@std@@@8 ; std::_Iosb<int>::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	00H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R2ios_base@std@@8
rdata$r	SEGMENT
??_R2ios_base@std@@8 DD FLAT:??_R1A@?0A@EA@ios_base@std@@8 ; std::ios_base::`RTTI Base Class Array'
	DD	FLAT:??_R17?0A@EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3ios_base@std@@8
rdata$r	SEGMENT
??_R3ios_base@std@@8 DD 00H				; std::ios_base::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVios_base@std@@@8
data$r	SEGMENT
??_R0?AVios_base@std@@@8 DD FLAT:??_7type_info@@6B@	; std::ios_base `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVios_base@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ios_base@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ios_base@std@@8 DD FLAT:??_R0?AVios_base@std@@@8 ; std::ios_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ios_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ios_base@std@@8
	DD	FLAT:??_R17?0A@EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD 00H	; std::basic_ios<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_ios<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_ios@DU?$char_traits@D@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ios@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ios<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,0,4,80)'
	DD	02H
	DD	00H
	DD	00H
	DD	04H
	DD	050H
	DD	FLAT:??_R3?$basic_ios@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_ostream<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@@8 ; std::basic_ostream<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_ostream@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD FLAT:??_R0?AV?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	04H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R2?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$basic_ostream@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3FA@?$basic_ios@DU?$char_traits@D@std@@@std@@8
	DD	FLAT:??_R1A@A@3EA@ios_base@std@@8
	DD	FLAT:??_R17A@3EA@?$_Iosb@H@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R3?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD 00H ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	05H
	DD	FLAT:??_R2?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_ostringstream@DU?$char_traits@D@std@@V?$allo'
	DB	'cator@D@2@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DD 00H ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
	DD	050H
	DD	04H
	DD	FLAT:??_R0?AV?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
	DD	FLAT:??_R3?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 DD 00H ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_streambuf<char,std::char_traits<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8 DD FLAT:??_R0?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@@8 ; std::basic_streambuf<char,std::char_traits<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD FLAT:??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R2?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD FLAT:??_R1A@?0A@EA@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$basic_streambuf@DU?$char_traits@D@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	SEGMENT
??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8 DD 00H ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
data$r	SEGMENT
??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> > `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocato'
	DB	'r@D@2@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
rdata$r	SEGMENT
??_R4?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DD 00H ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@8
	DD	FLAT:??_R3?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_1EO@GFNCMDLA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA_@
CONST	SEGMENT
??_C@_1EO@GFNCMDLA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA_@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'A', 00H
	DB	'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'e'
	DB	00H, '_', 00H, 'm', 00H, 'a', 00H, 'n', 00H, 'u', 00H, 'a', 00H
	DB	'l', 00H, 'l', 00H, 'y', 00H, '_', 00H, 'v', 00H, 'e', 00H, 'c'
	DB	00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@KPHDJHEI@Undefined?5Error?5Code@
CONST	SEGMENT
??_C@_0BF@KPHDJHEI@Undefined?5Error?5Code@ DB 'Undefined Error Code', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@EBLMECGC@Graphics?5Exception@
CONST	SEGMENT
??_C@_0BD@EBLMECGC@Graphics?5Exception@ DB 'Graphics Exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CHALHMAE@?$FLError?5Code?$FN@
CONST	SEGMENT
??_C@_0N@CHALHMAE@?$FLError?5Code?$FN@ DB '[Error Code]', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@BLDOFIJ@?$FLDescription?$FN@
CONST	SEGMENT
??_C@_0O@BLDOFIJ@?$FLDescription?$FN@ DB '[Description]', 00H ; `string'
CONST	ENDS
;	COMDAT ??_8?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B@
CONST	SEGMENT
??_8?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B@ DD 00H ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vbtable'
	DD	050H
CONST	ENDS
;	COMDAT ??_7?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
CONST	SEGMENT
??_7?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DD FLAT:??_R4?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vftable'
	DD	FLAT:??_E?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@AEPAXI@Z
CONST	ENDS
;	COMDAT ??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
CONST	SEGMENT
??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ DD FLAT:??_R4?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`vftable'
	DD	FLAT:??_E?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z
	DD	FLAT:?_Lock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEXXZ
	DD	FLAT:?_Unlock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAEXXZ
	DD	FLAT:?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z
	DD	FLAT:?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z
	DD	FLAT:?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JXZ
	DD	FLAT:?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHXZ
	DD	FLAT:?uflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	FLAT:?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPAD_J@Z
	DD	FLAT:?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAE_JPBD_J@Z
	DD	FLAT:?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@U_Mbstatet@@@2@_JHH@Z
	DD	FLAT:?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@U_Mbstatet@@@2@V32@H@Z
	DD	FLAT:?setbuf@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEPAV12@PAD_J@Z
	DD	FLAT:?sync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEHXZ
	DD	FLAT:?imbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MAEXABVlocale@2@@Z
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??EndFrame@Graphics@@QAEXXZ@4JA
_DATA	SEGMENT
?__LINE__Var@?0??EndFrame@Graphics@@QAEXXZ@4JA DD 0108H	; `Graphics::EndFrame'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_08GCJNLIKG@Position@
CONST	SEGMENT
??_C@_08GCJNLIKG@Position@ DB 'Position', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1CC@HBAHMJMC@?$AAV?$AAe?$AAr?$AAt?$AAe?$AAx?$AAS?$AAh?$AAa?$AAd?$AAe?$AAr?$AA?4?$AAc?$AAs@
CONST	SEGMENT
??_C@_1CC@HBAHMJMC@?$AAV?$AAe?$AAr?$AAt?$AAe?$AAx?$AAS?$AAh?$AAa?$AAd?$AAe?$AAr?$AA?4?$AAc?$AAs@ DB 'V'
	DB	00H, 'e', 00H, 'r', 00H, 't', 00H, 'e', 00H, 'x', 00H, 'S', 00H
	DB	'h', 00H, 'a', 00H, 'd', 00H, 'e', 00H, 'r', 00H, '.', 00H, 'c'
	DB	00H, 's', 00H, 'o', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1CA@PHIKDPIA@?$AAP?$AAi?$AAx?$AAe?$AAl?$AAS?$AAh?$AAa?$AAd?$AAe?$AAr?$AA?4?$AAc?$AAs?$AAo@
CONST	SEGMENT
??_C@_1CA@PHIKDPIA@?$AAP?$AAi?$AAx?$AAe?$AAl?$AAS?$AAh?$AAa?$AAd?$AAe?$AAr?$AA?4?$AAc?$AAs?$AAo@ DB 'P'
	DB	00H, 'i', 00H, 'x', 00H, 'e', 00H, 'l', 00H, 'S', 00H, 'h', 00H
	DB	'a', 00H, 'd', 00H, 'e', 00H, 'r', 00H, '.', 00H, 'c', 00H, 's'
	DB	00H, 'o', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??DrawTriangle@Graphics@@QAEXMMM@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??DrawTriangle@Graphics@@QAEXMMM@Z@4JA DD 05dH ; `Graphics::DrawTriangle'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0DA@OCAIHLLA@F?3?2WindowSandbox?2WindowSandbox?2@
CONST	SEGMENT
??_C@_0DA@OCAIHLLA@F?3?2WindowSandbox?2WindowSandbox?2@ DB 'F:\WindowSand'
	DB	'box\WindowSandbox\src\Graphics.cpp', 00H	; `string'
CONST	ENDS
;	COMDAT __CT??_R0?AVException@@@8??0Exception@@QAE@ABV0@@Z72
xdata$x	SEGMENT
__CT??_R0?AVException@@@8??0Exception@@QAE@ABV0@@Z72 DD 00H
	DD	FLAT:??_R0?AVException@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	048H
	DD	FLAT:??0Exception@@QAE@ABV0@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVException@@@8
data$r	SEGMENT
??_R0?AVException@@@8 DD FLAT:??_7type_info@@6B@	; Exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVException@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVGraphicsException@Graphics@@@8??0GraphicsException@Graphics@@QAE@ABV01@@Z76
xdata$x	SEGMENT
__CT??_R0?AVGraphicsException@Graphics@@@8??0GraphicsException@Graphics@@QAE@ABV01@@Z76 DD 00H
	DD	FLAT:??_R0?AVGraphicsException@Graphics@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	04cH
	DD	FLAT:??0GraphicsException@Graphics@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVGraphicsException@Graphics@@@8
data$r	SEGMENT
??_R0?AVGraphicsException@Graphics@@@8 DD FLAT:??_7type_info@@6B@ ; Graphics::GraphicsException `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVGraphicsException@Graphics@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVGraphicsException@Graphics@@
xdata$x	SEGMENT
__CTA3?AVGraphicsException@Graphics@@ DD 03H
	DD	FLAT:__CT??_R0?AVGraphicsException@Graphics@@@8??0GraphicsException@Graphics@@QAE@ABV01@@Z76
	DD	FLAT:__CT??_R0?AVException@@@8??0Exception@@QAE@ABV0@@Z72
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVGraphicsException@Graphics@@
xdata$x	SEGMENT
__TI3?AVGraphicsException@Graphics@@ DD 00H
	DD	FLAT:??1GraphicsException@Graphics@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVGraphicsException@Graphics@@
xdata$x	ENDS
;	COMDAT __GUID_dc8e63f3_d12b_4952_b47b_5e45026a862d
CONST	SEGMENT
__GUID_dc8e63f3_d12b_4952_b47b_5e45026a862d DD 0dc8e63f3H
	DW	0d12bH
	DW	04952H
	DB	0b4H
	DB	07bH
	DB	05eH
	DB	045H
	DB	02H
	DB	06aH
	DB	086H
	DB	02dH
CONST	ENDS
;	COMDAT ?__LINE__Var@?0???0Graphics@@QAE@PAUHWND__@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0???0Graphics@@QAE@PAUHWND__@@@Z@4JA DD 0fH ; `Graphics::Graphics'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_19MNAGGFOC@?$AAp?$AAC?$AAo?$AAs@
CONST	SEGMENT
??_C@_19MNAGGFOC@?$AAp?$AAC?$AAo?$AAs@ DB 'p', 00H, 'C', 00H, 'o', 00H, 's'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_19MFJHDIJG@?$AAp?$AAS?$AAi?$AAn@
CONST	SEGMENT
??_C@_19MFJHDIJG@?$AAp?$AAS?$AAi?$AAn@ DB 'p', 00H, 'S', 00H, 'i', 00H, 'n'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??XMScalarSinCos@DirectX@@YAXPAM0M@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??XMScalarSinCos@DirectX@@YAXPAM0M@Z@4JA DD 090dH ; `DirectX::XMScalarSinCos'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1KG@NLJHBPON@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1KG@NLJHBPON@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd'
	DB	00H, 'o', 00H, 'w', 00H, 's', 00H, ' ', 00H, 'K', 00H, 'i', 00H
	DB	't', 00H, 's', 00H, '\', 00H, '1', 00H, '0', 00H, '\', 00H, 'I'
	DB	00H, 'n', 00H, 'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H
	DB	'\', 00H, '1', 00H, '0', 00H, '.', 00H, '0', 00H, '.', 00H, '1'
	DB	00H, '8', 00H, '3', 00H, '6', 00H, '2', 00H, '.', 00H, '0', 00H
	DB	'\', 00H, 'u', 00H, 'm', 00H, '\', 00H, 'D', 00H, 'i', 00H, 'r'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'X', 00H, 'M', 00H, 'a', 00H
	DB	't', 00H, 'h', 00H, 'M', 00H, 'i', 00H, 's', 00H, 'c', 00H, '.'
	DB	00H, 'i', 00H, 'n', 00H, 'l', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1FE@IMEJOJAH@?$AA?$CB?$AAX?$AAM?$AAS?$AAc?$AAa?$AAl?$AAa?$AAr?$AAN?$AAe?$AAa?$AAr?$AAE?$AAq@
CONST	SEGMENT
??_C@_1FE@IMEJOJAH@?$AA?$CB?$AAX?$AAM?$AAS?$AAc?$AAa?$AAl?$AAa?$AAr?$AAN?$AAe?$AAa?$AAr?$AAE?$AAq@ DB '!'
	DB	00H, 'X', 00H, 'M', 00H, 'S', 00H, 'c', 00H, 'a', 00H, 'l', 00H
	DB	'a', 00H, 'r', 00H, 'N', 00H, 'e', 00H, 'a', 00H, 'r', 00H, 'E'
	DB	00H, 'q', 00H, 'u', 00H, 'a', 00H, 'l', 00H, '(', 00H, 'F', 00H
	DB	'a', 00H, 'r', 00H, 'Z', 00H, ',', 00H, ' ', 00H, 'N', 00H, 'e'
	DB	00H, 'a', 00H, 'r', 00H, 'Z', 00H, ',', 00H, ' ', 00H, '0', 00H
	DB	'.', 00H, '0', 00H, '0', 00H, '0', 00H, '0', 00H, '1', 00H, 'f'
	DB	00H, ')', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1FO@OGFPCKGG@?$AA?$CB?$AAX?$AAM?$AAS?$AAc?$AAa?$AAl?$AAa?$AAr?$AAN?$AAe?$AAa?$AAr?$AAE?$AAq@
CONST	SEGMENT
??_C@_1FO@OGFPCKGG@?$AA?$CB?$AAX?$AAM?$AAS?$AAc?$AAa?$AAl?$AAa?$AAr?$AAN?$AAe?$AAa?$AAr?$AAE?$AAq@ DB '!'
	DB	00H, 'X', 00H, 'M', 00H, 'S', 00H, 'c', 00H, 'a', 00H, 'l', 00H
	DB	'a', 00H, 'r', 00H, 'N', 00H, 'e', 00H, 'a', 00H, 'r', 00H, 'E'
	DB	00H, 'q', 00H, 'u', 00H, 'a', 00H, 'l', 00H, '(', 00H, 'V', 00H
	DB	'i', 00H, 'e', 00H, 'w', 00H, 'H', 00H, 'e', 00H, 'i', 00H, 'g'
	DB	00H, 'h', 00H, 't', 00H, ',', 00H, ' ', 00H, '0', 00H, '.', 00H
	DB	'0', 00H, 'f', 00H, ',', 00H, ' ', 00H, '0', 00H, '.', 00H, '0'
	DB	00H, '0', 00H, '0', 00H, '0', 00H, '1', 00H, 'f', 00H, ')', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1FM@GHGDCEAE@?$AA?$CB?$AAX?$AAM?$AAS?$AAc?$AAa?$AAl?$AAa?$AAr?$AAN?$AAe?$AAa?$AAr?$AAE?$AAq@
CONST	SEGMENT
??_C@_1FM@GHGDCEAE@?$AA?$CB?$AAX?$AAM?$AAS?$AAc?$AAa?$AAl?$AAa?$AAr?$AAN?$AAe?$AAa?$AAr?$AAE?$AAq@ DB '!'
	DB	00H, 'X', 00H, 'M', 00H, 'S', 00H, 'c', 00H, 'a', 00H, 'l', 00H
	DB	'a', 00H, 'r', 00H, 'N', 00H, 'e', 00H, 'a', 00H, 'r', 00H, 'E'
	DB	00H, 'q', 00H, 'u', 00H, 'a', 00H, 'l', 00H, '(', 00H, 'V', 00H
	DB	'i', 00H, 'e', 00H, 'w', 00H, 'W', 00H, 'i', 00H, 'd', 00H, 't'
	DB	00H, 'h', 00H, ',', 00H, ' ', 00H, '0', 00H, '.', 00H, '0', 00H
	DB	'f', 00H, ',', 00H, ' ', 00H, '0', 00H, '.', 00H, '0', 00H, '0'
	DB	00H, '0', 00H, '0', 00H, '1', 00H, 'f', 00H, ')', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DE@NHJOKGBK@?$AAN?$AAe?$AAa?$AAr?$AAZ?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?4?$AAf?$AA?5?$AA?$CG?$AA?$CG?$AA?5@
CONST	SEGMENT
??_C@_1DE@NHJOKGBK@?$AAN?$AAe?$AAa?$AAr?$AAZ?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?4?$AAf?$AA?5?$AA?$CG?$AA?$CG?$AA?5@ DB 'N'
	DB	00H, 'e', 00H, 'a', 00H, 'r', 00H, 'Z', 00H, ' ', 00H, '>', 00H
	DB	' ', 00H, '0', 00H, '.', 00H, 'f', 00H, ' ', 00H, '&', 00H, '&'
	DB	00H, ' ', 00H, 'F', 00H, 'a', 00H, 'r', 00H, 'Z', 00H, ' ', 00H
	DB	'>', 00H, ' ', 00H, '0', 00H, '.', 00H, 'f', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??XMMatrixPerspectiveLH@DirectX@@YQ?AUXMMATRIX@2@MMMM@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??XMMatrixPerspectiveLH@DirectX@@YQ?AUXMMATRIX@2@MMMM@Z@4JA DD 07e2H ; `DirectX::XMMatrixPerspectiveLH'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1KK@OEJMKAH@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1KK@OEJMKAH@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'W', 00H, 'i', 00H, 'n', 00H, 'd'
	DB	00H, 'o', 00H, 'w', 00H, 's', 00H, ' ', 00H, 'K', 00H, 'i', 00H
	DB	't', 00H, 's', 00H, '\', 00H, '1', 00H, '0', 00H, '\', 00H, 'I'
	DB	00H, 'n', 00H, 'c', 00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H
	DB	'\', 00H, '1', 00H, '0', 00H, '.', 00H, '0', 00H, '.', 00H, '1'
	DB	00H, '8', 00H, '3', 00H, '6', 00H, '2', 00H, '.', 00H, '0', 00H
	DB	'\', 00H, 'u', 00H, 'm', 00H, '\', 00H, 'D', 00H, 'i', 00H, 'r'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, 'X', 00H, 'M', 00H, 'a', 00H
	DB	't', 00H, 'h', 00H, 'M', 00H, 'a', 00H, 't', 00H, 'r', 00H, 'i'
	DB	00H, 'x', 00H, '.', 00H, 'i', 00H, 'n', 00H, 'l', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_7GraphicsException@Graphics@@6B@
CONST	SEGMENT
??_7GraphicsException@Graphics@@6B@ DD FLAT:??_R4GraphicsException@Graphics@@6B@ ; Graphics::GraphicsException::`vftable'
	DD	FLAT:??_EGraphicsException@Graphics@@UAEPAXI@Z
	DD	FLAT:?what@GraphicsException@Graphics@@UBEPBDXZ
	DD	FLAT:?GetType@GraphicsException@Graphics@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7Exception@@6B@
CONST	SEGMENT
??_7Exception@@6B@ DD FLAT:??_R4Exception@@6B@		; Exception::`vftable'
	DD	FLAT:??_EException@@UAEPAXI@Z
	DD	FLAT:?what@Exception@@UBEPBDXZ
	DD	FLAT:?GetType@Exception@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
CONST	SEGMENT
??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
CONST	SEGMENT
??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'A', 00H
	DB	'd', 00H, 'j', 00H, 'u', 00H, 's', 00H, 't', 00H, '_', 00H, 'm'
	DB	00H, 'a', 00H, 'n', 00H, 'u', 00H, 'a', 00H, 'l', 00H, 'l', 00H
	DB	'y', 00H, '_', 00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, '_', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'g', 00H
	DB	'n', 00H, 'e', 00H, 'd', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1NA@FEEOBALC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NA@FEEOBALC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '7', 00H, '.', 00H, '2', 00H, '9', 00H, '1', 00H
	DB	'1', 00H, '0', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'm', 00H
	DB	'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GI@JMEOMKJO@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GI@JMEOMKJO@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Community\VC\To'
	DB	'ols\MSVC\14.27.29110\include\xmemory', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FCMFBGOM@invalid?5argument@
CONST	SEGMENT
??_C@_0BB@FCMFBGOM@invalid?5argument@ DB 'invalid argument', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z@4JA DD 084H ; `std::_Adjust_manually_vector_aligned'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$forward@ABV?$allocator@D@std@@@std@@YAABV?$allocator@D@0@ABV10@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$forward@ABQAD@std@@YAABQADABQAD@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$addressof@PAD@std@@YAPAPADAAPAD@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z$0
__tryblocktable$??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z$3
__unwindtable$??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z$2
	DD	00H
	DD	00H
	DD	00H
	DD	00H
__ehfuncinfo$??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$forward@PAU_Container_base12@std@@@std@@YA$$QAPAU_Container_base12@0@AAPAU10@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$addressof@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@AAU10@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPBV?$_String_val@U?$_Simple_types@D@std@@@0@ABV10@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPAV?$_String_val@U?$_Simple_types@D@std@@@0@AAV10@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Deallocate@$07$0A@@std@@YAXPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$max@I@std@@YAABIABI0@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Pocma@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@0@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$addressof@D@std@@YAPADAAD@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$move@AAV?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$min@I@std@@YAABIABI0@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z$0
__ehfuncinfo$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$addressof@V?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?pointer_to@?$pointer_traits@PAD@std@@SAPADAAD@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Unfancy@D@std@@YAPADPAD@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$max@PAD@std@@YAABQADABQAD0@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$3 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$0
__tryblocktable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z DD 01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:__catchsym$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$3
__unwindtable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$2
	DD	00H
	DD	00H
	DD	00H
	DD	00H
__ehfuncinfo$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ$0
__ehfuncinfo$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z$0
__ehfuncinfo$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ$1
__ehfuncinfo$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$size@G$0CE@@std@@YAIAAY0CE@$$CBG@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??B?$ComPtrRef@V?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11InputLayout@@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$ComPtrRef@V?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11InputLayout@@@23@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$size@UD3D11_INPUT_ELEMENT_DESC@@$00@std@@YAIAAY00$$CBUD3D11_INPUT_ELEMENT_DESC@@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?ReleaseAndGetAddressOf@?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@QAEPAPAUID3D11InputLayout@@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??I?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@@Details@12@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?Get@?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@QBEPAUID3D11InputLayout@@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?InternalRelease@?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@IAEKXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??B?$ComPtrRef@V?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11VertexShader@@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$ComPtrRef@V?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11VertexShader@@@23@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?ReleaseAndGetAddressOf@?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@QAEPAPAUID3D11VertexShader@@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??I?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@@Details@12@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?Get@?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@QBEPAUID3D11VertexShader@@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?InternalRelease@?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@IAEKXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??B?$ComPtrRef@V?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11PixelShader@@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$ComPtrRef@V?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11PixelShader@@@23@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??B?$ComPtrRef@V?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D10Blob@@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$ComPtrRef@V?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D10Blob@@@23@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?ReleaseAndGetAddressOf@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QAEPAPAUID3D10Blob@@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??I?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@@Details@12@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??C?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QBEPAUID3D10Blob@@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?InternalRelease@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@IAEKXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?ReleaseAndGetAddressOf@?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@QAEPAPAUID3D11PixelShader@@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??I?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@@Details@12@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?Get@?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@QBEPAUID3D11PixelShader@@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?InternalRelease@?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@IAEKXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??B?$ComPtrRef@V?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11Buffer@@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$ComPtrRef@V?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11Buffer@@@23@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?ReleaseAndGetAddressOf@?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QAEPAPAUID3D11Buffer@@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?GetAddressOf@?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QAEPAPAUID3D11Buffer@@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??I?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@@Details@12@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?Get@?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QBEPAUID3D11Buffer@@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?InternalRelease@?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@IAEKXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??B?$ComPtrRef@V?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11DepthStencilView@@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$ComPtrRef@V?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11DepthStencilView@@@23@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??B?$ComPtrRef@V?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11Texture2D@@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$ComPtrRef@V?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11Texture2D@@@23@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?ReleaseAndGetAddressOf@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAEPAPAUID3D11Texture2D@@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??I?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@@Details@12@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?Get@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QBEPAUID3D11Texture2D@@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?InternalRelease@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@IAEKXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??B?$ComPtrRef@V?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11DepthStencilState@@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$ComPtrRef@V?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11DepthStencilState@@@23@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?ReleaseAndGetAddressOf@?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@QAEPAPAUID3D11DepthStencilState@@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??I?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@@Details@12@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?Get@?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@QBEPAUID3D11DepthStencilState@@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?InternalRelease@?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@IAEKXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??B?$ComPtrRef@V?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11RenderTargetView@@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$ComPtrRef@V?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11RenderTargetView@@@23@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??B?$ComPtrRef@V?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QBEPAPAXXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$ComPtrRef@V?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11Resource@@@23@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?ReleaseAndGetAddressOf@?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@QAEPAPAUID3D11Resource@@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??I?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@@Details@12@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?Get@?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@QBEPAUID3D11Resource@@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?InternalRelease@?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@IAEKXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??B?$ComPtrRef@V?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11DeviceContext@@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$ComPtrRef@V?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11DeviceContext@@@23@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??B?$ComPtrRef@V?$ComPtr@UID3D11Device@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11Device@@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$ComPtrRef@V?$ComPtr@UID3D11Device@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11Device@@@23@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??B?$ComPtrRef@V?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUIDXGISwapChain@@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$ComPtrRef@V?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UIDXGISwapChain@@@23@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?ReleaseAndGetAddressOf@?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@QAEPAPAUID3D11DepthStencilView@@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??I?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@@Details@12@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?Get@?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@QBEPAUID3D11DepthStencilView@@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?InternalRelease@?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@IAEKXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?ReleaseAndGetAddressOf@?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@QAEPAPAUID3D11RenderTargetView@@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?GetAddressOf@?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@QAEPAPAUID3D11RenderTargetView@@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??I?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@@Details@12@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?Get@?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@QBEPAUID3D11RenderTargetView@@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?InternalRelease@?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@IAEKXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?ReleaseAndGetAddressOf@?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@QAEPAPAUID3D11DeviceContext@@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??I?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@@Details@12@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??C?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@QBEPAUID3D11DeviceContext@@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?InternalRelease@?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@IAEKXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?ReleaseAndGetAddressOf@?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QAEPAPAUIDXGISwapChain@@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??I?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@@Details@12@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??C?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QBEPAUIDXGISwapChain@@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?InternalRelease@?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@IAEKXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?ReleaseAndGetAddressOf@?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAEPAPAUID3D11Device@@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??I?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11Device@@@WRL@Microsoft@@@Details@12@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??C?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QBEPAUID3D11Device@@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?InternalRelease@?$ComPtr@UID3D11Device@@@WRL@Microsoft@@IAEKXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?DrawTriangle@Graphics@@QAEXMMM@Z DD 019930522H
	DD	08H
	DD	FLAT:__unwindtable$?DrawTriangle@Graphics@@QAEXMMM@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$?DrawTriangle@Graphics@@QAEXMMM@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?DrawTriangle@Graphics@@QAEXMMM@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?DrawTriangle@Graphics@@QAEXMMM@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$?DrawTriangle@Graphics@@QAEXMMM@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$?DrawTriangle@Graphics@@QAEXMMM@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$?DrawTriangle@Graphics@@QAEXMMM@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$?DrawTriangle@Graphics@@QAEXMMM@Z$5
	DD	05H
	DD	FLAT:__unwindfunclet$?DrawTriangle@Graphics@@QAEXMMM@Z$6
	DD	06H
	DD	FLAT:__unwindfunclet$?DrawTriangle@Graphics@@QAEXMMM@Z$7
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0Graphics@@QAE@PAUHWND__@@@Z DD 019930522H
	DD	08H
	DD	FLAT:__unwindtable$??0Graphics@@QAE@PAUHWND__@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??0Graphics@@QAE@PAUHWND__@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0Graphics@@QAE@PAUHWND__@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0Graphics@@QAE@PAUHWND__@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0Graphics@@QAE@PAUHWND__@@@Z$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0Graphics@@QAE@PAUHWND__@@@Z$3
	DD	03H
	DD	FLAT:__unwindfunclet$??0Graphics@@QAE@PAUHWND__@@@Z$4
	DD	04H
	DD	FLAT:__unwindfunclet$??0Graphics@@QAE@PAUHWND__@@@Z$5
	DD	05H
	DD	FLAT:__unwindfunclet$??0Graphics@@QAE@PAUHWND__@@@Z$6
	DD	06H
	DD	FLAT:__unwindfunclet$??0Graphics@@QAE@PAUHWND__@@@Z$7
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?GetErrorString@GraphicsException@Graphics@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?GetErrorCode@GraphicsException@Graphics@@QBEJXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?TranslateErrorCode@GraphicsException@Graphics@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@J@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?GetType@GraphicsException@Graphics@@UBEPBDXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?what@GraphicsException@Graphics@@UBEPBDXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IAEKXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0Exception@@QAE@ABV0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0Exception@@QAE@ABV0@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0Exception@@QAE@ABV0@@Z$1
__ehfuncinfo$??0Exception@@QAE@ABV0@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0Exception@@QAE@ABV0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABV?$allocator@D@2@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$allocator@D@2@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABEABV?$allocator@D@2@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABEII@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAIIII@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@U?$integral_constant@_N$00@2@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXABV12@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Move_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@U_Equal_allocators@2@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z$1
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$allocator@D@1@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z$1
__ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QBE_NXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?eof@?$_Narrow_char_traits@DH@std@@SAHXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?not_eof@?$_Narrow_char_traits@DH@std@@SAHABH@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NABH0@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?to_int_type@?$_Narrow_char_traits@DH@std@@SAHABD@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?to_char_type@?$_Narrow_char_traits@DH@std@@SADABH@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?eq@?$_Narrow_char_traits@DH@std@@SA_NABD0@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?assign@?$_Narrow_char_traits@DH@std@@SAXAADABD@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?move@?$_Narrow_char_traits@DH@std@@SAPADQADQBDI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?copy@?$_Narrow_char_traits@DH@std@@SAPADQADQBDI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?length@?$_Narrow_char_traits@DH@std@@SAIQBD@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$allocator@D@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Construct_in_place@U_Container_proxy@std@@PAU_Container_base12@2@@std@@YAXAAU_Container_proxy@0@$$QAPAU_Container_base12@0@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$addressof@U_Container_base12@std@@@std@@YAPAU_Container_base12@0@AAU10@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Release@_Basic_container_proxy_ptr12@std@@QAEXXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Swap_proxy_and_iterators@_Container_base12@std@@QAEXAAU12@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Orphan_all@_Container_base12@std@@QAEXXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0_Container_base12@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0_Container_proxy@std@@QAE@PAU_Container_base12@1@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Convert_size@I@std@@YAII@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?max@?$numeric_limits@H@std@@SAHXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0bad_array_new_length@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0bad_alloc@std@@AAE@QBD@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1exception@std@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0exception@std@@QAE@ABV01@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0exception@std@@QAE@QBDH@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??2@YAPAXIPAX@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?__empty_global_delete@@YAXPAXIW4align_val_t@std@@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?__empty_global_delete@@YAXPAXW4align_val_t@std@@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?__empty_global_delete@@YAXPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?__empty_global_delete@@YAXPAX@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	push	ebp
	mov	ebp, esp
	pop	ebp
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odsp /RTCsu /ZI
;	COMDAT ??_E?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@AEPAXI@Z
_TEXT	SEGMENT
??_E?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@AEPAXI@Z PROC ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor', COMDAT
	sub	ecx, DWORD PTR [ecx-4]
	jmp	??_E?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z
??_E?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$4PPPPPPPM@A@AEPAXI@Z ENDP ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vector deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@2@QAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Ptr$ = 12						; size = 4
__Count$ = 16						; size = 4
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@2@QAU_Container_proxy@2@I@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate, COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; Line 687
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __A58979FC_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 689
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 3
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z	; std::_Deallocate<8,0>
	add	esp, 8
; Line 690
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@2@QAU_Container_proxy@2@I@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$forward@ABV?$allocator@D@std@@@std@@YAABV?$allocator@D@0@ABV10@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Arg$ = 8						; size = 4
??$forward@ABV?$allocator@D@std@@@std@@YAABV?$allocator@D@0@ABV10@@Z PROC ; std::forward<std::allocator<char> const &>, COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\type_traits
; Line 1454
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$forward@ABV?$allocator@D@std@@@std@@YAABV?$allocator@D@0@ABV10@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __85A9AA98_type_traits
	call	@__CheckForDebuggerJustMyCode@4
; Line 1455
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1456
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$forward@ABV?$allocator@D@std@@@std@@YAABV?$allocator@D@0@ABV10@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$forward@ABV?$allocator@D@std@@@std@@YAABV?$allocator@D@0@ABV10@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$forward@ABV?$allocator@D@std@@@std@@YAABV?$allocator@D@0@ABV10@@Z ENDP ; std::forward<std::allocator<char> const &>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Ptr$ = -32						; size = 4
__Ptr_container$ = -20					; size = 4
__Block_size$ = -8					; size = 4
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; Line 113
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __A58979FC_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 115
	mov	eax, DWORD PTR __Bytes$[ebp]
	add	eax, 39					; 00000027H
	mov	DWORD PTR __Block_size$[ebp], eax
; Line 116
	mov	eax, DWORD PTR __Block_size$[ebp]
	cmp	eax, DWORD PTR __Bytes$[ebp]
	ja	SHORT $LN8@Allocate_m
; Line 117
	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
$LN8@Allocate_m:
; Line 120
	mov	eax, DWORD PTR __Block_size$[ebp]
	push	eax
	call	?_Allocate@_Default_allocate_traits@std@@SAPAXI@Z ; std::_Default_allocate_traits::_Allocate
	add	esp, 4
	mov	DWORD PTR __Ptr_container$[ebp], eax
$LN4@Allocate_m:
; Line 121
	cmp	DWORD PTR __Ptr_container$[ebp], 0
	je	SHORT $LN7@Allocate_m
	jmp	SHORT $LN2@Allocate_m
$LN7@Allocate_m:
	mov	esi, esp
	push	OFFSET ??_C@_0BB@FCMFBGOM@invalid?5argument@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	121					; 00000079H
	push	OFFSET ??_C@_0GI@JMEOMKJO@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
	push	2
	call	DWORD PTR __imp___CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN12@Allocate_m
	int	3
$LN12@Allocate_m:
	mov	esi, esp
	push	0
	push	121					; 00000079H
	push	OFFSET ??_C@_1NA@FEEOBALC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_1EO@GFNCMDLA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA_@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
	xor	eax, eax
	jne	SHORT $LN7@Allocate_m
$LN2@Allocate_m:
	xor	eax, eax
	jne	SHORT $LN4@Allocate_m
; Line 122
	mov	eax, DWORD PTR __Ptr_container$[ebp]
	add	eax, 39					; 00000027H
	and	eax, -32				; ffffffe0H
	mov	DWORD PTR __Ptr$[ebp], eax
; Line 123
	mov	eax, 4
	imul	ecx, eax, -1
	mov	edx, DWORD PTR __Ptr$[ebp]
	mov	eax, DWORD PTR __Ptr_container$[ebp]
	mov	DWORD PTR [edx+ecx], eax
; Line 126
	mov	eax, 4
	imul	ecx, eax, -2
	mov	edx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [edx+ecx], -84215046		; fafafafaH
; Line 128
	mov	eax, DWORD PTR __Ptr$[ebp]
$LN11@Allocate_m:
; Line 129
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$forward@ABQAD@std@@YAABQADABQAD@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Arg$ = 8						; size = 4
??$forward@ABQAD@std@@YAABQADABQAD@Z PROC		; std::forward<char * const &>, COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\type_traits
; Line 1454
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$forward@ABQAD@std@@YAABQADABQAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __85A9AA98_type_traits
	call	@__CheckForDebuggerJustMyCode@4
; Line 1455
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1456
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$forward@ABQAD@std@@YAABQADABQAD@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$forward@ABQAD@std@@YAABQADABQAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$forward@ABQAD@std@@YAABQADABQAD@Z ENDP		; std::forward<char * const &>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$addressof@PAD@std@@YAPAPADAAPAD@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Val$ = 8						; size = 4
??$addressof@PAD@std@@YAPAPADAAPAD@Z PROC		; std::addressof<char *>, COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; Line 274
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$addressof@PAD@std@@YAPAPADAAPAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __38038D2D_xstddef
	call	@__CheckForDebuggerJustMyCode@4
; Line 275
	mov	eax, DWORD PTR __Val$[ebp]
; Line 276
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$addressof@PAD@std@@YAPAPADAAPAD@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$addressof@PAD@std@@YAPAPADAAPAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$addressof@PAD@std@@YAPAPADAAPAD@Z ENDP		; std::addressof<char *>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Arg$ = 8						; size = 4
??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z PROC ; std::forward<std::allocator<char> >, COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\type_traits
; Line 1454
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __85A9AA98_type_traits
	call	@__CheckForDebuggerJustMyCode@4
; Line 1455
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1456
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z ENDP ; std::forward<std::allocator<char> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z PROC ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >, COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; Line 998
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __A58979FC_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 1002
	push	1
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	call	?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@2@QAU_Container_proxy@2@I@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
	add	esp, 12					; 0000000cH
; Line 1007
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ENDP ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z
_TEXT	SEGMENT
tv424 = -336						; size = 8
tv306 = -328						; size = 4
tv303 = -328						; size = 8
tv301 = -328						; size = 4
tv245 = -322						; size = 1
tv185 = -322						; size = 1
tv305 = -321						; size = 1
tv300 = -321						; size = 1
tv340 = -320						; size = 8
tv247 = -320						; size = 4
tv212 = -320						; size = 4
tv187 = -320						; size = 4
tv304 = -316						; size = 4
tv302 = -316						; size = 4
tv299 = -316						; size = 4
tv294 = -316						; size = 4
tv280 = -316						; size = 4
tv267 = -316						; size = 4
tv135 = -316						; size = 4
$T2 = -308						; size = 4
$T3 = -296						; size = 4
$T4 = -284						; size = 4
$T5 = -272						; size = 4
$T6 = -260						; size = 4
__Ok$ = -56						; size = 8
__Pad$ = -40						; size = 4
__State$ = -28						; size = 4
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Ostr$ = 8						; size = 4
__Data$ = 12						; size = 4
__Size$ = 16						; size = 4
??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z PROC ; std::_Insert_string<char,std::char_traits<char>,unsigned int>, COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; Line 423
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 320				; 00000140H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-336]
	mov	ecx, 80					; 00000050H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	ecx, OFFSET __D15AFF60_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 426
	mov	DWORD PTR __State$[ebp], 0
; Line 429
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv340[ebp], eax
	mov	DWORD PTR tv340[ebp+4], edx
	cmp	DWORD PTR tv340[ebp+4], 0
	jl	SHORT $LN10@Insert_str
	jg	SHORT $LN25@Insert_str
	cmp	DWORD PTR tv340[ebp], 0
	jbe	SHORT $LN10@Insert_str
$LN25@Insert_str:
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, DWORD PTR __Size$[ebp]
	ja	SHORT $LN8@Insert_str
$LN10@Insert_str:
; Line 430
	mov	DWORD PTR __Pad$[ebp], 0
; Line 431
	jmp	SHORT $LN9@Insert_str
$LN8@Insert_str:
; Line 432
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	eax, DWORD PTR __Size$[ebp]
	mov	DWORD PTR __Pad$[ebp], eax
$LN9@Insert_str:
; Line 435
	mov	eax, DWORD PTR __Ostr$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 437
	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN11@Insert_str
; Line 438
	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 4
	mov	DWORD PTR __State$[ebp], eax
; Line 439
	jmp	$LN12@Insert_str
$LN11@Insert_str:
; Line 440
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 441
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?flags@ios_base@std@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv135[ebp], eax
	mov	eax, DWORD PTR tv135[ebp]
	and	eax, 448				; 000001c0H
	cmp	eax, 64					; 00000040H
	je	$LN14@Insert_str
; Line 442
	jmp	SHORT $LN4@Insert_str
$LN2@Insert_str:
	mov	eax, DWORD PTR __Pad$[ebp]
	sub	eax, 1
	mov	DWORD PTR __Pad$[ebp], eax
$LN4@Insert_str:
	cmp	DWORD PTR __Pad$[ebp], 0
	jbe	$LN14@Insert_str
; Line 443
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv299[ebp], eax
	mov	eax, DWORD PTR tv299[ebp]
	mov	DWORD PTR tv187[ebp], eax
	mov	ecx, DWORD PTR __Ostr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [edx+4]
	mov	esi, esp
	call	DWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR tv300[ebp], al
	mov	al, BYTE PTR tv300[ebp]
	mov	BYTE PTR tv185[ebp], al
	mov	esi, esp
	movzx	ecx, BYTE PTR tv185[ebp]
	push	ecx
	mov	ecx, DWORD PTR tv187[ebp]
	call	DWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv301[ebp], eax
	mov	edx, DWORD PTR tv301[ebp]
	mov	DWORD PTR $T6[ebp], edx
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	mov	DWORD PTR $T5[ebp], eax
	lea	eax, DWORD PTR $T6[ebp]
	push	eax
	lea	ecx, DWORD PTR $T5[ebp]
	push	ecx
	call	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NABH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN15@Insert_str
; Line 444
	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 4
	mov	DWORD PTR __State$[ebp], eax
; Line 445
	jmp	SHORT $LN14@Insert_str
$LN15@Insert_str:
; Line 447
	jmp	$LN2@Insert_str
$LN14@Insert_str:
; Line 451
	cmp	DWORD PTR __State$[ebp], 0
	jne	$LN16@Insert_str
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv302[ebp], eax
	mov	eax, DWORD PTR tv302[ebp]
	mov	DWORD PTR tv212[ebp], eax
	mov	ecx, DWORD PTR __Size$[ebp]
	xor	edx, edx
	mov	esi, esp
	push	edx
	push	ecx
	mov	eax, DWORD PTR __Data$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv212[ebp]
	call	DWORD PTR __imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE_JPBD_J@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv303[ebp], eax
	mov	DWORD PTR tv303[ebp+4], edx
	mov	ecx, DWORD PTR __Size$[ebp]
	xor	edx, edx
	mov	DWORD PTR tv424[ebp], ecx
	mov	DWORD PTR tv424[ebp+4], edx
	mov	eax, DWORD PTR tv303[ebp]
	cmp	eax, DWORD PTR tv424[ebp]
	jne	SHORT $LN26@Insert_str
	mov	ecx, DWORD PTR tv303[ebp+4]
	cmp	ecx, DWORD PTR tv424[ebp+4]
	je	SHORT $LN16@Insert_str
$LN26@Insert_str:
; Line 452
	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 4
	mov	DWORD PTR __State$[ebp], eax
; Line 453
	jmp	$LN17@Insert_str
$LN16@Insert_str:
; Line 454
	jmp	SHORT $LN7@Insert_str
$LN5@Insert_str:
	mov	eax, DWORD PTR __Pad$[ebp]
	sub	eax, 1
	mov	DWORD PTR __Pad$[ebp], eax
$LN7@Insert_str:
	cmp	DWORD PTR __Pad$[ebp], 0
	jbe	$LN17@Insert_str
; Line 455
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv304[ebp], eax
	mov	eax, DWORD PTR tv304[ebp]
	mov	DWORD PTR tv247[ebp], eax
	mov	ecx, DWORD PTR __Ostr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [edx+4]
	mov	esi, esp
	call	DWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR tv305[ebp], al
	mov	al, BYTE PTR tv305[ebp]
	mov	BYTE PTR tv245[ebp], al
	mov	esi, esp
	movzx	ecx, BYTE PTR tv245[ebp]
	push	ecx
	mov	ecx, DWORD PTR tv247[ebp]
	call	DWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv306[ebp], eax
	mov	edx, DWORD PTR tv306[ebp]
	mov	DWORD PTR $T4[ebp], edx
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	mov	DWORD PTR $T3[ebp], eax
	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	call	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NABH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN18@Insert_str
; Line 456
	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 4
	mov	DWORD PTR __State$[ebp], eax
; Line 457
	jmp	SHORT $LN17@Insert_str
$LN18@Insert_str:
; Line 459
	jmp	$LN5@Insert_str
$LN17@Insert_str:
; Line 462
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv267[ebp], edx
	mov	esi, esp
	push	0
	push	0
	mov	ecx, DWORD PTR tv267[ebp]
	call	DWORD PTR __imp_?width@ios_base@std@@QAE_J_J@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN20@Insert_str
__catch$??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z$0:
; Line 463
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv280[ebp], edx
	mov	esi, esp
	push	1
	push	4
	mov	ecx, DWORD PTR tv280[ebp]
	call	DWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, $LN24@Insert_str
	ret	0
$LN20@Insert_str:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	jmp	SHORT $LN12@Insert_str
$LN24@Insert_str:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
$LN12@Insert_str:
; Line 466
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv294[ebp], edx
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR __State$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv294[ebp]
	call	DWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 467
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	mov	eax, DWORD PTR $T2[ebp]
; Line 468
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN30@Insert_str
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 336				; 00000150H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN30@Insert_str:
	DD	1
	DD	$LN29@Insert_str
$LN29@Insert_str:
	DD	-56					; ffffffc8H
	DD	8
	DD	$LN27@Insert_str
$LN27@Insert_str:
	DB	95					; 0000005fH
	DB	79					; 0000004fH
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z$2:
	lea	ecx, DWORD PTR __Ok$[ebp]
	jmp	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-340]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z ENDP ; std::_Insert_string<char,std::char_traits<char>,unsigned int>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$forward@PAU_Container_base12@std@@@std@@YA$$QAPAU_Container_base12@0@AAPAU10@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Arg$ = 8						; size = 4
??$forward@PAU_Container_base12@std@@@std@@YA$$QAPAU_Container_base12@0@AAPAU10@@Z PROC ; std::forward<std::_Container_base12 *>, COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\type_traits
; Line 1454
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$forward@PAU_Container_base12@std@@@std@@YA$$QAPAU_Container_base12@0@AAPAU10@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __85A9AA98_type_traits
	call	@__CheckForDebuggerJustMyCode@4
; Line 1455
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1456
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$forward@PAU_Container_base12@std@@@std@@YA$$QAPAU_Container_base12@0@AAPAU10@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$forward@PAU_Container_base12@std@@@std@@YA$$QAPAU_Container_base12@0@AAPAU10@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$forward@PAU_Container_base12@std@@@std@@YA$$QAPAU_Container_base12@0@AAPAU10@@Z ENDP ; std::forward<std::_Container_base12 *>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$addressof@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@AAU10@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Val$ = 8						; size = 4
??$addressof@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@AAU10@@Z PROC ; std::addressof<std::_Container_proxy>, COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; Line 274
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$addressof@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@AAU10@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __38038D2D_xstddef
	call	@__CheckForDebuggerJustMyCode@4
; Line 275
	mov	eax, DWORD PTR __Val$[ebp]
; Line 276
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$addressof@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@AAU10@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$addressof@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@AAU10@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$addressof@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@AAU10@@Z ENDP ; std::addressof<std::_Container_proxy>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?0ABV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
??$?0ABV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@D@1@@Z PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> const &>, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; Line 1341
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __A58979FC_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@ABV?$allocator@D@std@@@std@@YAABV?$allocator@D@0@ABV10@@Z ; std::forward<std::allocator<char> const &>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0ABV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@D@1@@Z ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPBV?$_String_val@U?$_Simple_types@D@std@@@0@ABV10@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Val$ = 8						; size = 4
??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPBV?$_String_val@U?$_Simple_types@D@std@@@0@ABV10@@Z PROC ; std::addressof<std::_String_val<std::_Simple_types<char> > const >, COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; Line 274
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPBV?$_String_val@U?$_Simple_types@D@std@@@0@ABV10@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __38038D2D_xstddef
	call	@__CheckForDebuggerJustMyCode@4
; Line 275
	mov	eax, DWORD PTR __Val$[ebp]
; Line 276
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPBV?$_String_val@U?$_Simple_types@D@std@@@0@ABV10@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPBV?$_String_val@U?$_Simple_types@D@std@@@0@ABV10@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPBV?$_String_val@U?$_Simple_types@D@std@@@0@ABV10@@Z ENDP ; std::addressof<std::_String_val<std::_Simple_types<char> > const >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPAV?$_String_val@U?$_Simple_types@D@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Val$ = 8						; size = 4
??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPAV?$_String_val@U?$_Simple_types@D@std@@@0@AAV10@@Z PROC ; std::addressof<std::_String_val<std::_Simple_types<char> > >, COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; Line 274
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPAV?$_String_val@U?$_Simple_types@D@std@@@0@AAV10@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __38038D2D_xstddef
	call	@__CheckForDebuggerJustMyCode@4
; Line 275
	mov	eax, DWORD PTR __Val$[ebp]
; Line 276
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPAV?$_String_val@U?$_Simple_types@D@std@@@0@AAV10@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPAV?$_String_val@U?$_Simple_types@D@std@@@0@AAV10@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPAV?$_String_val@U?$_Simple_types@D@std@@@0@AAV10@@Z ENDP ; std::addressof<std::_String_val<std::_Simple_types<char> > >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Get_size_of_n@$07@std@@YAII@Z
_TEXT	SEGMENT
__Max_possible$1 = -20					; size = 4
__Overflow_is_possible$ = -5				; size = 1
__Count$ = 8						; size = 4
??$_Get_size_of_n@$07@std@@YAII@Z PROC			; std::_Get_size_of_n<8>, COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; Line 55
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __A58979FC_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 56
	mov	BYTE PTR __Overflow_is_possible$[ebp], 1
; Line 59
	mov	DWORD PTR __Max_possible$1[ebp], 536870911 ; 1fffffffH
; Line 60
	cmp	DWORD PTR __Count$[ebp], 536870911	; 1fffffffH
	jbe	SHORT $LN2@Get_size_o
; Line 61
	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
$LN2@Get_size_o:
; Line 65
	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 3
$LN3@Get_size_o:
; Line 66
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Get_size_of_n@$07@std@@YAII@Z ENDP			; std::_Get_size_of_n<8>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Bytes$ = 12						; size = 4
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z PROC		; std::_Deallocate<8,0>, COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; Line 213
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __A58979FC_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 216
	cmp	DWORD PTR __Bytes$[ebp], 4096		; 00001000H
	jb	SHORT $LN2@Deallocate
; Line 217
	lea	eax, DWORD PTR __Bytes$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z ; std::_Adjust_manually_vector_aligned
	add	esp, 8
$LN2@Deallocate:
; Line 221
	mov	eax, DWORD PTR __Bytes$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
; Line 222
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Deallocate@$07$0A@@std@@YAXPAXI@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ENDP		; std::_Deallocate<8,0>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z PROC ; std::_Allocate<8,std::_Default_allocate_traits,0>, COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; Line 197
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __A58979FC_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 200
	cmp	DWORD PTR __Bytes$[ebp], 4096		; 00001000H
	jb	SHORT $LN2@Allocate
; Line 201
	mov	eax, DWORD PTR __Bytes$[ebp]
	push	eax
	call	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
	add	esp, 4
	jmp	SHORT $LN1@Allocate
$LN2@Allocate:
; Line 205
	cmp	DWORD PTR __Bytes$[ebp], 0
	je	SHORT $LN3@Allocate
; Line 206
	mov	eax, DWORD PTR __Bytes$[ebp]
	push	eax
	call	?_Allocate@_Default_allocate_traits@std@@SAPAXI@Z ; std::_Default_allocate_traits::_Allocate
	add	esp, 4
	jmp	SHORT $LN1@Allocate
$LN3@Allocate:
; Line 209
	xor	eax, eax
$LN1@Allocate:
; Line 210
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ENDP ; std::_Allocate<8,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Get_size_of_n@$00@std@@YAII@Z
_TEXT	SEGMENT
__Overflow_is_possible$ = -5				; size = 1
__Count$ = 8						; size = 4
??$_Get_size_of_n@$00@std@@YAII@Z PROC			; std::_Get_size_of_n<1>, COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; Line 55
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __A58979FC_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 56
	mov	BYTE PTR __Overflow_is_possible$[ebp], 0
; Line 65
	mov	eax, DWORD PTR __Count$[ebp]
; Line 66
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Get_size_of_n@$00@std@@YAII@Z ENDP			; std::_Get_size_of_n<1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$max@I@std@@YAABIABI0@Z
_TEXT	SEGMENT
tv65 = -220						; size = 4
$T2 = -212						; size = 4
__$EHRec$ = -12						; size = 12
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@I@std@@YAABIABI0@Z PROC				; std::max<unsigned int>, COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; Line 42
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$max@I@std@@YAABIABI0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __CF1C1A3F_utility
	call	@__CheckForDebuggerJustMyCode@4
; Line 44
	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jae	SHORT $LN3@max
	mov	eax, DWORD PTR __Right$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	jmp	SHORT $LN4@max
$LN3@max:
	mov	ecx, DWORD PTR __Left$[ebp]
	mov	DWORD PTR tv65[ebp], ecx
$LN4@max:
	mov	edx, DWORD PTR tv65[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	eax, DWORD PTR $T2[ebp]
; Line 45
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$max@I@std@@YAABIABI0@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-224]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$max@I@std@@YAABIABI0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$max@I@std@@YAABIABI0@Z ENDP				; std::max<unsigned int>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Pocma@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@0@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$_Pocma@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@0@Z PROC ; std::_Pocma<std::allocator<char> >, COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; Line 901
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Pocma@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __A58979FC_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 903
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$move@AAV?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z ; std::move<std::allocator<char> &>
	add	esp, 4
; Line 905
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Pocma@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@0@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Pocma@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Pocma@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@0@Z ENDP ; std::_Pocma<std::allocator<char> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z
_TEXT	SEGMENT
$T2 = -212						; size = 4
__$EHRec$ = -12						; size = 12
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z PROC ; std::_Construct_in_place<char *,char * const &>, COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; Line 228
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __A58979FC_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR __Obj$[ebp]
	push	eax
	call	??$addressof@PAD@std@@YAPAPADAAPAD@Z	; std::addressof<char *>
	add	esp, 4
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T2[ebp], eax
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@ABQAD@std@@YAABQADABQAD@Z	; std::forward<char * const &>
	add	esp, 4
	mov	edx, DWORD PTR $T2[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax
; Line 231
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ENDP ; std::_Construct_in_place<char *,char * const &>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Reallocate_for@V<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV34@QBDI@Z@PBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV01@IV<lambda_1>@?1??assign@01@QAEAAV01@QBDI@Z@PBD@Z
_TEXT	SEGMENT
__New_ptr$ = -60					; size = 4
__Al$ = -48						; size = 4
__New_capacity$ = -36					; size = 4
__Old_capacity$ = -24					; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
__New_size$ = 8						; size = 4
__Fn$ = 12						; size = 1
_<_Args_0>$ = 16					; size = 4
??$_Reallocate_for@V<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV34@QBDI@Z@PBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV01@IV<lambda_1>@?1??assign@01@QAEAAV01@QBDI@Z@PBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign'::`2'::<lambda_1>,char const *>, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; Line 4218
	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __D15AFF60_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 4221
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	cmp	DWORD PTR __New_size$[ebp], eax
	jbe	SHORT $LN2@Reallocate
; Line 4222
	call	?_Xlen_string@std@@YAXXZ		; std::_Xlen_string
$LN2@Reallocate:
; Line 4225
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR __Old_capacity$[ebp], ecx
; Line 4226
	mov	eax, DWORD PTR __New_size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABEII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
	mov	DWORD PTR __New_capacity$[ebp], eax
; Line 4227
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	mov	DWORD PTR __Al$[ebp], eax
; Line 4228
	xor	eax, eax
	mov	ecx, DWORD PTR __New_capacity$[ebp]
	add	ecx, 1
	setb	al
	neg	eax
	or	eax, ecx
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate
	mov	DWORD PTR __New_ptr$[ebp], eax
; Line 4229
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 4230
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __New_size$[ebp]
	mov	DWORD PTR [eax+20], ecx
; Line 4231
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __New_capacity$[ebp]
	mov	DWORD PTR [eax+24], ecx
; Line 4232
	mov	eax, DWORD PTR _<_Args_0>$[ebp]
	push	eax
	mov	ecx, DWORD PTR __New_size$[ebp]
	push	ecx
	mov	edx, DWORD PTR __New_ptr$[ebp]
	push	edx
	call	??$_Unfancy@D@std@@YAPADPAD@Z		; std::_Unfancy<char>
	add	esp, 4
	push	eax
	lea	ecx, DWORD PTR __Fn$[ebp]
	call	??R<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV23@QBDI@Z@QBE@QADI0@Z ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign'::`2'::<lambda_1>::operator()
; Line 4233
	cmp	DWORD PTR __Old_capacity$[ebp], 16	; 00000010H
	jb	SHORT $LN3@Reallocate
; Line 4234
	mov	eax, DWORD PTR __Old_capacity$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?deallocate@?$allocator@D@std@@QAEXQADI@Z ; std::allocator<char>::deallocate
; Line 4235
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __New_ptr$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 4236
	jmp	SHORT $LN4@Reallocate
$LN3@Reallocate:
; Line 4237
	lea	eax, DWORD PTR __New_ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	push	ecx
	call	??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
	add	esp, 8
$LN4@Reallocate:
; Line 4240
	mov	eax, DWORD PTR _this$[ebp]
$LN5@Reallocate:
; Line 4241
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@Reallocate
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN8@Reallocate:
	DD	1
	DD	$LN7@Reallocate
$LN7@Reallocate:
	DD	-60					; ffffffc4H
	DD	4
	DD	$LN6@Reallocate
$LN6@Reallocate:
	DB	95					; 0000005fH
	DB	78					; 0000004eH
	DB	101					; 00000065H
	DB	119					; 00000077H
	DB	95					; 0000005fH
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
??$_Reallocate_for@V<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV34@QBDI@Z@PBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV01@IV<lambda_1>@?1??assign@01@QAEAAV01@QBDI@Z@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign'::`2'::<lambda_1>,char const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??R<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV23@QBDI@Z@QBE@QADI0@Z
_TEXT	SEGMENT
$T1 = -209						; size = 1
_this$ = -8						; size = 4
__New_ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
__Ptr$ = 16						; size = 4
??R<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV23@QBDI@Z@QBE@QADI0@Z PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign'::`2'::<lambda_1>::operator(), COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; Line 2979
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __D15AFF60_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 2977
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR __New_ptr$[ebp]
	push	edx
	call	?copy@?$_Narrow_char_traits@DH@std@@SAPADQADQBDI@Z ; std::_Narrow_char_traits<char,int>::copy
	add	esp, 12					; 0000000cH
; Line 2978
	mov	BYTE PTR $T1[ebp], 0
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR __New_ptr$[ebp]
	add	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	call	?assign@?$_Narrow_char_traits@DH@std@@SAXAADABD@Z ; std::_Narrow_char_traits<char,int>::assign
	add	esp, 8
; Line 2979
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??R<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV23@QBDI@Z@QBE@QADI0@Z ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign'::`2'::<lambda_1>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z PROC		; std::_Destroy_in_place<char *>, COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; Line 267
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __A58979FC_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 269
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z ENDP		; std::_Destroy_in_place<char *>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$addressof@D@std@@YAPADAAD@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Val$ = 8						; size = 4
??$addressof@D@std@@YAPADAAD@Z PROC			; std::addressof<char>, COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; Line 274
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$addressof@D@std@@YAPADAAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __38038D2D_xstddef
	call	@__CheckForDebuggerJustMyCode@4
; Line 275
	mov	eax, DWORD PTR __Val$[ebp]
; Line 276
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$addressof@D@std@@YAPADAAD@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$addressof@D@std@@YAPADAAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$addressof@D@std@@YAPADAAD@Z ENDP			; std::addressof<char>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z PROC ; std::_Unfancy<std::_Container_proxy>, COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; Line 288
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __38038D2D_xstddef
	call	@__CheckForDebuggerJustMyCode@4
; Line 289
	mov	eax, DWORD PTR __Ptr$[ebp]
; Line 290
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z ENDP ; std::_Unfancy<std::_Container_proxy>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; Line 1336
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __A58979FC_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@D@1@@Z PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; Line 1341
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __A58979FC_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@V?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z ; std::forward<std::allocator<char> >
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@D@1@@Z ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$move@AAV?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Arg$ = 8						; size = 4
??$move@AAV?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z PROC ; std::move<std::allocator<char> &>, COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\type_traits
; Line 1466
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$move@AAV?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __85A9AA98_type_traits
	call	@__CheckForDebuggerJustMyCode@4
; Line 1467
	mov	eax, DWORD PTR __Arg$[ebp]
; Line 1468
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$move@AAV?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$move@AAV?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$move@AAV?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z ENDP ; std::move<std::allocator<char> &>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Val$ = 8						; size = 4
??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z PROC ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; Line 274
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __38038D2D_xstddef
	call	@__CheckForDebuggerJustMyCode@4
; Line 275
	mov	eax, DWORD PTR __Val$[ebp]
; Line 276
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ENDP ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; Line 799
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __A58979FC_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QAEX$$QAV?$allocator@U_Container_proxy@std@@@1@@Z
_TEXT	SEGMENT
$T1 = -224						; size = 4
__New_proxy$ = -20					; size = 4
_this$ = -8						; size = 4
__Al$ = 8						; size = 4
??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QAEX$$QAV?$allocator@U_Container_proxy@std@@@1@@Z PROC ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; Line 1101
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __A58979FC_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 1102
	push	1
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
	push	eax
	call	??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z ; std::_Unfancy<std::_Container_proxy>
	add	esp, 4
	mov	DWORD PTR __New_proxy$[ebp], eax
; Line 1103
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR $T1[ebp], eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR __New_proxy$[ebp]
	push	edx
	call	??$_Construct_in_place@U_Container_proxy@std@@PAU_Container_base12@2@@std@@YAXAAU_Container_proxy@0@$$QAPAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
	add	esp, 8
; Line 1104
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __New_proxy$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1105
	mov	eax, DWORD PTR __New_proxy$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1106
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QAEX$$QAV?$allocator@U_Container_proxy@std@@@1@@Z ENDP ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ PROC ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; Line 1300
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __A58979FC_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 1301
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@Container_
; Line 1302
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
	add	esp, 8
$LN3@Container_:
; Line 1304
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ENDP ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAV?$allocator@U_Container_proxy@std@@@1@AAU_Container_base12@1@@Z
_TEXT	SEGMENT
$T1 = -212						; size = 4
_this$ = -8						; size = 4
__Al_$ = 8						; size = 4
__Mycont$ = 12						; size = 4
??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAV?$allocator@U_Container_proxy@std@@@1@AAU_Container_base12@1@@Z PROC ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; Line 1286
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __A58979FC_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 1287
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Al_$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 1288
	push	1
	mov	ecx, DWORD PTR __Al_$[ebp]
	call	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
	push	eax
	call	??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z ; std::_Unfancy<std::_Container_proxy>
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 1289
	mov	eax, DWORD PTR __Mycont$[ebp]
	push	eax
	call	??$addressof@U_Container_base12@std@@@std@@YAPAU_Container_base12@0@AAU10@@Z ; std::addressof<std::_Container_base12>
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	??$_Construct_in_place@U_Container_proxy@std@@PAU_Container_base12@2@@std@@YAXAAU_Container_proxy@0@$$QAPAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
	add	esp, 8
; Line 1290
	mov	eax, DWORD PTR __Mycont$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
; Line 1291
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAV?$allocator@U_Container_proxy@std@@@1@AAU_Container_base12@1@@Z ENDP ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z PROC ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >, COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; Line 1026
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __A58979FC_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 1030
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	call	??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
	add	esp, 8
; Line 1031
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ENDP ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; Line 806
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __A58979FC_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 807
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Get_size_of_n@$07@std@@YAII@Z	; std::_Get_size_of_n<8>
	add	esp, 4
	push	eax
	call	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
	add	esp, 4
; Line 808
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$min@I@std@@YAABIABI0@Z
_TEXT	SEGMENT
tv65 = -220						; size = 4
$T2 = -212						; size = 4
__$EHRec$ = -12						; size = 12
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$min@I@std@@YAABIABI0@Z PROC				; std::min<unsigned int>, COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; Line 67
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$min@I@std@@YAABIABI0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __CF1C1A3F_utility
	call	@__CheckForDebuggerJustMyCode@4
; Line 69
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR __Left$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jae	SHORT $LN3@min
	mov	eax, DWORD PTR __Right$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	jmp	SHORT $LN4@min
$LN3@min:
	mov	ecx, DWORD PTR __Left$[ebp]
	mov	DWORD PTR tv65[ebp], ecx
$LN4@min:
	mov	edx, DWORD PTR tv65[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	eax, DWORD PTR $T2[ebp]
; Line 70
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$min@I@std@@YAABIABI0@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-224]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$min@I@std@@YAABIABI0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$min@I@std@@YAABIABI0@Z ENDP				; std::min<unsigned int>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\ostream
; Line 125
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __1D745195_ostream
	call	@__CheckForDebuggerJustMyCode@4
; Line 126
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+4]
; Line 127
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
tv71 = -229						; size = 1
__Zero_uncaught_exceptions$ = -29			; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\ostream
; Line 110
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __1D745195_ostream
	call	@__CheckForDebuggerJustMyCode@4
; Line 116
	call	?uncaught_exceptions@std@@YAHXZ		; std::uncaught_exceptions
	test	eax, eax
	jne	SHORT $LN4@sentry
	mov	BYTE PTR tv71[ebp], 1
	jmp	SHORT $LN5@sentry
$LN4@sentry:
	mov	BYTE PTR tv71[ebp], 0
$LN5@sentry:
	mov	al, BYTE PTR tv71[ebp]
	mov	BYTE PTR __Zero_uncaught_exceptions$[ebp], al
; Line 119
	movzx	eax, BYTE PTR __Zero_uncaught_exceptions$[ebp]
	test	eax, eax
	je	SHORT $LN1@sentry
; Line 120
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	DWORD PTR __imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEXXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@sentry:
; Line 122
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-236]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT
__Tied$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Ostr$ = 8						; size = 4
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\ostream
; Line 92
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __1D745195_ostream
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR __Ostr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 93
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?good@ios_base@std@@QBE_NXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@sentry
; Line 94
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+4], 0
; Line 95
	jmp	SHORT $LN1@sentry
$LN2@sentry:
; Line 98
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Tied$[ebp], eax
; Line 99
	cmp	DWORD PTR __Tied$[ebp], 0
	je	SHORT $LN4@sentry
	mov	eax, DWORD PTR __Tied$[ebp]
	cmp	eax, DWORD PTR __Ostr$[ebp]
	jne	SHORT $LN3@sentry
$LN4@sentry:
; Line 100
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+4], 1
; Line 101
	jmp	SHORT $LN1@sentry
$LN3@sentry:
; Line 105
	mov	esi, esp
	mov	ecx, DWORD PTR __Tied$[ebp]
	call	DWORD PTR __imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 106
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?good@ios_base@std@@QBE_NXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+4], al
$LN1@sentry:
; Line 107
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
tv72 = -232						; size = 4
__Rdbuf$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\ostream
; Line 78
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __1D745195_ostream
	call	@__CheckForDebuggerJustMyCode@4
; Line 79
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv72[ebp], ecx
	mov	edx, DWORD PTR tv72[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv72[ebp]
	add	ecx, DWORD PTR [eax+4]
	mov	esi, esp
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Rdbuf$[ebp], eax
; Line 80
	cmp	DWORD PTR __Rdbuf$[ebp], 0
	je	SHORT $LN3@Sentry_bas
; Line 81
	mov	eax, DWORD PTR __Rdbuf$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR __Rdbuf$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@Sentry_bas:
; Line 83
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-236]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z
_TEXT	SEGMENT
tv73 = -220						; size = 4
__Rdbuf$ = -20						; size = 4
_this$ = -8						; size = 4
__Ostr$ = 8						; size = 4
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\ostream
; Line 71
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __1D745195_ostream
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 72
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv73[ebp], ecx
	mov	edx, DWORD PTR tv73[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv73[ebp]
	add	ecx, DWORD PTR [eax+4]
	mov	esi, esp
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Rdbuf$[ebp], eax
; Line 73
	cmp	DWORD PTR __Rdbuf$[ebp], 0
	je	SHORT $LN1@Sentry_bas
; Line 74
	mov	eax, DWORD PTR __Rdbuf$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR __Rdbuf$[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@Sentry_bas:
; Line 76
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$addressof@V?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Val$ = 8						; size = 4
??$addressof@V?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z PROC ; std::addressof<std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; Line 274
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$addressof@V?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __38038D2D_xstddef
	call	@__CheckForDebuggerJustMyCode@4
; Line 275
	mov	eax, DWORD PTR __Val$[ebp]
; Line 276
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$addressof@V?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$addressof@V?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$addressof@V?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ENDP ; std::addressof<std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> > >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?pointer_to@?$pointer_traits@PAD@std@@SAPADAAD@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Val$ = 8						; size = 4
?pointer_to@?$pointer_traits@PAD@std@@SAPADAAD@Z PROC	; std::pointer_traits<char *>::pointer_to, COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; Line 146
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?pointer_to@?$pointer_traits@PAD@std@@SAPADAAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __4324C6B3_xutility
	call	@__CheckForDebuggerJustMyCode@4
; Line 147
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@D@std@@YAPADAAD@Z		; std::addressof<char>
	add	esp, 4
; Line 148
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?pointer_to@?$pointer_traits@PAD@std@@SAPADAAD@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?pointer_to@?$pointer_traits@PAD@std@@SAPADAAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?pointer_to@?$pointer_traits@PAD@std@@SAPADAAD@Z ENDP	; std::pointer_traits<char *>::pointer_to
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Unfancy@D@std@@YAPADPAD@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
??$_Unfancy@D@std@@YAPADPAD@Z PROC			; std::_Unfancy<char>, COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; Line 288
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Unfancy@D@std@@YAPADPAD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __38038D2D_xstddef
	call	@__CheckForDebuggerJustMyCode@4
; Line 289
	mov	eax, DWORD PTR __Ptr$[ebp]
; Line 290
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Unfancy@D@std@@YAPADPAD@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Unfancy@D@std@@YAPADPAD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Unfancy@D@std@@YAPADPAD@Z ENDP			; std::_Unfancy<char>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$max@PAD@std@@YAABQADABQAD0@Z
_TEXT	SEGMENT
tv65 = -220						; size = 4
$T2 = -212						; size = 4
__$EHRec$ = -12						; size = 12
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$max@PAD@std@@YAABQADABQAD0@Z PROC			; std::max<char *>, COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\utility
; Line 42
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$max@PAD@std@@YAABQADABQAD0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __CF1C1A3F_utility
	call	@__CheckForDebuggerJustMyCode@4
; Line 44
	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jae	SHORT $LN3@max
	mov	eax, DWORD PTR __Right$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	jmp	SHORT $LN4@max
$LN3@max:
	mov	ecx, DWORD PTR __Left$[ebp]
	mov	DWORD PTR tv65[ebp], ecx
$LN4@max:
	mov	edx, DWORD PTR tv65[ebp]
	mov	DWORD PTR $T2[ebp], edx
	mov	eax, DWORD PTR $T2[ebp]
; Line 45
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$max@PAD@std@@YAABQADABQAD0@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-224]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$max@PAD@std@@YAABQADABQAD0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$max@PAD@std@@YAABQADABQAD0@Z ENDP			; std::max<char *>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
_TEXT	SEGMENT
tv73 = -200						; size = 4
tv75 = -196						; size = 4
__Ostr$ = 8						; size = 4
__Str$ = 12						; size = 4
??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z PROC ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; Line 4641
	push	ebp
	mov	ebp, esp
	sub	esp, 200				; 000000c8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-200]
	mov	ecx, 50					; 00000032H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __D15AFF60_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 4642
	mov	ecx, DWORD PTR __Str$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	mov	DWORD PTR tv75[ebp], eax
	mov	ecx, DWORD PTR __Str$[ebp]
	call	?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data
	mov	DWORD PTR tv73[ebp], eax
	mov	eax, DWORD PTR tv75[ebp]
	push	eax
	mov	ecx, DWORD PTR tv73[ebp]
	push	ecx
	mov	edx, DWORD PTR __Ostr$[ebp]
	push	edx
	call	??$_Insert_string@DU?$char_traits@D@std@@I@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@QBDI@Z ; std::_Insert_string<char,std::char_traits<char>,unsigned int>
	add	esp, 12					; 0000000cH
; Line 4643
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 200				; 000000c8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ENDP ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z
_TEXT	SEGMENT
tv79 = -196						; size = 4
__Ostr$ = 8						; size = 4
??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z PROC ; std::endl<char,std::char_traits<char> >, COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\ostream
; Line 981
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __1D745195_ostream
	call	@__CheckForDebuggerJustMyCode@4
; Line 982
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv79[ebp], edx
	mov	esi, esp
	push	10					; 0000000aH
	mov	ecx, DWORD PTR tv79[ebp]
	call	DWORD PTR __imp_?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	movzx	eax, al
	push	eax
	mov	ecx, DWORD PTR __Ostr$[ebp]
	call	DWORD PTR __imp_?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@D@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 983
	mov	esi, esp
	mov	ecx, DWORD PTR __Ostr$[ebp]
	call	DWORD PTR __imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV12@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 984
	mov	eax, DWORD PTR __Ostr$[ebp]
; Line 985
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ENDP ; std::endl<char,std::char_traits<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
_TEXT	SEGMENT
tv135 = -356						; size = 8
tv359 = -348						; size = 8
tv307 = -348						; size = 4
tv304 = -348						; size = 8
tv302 = -348						; size = 4
tv246 = -342						; size = 1
tv187 = -342						; size = 1
tv306 = -341						; size = 1
tv301 = -341						; size = 1
tv345 = -340						; size = 8
tv248 = -340						; size = 4
tv213 = -340						; size = 4
tv189 = -340						; size = 4
tv305 = -336						; size = 4
tv303 = -336						; size = 4
tv300 = -336						; size = 4
tv295 = -336						; size = 4
tv281 = -336						; size = 4
tv268 = -336						; size = 4
tv137 = -336						; size = 4
$T2 = -328						; size = 4
$T3 = -316						; size = 4
$T4 = -304						; size = 4
$T5 = -292						; size = 4
$T6 = -280						; size = 4
__Ok$ = -76						; size = 8
__Pad$ = -60						; size = 8
__Count$ = -44						; size = 8
__State$ = -28						; size = 4
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
__Ostr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z PROC ; std::operator<<<std::char_traits<char> >, COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\ostream
; Line 735
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 340				; 00000154H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-356]
	mov	ecx, 85					; 00000055H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	ecx, OFFSET __1D745195_ostream
	call	@__CheckForDebuggerJustMyCode@4
; Line 739
	mov	DWORD PTR __State$[ebp], 0
; Line 740
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	?length@?$_Narrow_char_traits@DH@std@@SAIQBD@Z ; std::_Narrow_char_traits<char,int>::length
	add	esp, 4
	xor	ecx, ecx
	mov	DWORD PTR __Count$[ebp], eax
	mov	DWORD PTR __Count$[ebp+4], ecx
; Line 741
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv345[ebp], eax
	mov	DWORD PTR tv345[ebp+4], edx
	cmp	DWORD PTR tv345[ebp+4], 0
	jl	SHORT $LN17@operator
	jg	SHORT $LN24@operator
	cmp	DWORD PTR tv345[ebp], 0
	jbe	SHORT $LN17@operator
$LN24@operator:
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv359[ebp], eax
	mov	DWORD PTR tv359[ebp+4], edx
	mov	eax, DWORD PTR tv359[ebp+4]
	cmp	eax, DWORD PTR __Count$[ebp+4]
	jl	SHORT $LN17@operator
	jg	SHORT $LN25@operator
	mov	ecx, DWORD PTR tv359[ebp]
	cmp	ecx, DWORD PTR __Count$[ebp]
	jbe	SHORT $LN17@operator
$LN25@operator:
	mov	edx, DWORD PTR __Ostr$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [eax+4]
	mov	esi, esp
	call	DWORD PTR __imp_?width@ios_base@std@@QBE_JXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	eax, DWORD PTR __Count$[ebp]
	sbb	edx, DWORD PTR __Count$[ebp+4]
	mov	DWORD PTR tv135[ebp], eax
	mov	DWORD PTR tv135[ebp+4], edx
	jmp	SHORT $LN18@operator
$LN17@operator:
	xorps	xmm0, xmm0
	movlpd	QWORD PTR tv135[ebp], xmm0
$LN18@operator:
	mov	ecx, DWORD PTR tv135[ebp]
	mov	DWORD PTR __Pad$[ebp], ecx
	mov	edx, DWORD PTR tv135[ebp+4]
	mov	DWORD PTR __Pad$[ebp+4], edx
; Line 742
	mov	eax, DWORD PTR __Ostr$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@AAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 744
	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QBE_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN8@operator
; Line 745
	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 4
	mov	DWORD PTR __State$[ebp], eax
; Line 746
	jmp	$LN9@operator
$LN8@operator:
; Line 747
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 748
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?flags@ios_base@std@@QBEHXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv137[ebp], eax
	mov	eax, DWORD PTR tv137[ebp]
	and	eax, 448				; 000001c0H
	cmp	eax, 64					; 00000040H
	je	$LN11@operator
; Line 749
	jmp	SHORT $LN4@operator
$LN2@operator:
	mov	eax, DWORD PTR __Pad$[ebp]
	sub	eax, 1
	mov	ecx, DWORD PTR __Pad$[ebp+4]
	sbb	ecx, 0
	mov	DWORD PTR __Pad$[ebp], eax
	mov	DWORD PTR __Pad$[ebp+4], ecx
$LN4@operator:
	cmp	DWORD PTR __Pad$[ebp+4], 0
	jl	$LN11@operator
	jg	SHORT $LN26@operator
	cmp	DWORD PTR __Pad$[ebp], 0
	jbe	$LN11@operator
$LN26@operator:
; Line 750
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv300[ebp], eax
	mov	eax, DWORD PTR tv300[ebp]
	mov	DWORD PTR tv189[ebp], eax
	mov	ecx, DWORD PTR __Ostr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [edx+4]
	mov	esi, esp
	call	DWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR tv301[ebp], al
	mov	al, BYTE PTR tv301[ebp]
	mov	BYTE PTR tv187[ebp], al
	mov	esi, esp
	movzx	ecx, BYTE PTR tv187[ebp]
	push	ecx
	mov	ecx, DWORD PTR tv189[ebp]
	call	DWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv302[ebp], eax
	mov	edx, DWORD PTR tv302[ebp]
	mov	DWORD PTR $T6[ebp], edx
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	mov	DWORD PTR $T5[ebp], eax
	lea	eax, DWORD PTR $T6[ebp]
	push	eax
	lea	ecx, DWORD PTR $T5[ebp]
	push	ecx
	call	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NABH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN12@operator
; Line 751
	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 4
	mov	DWORD PTR __State$[ebp], eax
; Line 752
	jmp	SHORT $LN11@operator
$LN12@operator:
; Line 754
	jmp	$LN2@operator
$LN11@operator:
; Line 757
	cmp	DWORD PTR __State$[ebp], 0
	jne	SHORT $LN13@operator
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv303[ebp], eax
	mov	eax, DWORD PTR tv303[ebp]
	mov	DWORD PTR tv213[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR __Count$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv213[ebp]
	call	DWORD PTR __imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAE_JPBD_J@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv304[ebp], eax
	mov	DWORD PTR tv304[ebp+4], edx
	mov	ecx, DWORD PTR tv304[ebp]
	cmp	ecx, DWORD PTR __Count$[ebp]
	jne	SHORT $LN27@operator
	mov	edx, DWORD PTR tv304[ebp+4]
	cmp	edx, DWORD PTR __Count$[ebp+4]
	je	SHORT $LN13@operator
$LN27@operator:
; Line 758
	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 4
	mov	DWORD PTR __State$[ebp], eax
$LN13@operator:
; Line 761
	cmp	DWORD PTR __State$[ebp], 0
	jne	$LN14@operator
; Line 762
	jmp	SHORT $LN7@operator
$LN5@operator:
	mov	eax, DWORD PTR __Pad$[ebp]
	sub	eax, 1
	mov	ecx, DWORD PTR __Pad$[ebp+4]
	sbb	ecx, 0
	mov	DWORD PTR __Pad$[ebp], eax
	mov	DWORD PTR __Pad$[ebp+4], ecx
$LN7@operator:
	cmp	DWORD PTR __Pad$[ebp+4], 0
	jl	$LN14@operator
	jg	SHORT $LN28@operator
	cmp	DWORD PTR __Pad$[ebp], 0
	jbe	$LN14@operator
$LN28@operator:
; Line 763
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	esi, esp
	mov	ecx, edx
	call	DWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEPAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv305[ebp], eax
	mov	eax, DWORD PTR tv305[ebp]
	mov	DWORD PTR tv248[ebp], eax
	mov	ecx, DWORD PTR __Ostr$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR __Ostr$[ebp]
	add	ecx, DWORD PTR [edx+4]
	mov	esi, esp
	call	DWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR tv306[ebp], al
	mov	al, BYTE PTR tv306[ebp]
	mov	BYTE PTR tv246[ebp], al
	mov	esi, esp
	movzx	ecx, BYTE PTR tv246[ebp]
	push	ecx
	mov	ecx, DWORD PTR tv248[ebp]
	call	DWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHD@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv307[ebp], eax
	mov	edx, DWORD PTR tv307[ebp]
	mov	DWORD PTR $T4[ebp], edx
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	mov	DWORD PTR $T3[ebp], eax
	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	call	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NABH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN15@operator
; Line 764
	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 4
	mov	DWORD PTR __State$[ebp], eax
; Line 765
	jmp	SHORT $LN14@operator
$LN15@operator:
; Line 767
	jmp	$LN5@operator
$LN14@operator:
; Line 770
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv268[ebp], edx
	mov	esi, esp
	push	0
	push	0
	mov	ecx, DWORD PTR tv268[ebp]
	call	DWORD PTR __imp_?width@ios_base@std@@QAE_J_J@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN19@operator
__catch$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$0:
; Line 771
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv281[ebp], edx
	mov	esi, esp
	push	1
	push	4
	mov	ecx, DWORD PTR tv281[ebp]
	call	DWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, $LN23@operator
	ret	0
$LN19@operator:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	jmp	SHORT $LN9@operator
$LN23@operator:
	mov	DWORD PTR __$EHRec$[ebp+12], 0
$LN9@operator:
; Line 774
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Ostr$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv295[ebp], edx
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR __State$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv295[ebp]
	call	DWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 775
	mov	eax, DWORD PTR __Ostr$[ebp]
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	lea	ecx, DWORD PTR __Ok$[ebp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	mov	eax, DWORD PTR $T2[ebp]
; Line 776
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN32@operator
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 356				; 00000164H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN32@operator:
	DD	1
	DD	$LN31@operator
$LN31@operator:
	DD	-76					; ffffffb4H
	DD	8
	DD	$LN29@operator
$LN29@operator:
	DB	95					; 0000005fH
	DB	79					; 0000004fH
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z$2:
	lea	ecx, DWORD PTR __Ok$[ebp]
	jmp	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-360]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ENDP ; std::operator<<<std::char_traits<char> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ PROC ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vbase destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 80					; 00000050H
	call	??1?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 80					; 00000050H
	mov	esi, esp
	call	DWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ ENDP ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`vbase destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z PROC ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 80					; 00000050H
	call	??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	152					; 00000098H
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 80					; 00000050H
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 80					; 00000050H
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z ENDP ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_classSize$ = 8						; size = 4
?__autoclassinit2@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z PROC ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::__autoclassinit2, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _classSize$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?__autoclassinit2@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z ENDP ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	68					; 00000044H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAEPAXI@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAHH@Z
_TEXT	SEGMENT
__State$ = -8						; size = 4
__Mode$ = 8						; size = 4
?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAHH@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Getstate, COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\sstream
; Line 349
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __BD0AA72F_sstream
	call	@__CheckForDebuggerJustMyCode@4
; Line 350
	mov	DWORD PTR __State$[ebp], 0
; Line 351
	mov	eax, DWORD PTR __Mode$[ebp]
	and	eax, 1
	jne	SHORT $LN2@Getstate
; Line 352
	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 4
	mov	DWORD PTR __State$[ebp], eax
$LN2@Getstate:
; Line 355
	mov	eax, DWORD PTR __Mode$[ebp]
	and	eax, 2
	jne	SHORT $LN3@Getstate
; Line 356
	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 2
	mov	DWORD PTR __State$[ebp], eax
$LN3@Getstate:
; Line 359
	mov	eax, DWORD PTR __Mode$[ebp]
	and	eax, 8
	je	SHORT $LN4@Getstate
; Line 360
	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 8
	mov	DWORD PTR __State$[ebp], eax
$LN4@Getstate:
; Line 363
	mov	eax, DWORD PTR __Mode$[ebp]
	and	eax, 4
	je	SHORT $LN5@Getstate
; Line 364
	mov	eax, DWORD PTR __State$[ebp]
	or	eax, 16					; 00000010H
	mov	DWORD PTR __State$[ebp], eax
$LN5@Getstate:
; Line 367
	mov	eax, DWORD PTR __State$[ebp]
; Line 368
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAHH@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Getstate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXXZ
_TEXT	SEGMENT
tv139 = -232						; size = 4
tv141 = -228						; size = 4
tv88 = -224						; size = 4
tv143 = -220						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXXZ PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\sstream
; Line 329
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __BD0AA72F_sstream
	call	@__CheckForDebuggerJustMyCode@4
; Line 330
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	and	ecx, 1
	je	$LN2@Tidy
; Line 331
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 64					; 00000040H
	mov	DWORD PTR tv143[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN4@Tidy
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv88[ebp], eax
	jmp	SHORT $LN5@Tidy
$LN4@Tidy:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv88[ebp], eax
$LN5@Tidy:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR tv88[ebp]
	sub	ecx, eax
	mov	DWORD PTR tv141[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	?pointer_to@?$pointer_traits@PAD@std@@SAPADAAD@Z ; std::pointer_traits<char *>::pointer_to
	add	esp, 4
	mov	DWORD PTR tv139[ebp], eax
	mov	edx, DWORD PTR tv141[ebp]
	push	edx
	mov	eax, DWORD PTR tv139[ebp]
	push	eax
	mov	ecx, DWORD PTR tv143[ebp]
	call	?deallocate@?$allocator@D@std@@QAEXQADI@Z ; std::allocator<char>::deallocate
$LN2@Tidy:
; Line 336
	mov	esi, esp
	push	0
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 337
	mov	esi, esp
	push	0
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD0@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 338
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+56], 0
; Line 339
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	and	ecx, -2					; fffffffeH
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+60], ecx
; Line 340
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-236]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXXZ ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@U_Mbstatet@@@2@V32@H@Z
_TEXT	SEGMENT
tv195 = -288						; size = 8
__Newptr$ = -84						; size = 4
__Seekdist$ = -72					; size = 4
__Seeklow$ = -60					; size = 4
__Pptr_old$ = -48					; size = 4
__Gptr_old$ = -36					; size = 4
__Off$ = -24						; size = 8
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Pos$ = 12						; size = 24
__Mode$ = 36						; size = 4
?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@U_Mbstatet@@@2@V32@H@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekpos, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\sstream
; Line 264
	push	ebp
	mov	ebp, esp
	sub	esp, 288				; 00000120H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-288]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __BD0AA72F_sstream
	call	@__CheckForDebuggerJustMyCode@4
; Line 266
	lea	ecx, DWORD PTR __Pos$[ebp]
	call	??B?$fpos@U_Mbstatet@@@std@@QBE_JXZ	; std::fpos<_Mbstatet>::operator __int64
	mov	DWORD PTR __Off$[ebp], eax
	mov	DWORD PTR __Off$[ebp+4], edx
; Line 267
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Gptr_old$[ebp], eax
; Line 268
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Pptr_old$[ebp], eax
; Line 269
	cmp	DWORD PTR __Pptr_old$[ebp], 0
	je	SHORT $LN2@seekpos
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	cmp	ecx, DWORD PTR __Pptr_old$[ebp]
	jae	SHORT $LN2@seekpos
; Line 270
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pptr_old$[ebp]
	mov	DWORD PTR [eax+56], ecx
$LN2@seekpos:
; Line 273
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Seeklow$[ebp], eax
; Line 274
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	sub	ecx, DWORD PTR __Seeklow$[ebp]
	mov	DWORD PTR __Seekdist$[ebp], ecx
; Line 275
	mov	eax, DWORD PTR __Seekdist$[ebp]
	cdq
	mov	DWORD PTR tv195[ebp], eax
	mov	DWORD PTR tv195[ebp+4], edx
	mov	eax, DWORD PTR __Off$[ebp+4]
	cmp	eax, DWORD PTR tv195[ebp+4]
	jb	SHORT $LN3@seekpos
	ja	SHORT $LN10@seekpos
	mov	ecx, DWORD PTR __Off$[ebp]
	cmp	ecx, DWORD PTR tv195[ebp]
	jbe	SHORT $LN3@seekpos
$LN10@seekpos:
; Line 276
	push	-1
	push	-1
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$fpos@U_Mbstatet@@@std@@QAE@_J@Z	; std::fpos<_Mbstatet>::fpos<_Mbstatet>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN1@seekpos
$LN3@seekpos:
; Line 279
	mov	eax, DWORD PTR __Off$[ebp]
	or	eax, DWORD PTR __Off$[ebp+4]
	je	SHORT $LN4@seekpos
	mov	eax, DWORD PTR __Mode$[ebp]
	and	eax, 1
	je	SHORT $LN6@seekpos
	cmp	DWORD PTR __Gptr_old$[ebp], 0
	je	SHORT $LN5@seekpos
$LN6@seekpos:
	mov	eax, DWORD PTR __Mode$[ebp]
	and	eax, 2
	je	SHORT $LN4@seekpos
	cmp	DWORD PTR __Pptr_old$[ebp], 0
	jne	SHORT $LN4@seekpos
$LN5@seekpos:
; Line 280
	push	-1
	push	-1
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$fpos@U_Mbstatet@@@std@@QAE@_J@Z	; std::fpos<_Mbstatet>::fpos<_Mbstatet>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN1@seekpos
$LN4@seekpos:
; Line 283
	mov	eax, DWORD PTR __Off$[ebp]
	add	eax, DWORD PTR __Seeklow$[ebp]
	mov	DWORD PTR __Newptr$[ebp], eax
; Line 284
	mov	eax, DWORD PTR __Mode$[ebp]
	and	eax, 1
	je	SHORT $LN7@seekpos
	cmp	DWORD PTR __Gptr_old$[ebp], 0
	je	SHORT $LN7@seekpos
; Line 285
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	push	ecx
	mov	edx, DWORD PTR __Newptr$[ebp]
	push	edx
	mov	eax, DWORD PTR __Seeklow$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN7@seekpos:
; Line 288
	mov	eax, DWORD PTR __Mode$[ebp]
	and	eax, 2
	je	SHORT $LN8@seekpos
	cmp	DWORD PTR __Pptr_old$[ebp], 0
	je	SHORT $LN8@seekpos
; Line 289
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR __Newptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Seeklow$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN8@seekpos:
; Line 292
	mov	eax, DWORD PTR __Off$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$fpos@U_Mbstatet@@@std@@QAE@_J@Z	; std::fpos<_Mbstatet>::fpos<_Mbstatet>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN1@seekpos:
; Line 293
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 288				; 00000120H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
?seekpos@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@U_Mbstatet@@@2@V32@H@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekpos
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@U_Mbstatet@@@2@_JHH@Z
_TEXT	SEGMENT
tv247 = -308						; size = 8
tv244 = -300						; size = 8
tv88 = -296						; size = 4
__Newptr$ = -96						; size = 4
__Both$1 = -84						; size = 4
__Newoff$ = -72						; size = 8
__Seekdist$ = -56					; size = 4
__Seeklow$ = -44					; size = 4
__Pptr_old$ = -32					; size = 4
__Gptr_old$ = -20					; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 8
__Way$ = 20						; size = 4
__Mode$ = 24						; size = 4
?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@U_Mbstatet@@@2@_JHH@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekoff, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\sstream
; Line 205
	push	ebp
	mov	ebp, esp
	sub	esp, 308				; 00000134H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-308]
	mov	ecx, 77					; 0000004dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __BD0AA72F_sstream
	call	@__CheckForDebuggerJustMyCode@4
; Line 207
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Gptr_old$[ebp], eax
; Line 208
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Pptr_old$[ebp], eax
; Line 209
	cmp	DWORD PTR __Pptr_old$[ebp], 0
	je	SHORT $LN4@seekoff
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	cmp	ecx, DWORD PTR __Pptr_old$[ebp]
	jae	SHORT $LN4@seekoff
; Line 210
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pptr_old$[ebp]
	mov	DWORD PTR [eax+56], ecx
$LN4@seekoff:
; Line 213
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Seeklow$[ebp], eax
; Line 214
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	sub	ecx, DWORD PTR __Seeklow$[ebp]
	mov	DWORD PTR __Seekdist$[ebp], ecx
; Line 216
	mov	eax, DWORD PTR __Way$[ebp]
	mov	DWORD PTR tv88[ebp], eax
	cmp	DWORD PTR tv88[ebp], 0
	je	SHORT $LN5@seekoff
	cmp	DWORD PTR tv88[ebp], 1
	je	SHORT $LN7@seekoff
	cmp	DWORD PTR tv88[ebp], 2
	je	SHORT $LN6@seekoff
	jmp	SHORT $LN15@seekoff
$LN5@seekoff:
; Line 218
	xorps	xmm0, xmm0
	movlpd	QWORD PTR __Newoff$[ebp], xmm0
; Line 219
	jmp	SHORT $LN2@seekoff
$LN6@seekoff:
; Line 221
	mov	eax, DWORD PTR __Seekdist$[ebp]
	cdq
	mov	DWORD PTR __Newoff$[ebp], eax
	mov	DWORD PTR __Newoff$[ebp+4], edx
; Line 222
	jmp	SHORT $LN2@seekoff
$LN7@seekoff:
; Line 224
	mov	DWORD PTR __Both$1[ebp], 3
; Line 225
	mov	eax, DWORD PTR __Mode$[ebp]
	and	eax, 3
	cmp	eax, 3
	je	SHORT $LN15@seekoff
; Line 226
	mov	eax, DWORD PTR __Mode$[ebp]
	and	eax, 1
	je	SHORT $LN9@seekoff
; Line 227
	cmp	DWORD PTR __Gptr_old$[ebp], 0
	jne	SHORT $LN12@seekoff
	cmp	DWORD PTR __Seeklow$[ebp], 0
	jne	SHORT $LN11@seekoff
$LN12@seekoff:
; Line 228
	mov	eax, DWORD PTR __Gptr_old$[ebp]
	sub	eax, DWORD PTR __Seeklow$[ebp]
	cdq
	mov	DWORD PTR __Newoff$[ebp], eax
	mov	DWORD PTR __Newoff$[ebp+4], edx
; Line 229
	jmp	SHORT $LN2@seekoff
$LN11@seekoff:
; Line 230
	jmp	SHORT $LN15@seekoff
$LN9@seekoff:
; Line 231
	mov	eax, DWORD PTR __Mode$[ebp]
	and	eax, 2
	je	SHORT $LN15@seekoff
	cmp	DWORD PTR __Pptr_old$[ebp], 0
	jne	SHORT $LN14@seekoff
	cmp	DWORD PTR __Seeklow$[ebp], 0
	jne	SHORT $LN15@seekoff
$LN14@seekoff:
; Line 232
	mov	eax, DWORD PTR __Pptr_old$[ebp]
	sub	eax, DWORD PTR __Seeklow$[ebp]
	cdq
	mov	DWORD PTR __Newoff$[ebp], eax
	mov	DWORD PTR __Newoff$[ebp+4], edx
; Line 233
	jmp	SHORT $LN2@seekoff
$LN15@seekoff:
; Line 240
	push	-1
	push	-1
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$fpos@U_Mbstatet@@@std@@QAE@_J@Z	; std::fpos<_Mbstatet>::fpos<_Mbstatet>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN1@seekoff
$LN2@seekoff:
; Line 243
	mov	ecx, DWORD PTR __Off$[ebp]
	add	ecx, DWORD PTR __Newoff$[ebp]
	mov	esi, DWORD PTR __Off$[ebp+4]
	adc	esi, DWORD PTR __Newoff$[ebp+4]
	mov	eax, DWORD PTR __Seekdist$[ebp]
	cdq
	mov	DWORD PTR tv244[ebp], ecx
	mov	DWORD PTR tv244[ebp+4], esi
	mov	DWORD PTR tv247[ebp], eax
	mov	DWORD PTR tv247[ebp+4], edx
	mov	edx, DWORD PTR tv244[ebp+4]
	cmp	edx, DWORD PTR tv247[ebp+4]
	jb	SHORT $LN16@seekoff
	ja	SHORT $LN23@seekoff
	mov	eax, DWORD PTR tv244[ebp]
	cmp	eax, DWORD PTR tv247[ebp]
	jbe	SHORT $LN16@seekoff
$LN23@seekoff:
; Line 244
	push	-1
	push	-1
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$fpos@U_Mbstatet@@@std@@QAE@_J@Z	; std::fpos<_Mbstatet>::fpos<_Mbstatet>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN1@seekoff
$LN16@seekoff:
; Line 247
	mov	eax, DWORD PTR __Off$[ebp]
	add	eax, DWORD PTR __Newoff$[ebp]
	mov	ecx, DWORD PTR __Off$[ebp+4]
	adc	ecx, DWORD PTR __Newoff$[ebp+4]
	mov	DWORD PTR __Off$[ebp], eax
	mov	DWORD PTR __Off$[ebp+4], ecx
; Line 248
	mov	eax, DWORD PTR __Off$[ebp]
	or	eax, DWORD PTR __Off$[ebp+4]
	je	SHORT $LN17@seekoff
	mov	eax, DWORD PTR __Mode$[ebp]
	and	eax, 1
	je	SHORT $LN19@seekoff
	cmp	DWORD PTR __Gptr_old$[ebp], 0
	je	SHORT $LN18@seekoff
$LN19@seekoff:
	mov	eax, DWORD PTR __Mode$[ebp]
	and	eax, 2
	je	SHORT $LN17@seekoff
	cmp	DWORD PTR __Pptr_old$[ebp], 0
	jne	SHORT $LN17@seekoff
$LN18@seekoff:
; Line 249
	push	-1
	push	-1
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$fpos@U_Mbstatet@@@std@@QAE@_J@Z	; std::fpos<_Mbstatet>::fpos<_Mbstatet>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	$LN1@seekoff
$LN17@seekoff:
; Line 252
	mov	eax, DWORD PTR __Off$[ebp]
	add	eax, DWORD PTR __Seeklow$[ebp]
	mov	DWORD PTR __Newptr$[ebp], eax
; Line 253
	mov	eax, DWORD PTR __Mode$[ebp]
	and	eax, 1
	je	SHORT $LN20@seekoff
	cmp	DWORD PTR __Gptr_old$[ebp], 0
	je	SHORT $LN20@seekoff
; Line 254
	mov	esi, esp
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	push	ecx
	mov	edx, DWORD PTR __Newptr$[ebp]
	push	edx
	mov	eax, DWORD PTR __Seeklow$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN20@seekoff:
; Line 257
	mov	eax, DWORD PTR __Mode$[ebp]
	and	eax, 2
	je	SHORT $LN21@seekoff
	cmp	DWORD PTR __Pptr_old$[ebp], 0
	je	SHORT $LN21@seekoff
; Line 258
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR __Newptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Seeklow$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN21@seekoff:
; Line 261
	mov	eax, DWORD PTR __Off$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR __Off$[ebp]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$fpos@U_Mbstatet@@@std@@QAE@_J@Z	; std::fpos<_Mbstatet>::fpos<_Mbstatet>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN1@seekoff:
; Line 262
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 308				; 00000134H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?seekoff@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAE?AV?$fpos@U_Mbstatet@@@2@_JHH@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::seekoff
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHXZ
_TEXT	SEGMENT
tv152 = -252						; size = 4
tv154 = -248						; size = 4
__Local_highwater$ = -48				; size = 4
__Pptr$ = -36						; size = 4
__Gptr$ = -24						; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHXZ PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::underflow, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\sstream
; Line 178
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __BD0AA72F_sstream
	call	@__CheckForDebuggerJustMyCode@4
; Line 179
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Gptr$[ebp], eax
; Line 180
	cmp	DWORD PTR __Gptr$[ebp], 0
	jne	SHORT $LN2@underflow
; Line 181
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	jmp	$LN1@underflow
$LN2@underflow:
; Line 184
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR __Gptr$[ebp], eax
	jae	SHORT $LN3@underflow
; Line 185
	mov	eax, DWORD PTR __Gptr$[ebp]
	push	eax
	call	?to_int_type@?$_Narrow_char_traits@DH@std@@SAHABD@Z ; std::_Narrow_char_traits<char,int>::to_int_type
	add	esp, 4
	jmp	$LN1@underflow
$LN3@underflow:
; Line 189
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Pptr$[ebp], eax
; Line 190
	cmp	DWORD PTR __Pptr$[ebp], 0
	je	SHORT $LN5@underflow
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	and	ecx, 4
	je	SHORT $LN4@underflow
$LN5@underflow:
; Line 191
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	jmp	$LN1@underflow
$LN4@underflow:
; Line 194
	lea	eax, DWORD PTR __Pptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 56					; 00000038H
	push	ecx
	call	??$max@PAD@std@@YAABQADABQAD0@Z		; std::max<char *>
	add	esp, 8
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Local_highwater$[ebp], edx
; Line 195
	mov	eax, DWORD PTR __Local_highwater$[ebp]
	cmp	eax, DWORD PTR __Gptr$[ebp]
	ja	SHORT $LN6@underflow
; Line 196
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	jmp	SHORT $LN1@underflow
$LN6@underflow:
; Line 199
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Local_highwater$[ebp]
	mov	DWORD PTR [eax+56], ecx
; Line 200
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv154[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv152[ebp], eax
	mov	esi, esp
	mov	eax, DWORD PTR __Local_highwater$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv154[ebp]
	push	ecx
	mov	edx, DWORD PTR tv152[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 201
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	?to_int_type@?$_Narrow_char_traits@DH@std@@SAHABD@Z ; std::_Narrow_char_traits<char,int>::to_int_type
	add	esp, 4
$LN1@underflow:
; Line 202
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@underflow
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN10@underflow:
	DD	1
	DD	$LN9@underflow
$LN9@underflow:
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN8@underflow
$LN8@underflow:
	DB	95					; 0000005fH
	DB	80					; 00000050H
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?underflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHXZ ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::underflow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z
_TEXT	SEGMENT
tv150 = -253						; size = 1
$T1 = -248						; size = 4
$T2 = -233						; size = 1
$T3 = -224						; size = 4
__Gptr$ = -20						; size = 4
_this$ = -8						; size = 4
__Meta$ = 8						; size = 4
?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::pbackfail, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\sstream
; Line 161
	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __BD0AA72F_sstream
	call	@__CheckForDebuggerJustMyCode@4
; Line 162
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Gptr$[ebp], eax
; Line 164
	cmp	DWORD PTR __Gptr$[ebp], 0
	je	SHORT $LN3@pbackfail
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	DWORD PTR __Gptr$[ebp], eax
	jbe	SHORT $LN3@pbackfail
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	mov	DWORD PTR $T3[ebp], eax
	lea	eax, DWORD PTR __Meta$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	call	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NABH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN2@pbackfail
	lea	eax, DWORD PTR __Meta$[ebp]
	push	eax
	call	?to_char_type@?$_Narrow_char_traits@DH@std@@SADABH@Z ; std::_Narrow_char_traits<char,int>::to_char_type
	add	esp, 4
	mov	BYTE PTR $T2[ebp], al
	mov	ecx, 1
	imul	edx, ecx, -1
	add	edx, DWORD PTR __Gptr$[ebp]
	push	edx
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	call	?eq@?$_Narrow_char_traits@DH@std@@SA_NABD0@Z ; std::_Narrow_char_traits<char,int>::eq
	add	esp, 8
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN2@pbackfail
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	and	ecx, 2
	je	SHORT $LN2@pbackfail
$LN3@pbackfail:
; Line 166
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	jmp	SHORT $LN1@pbackfail
$LN2@pbackfail:
; Line 170
	mov	esi, esp
	push	-1
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gbump@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXH@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 171
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	mov	DWORD PTR $T1[ebp], eax
	lea	eax, DWORD PTR __Meta$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NABH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN4@pbackfail
; Line 172
	lea	eax, DWORD PTR __Meta$[ebp]
	push	eax
	call	?to_char_type@?$_Narrow_char_traits@DH@std@@SADABH@Z ; std::_Narrow_char_traits<char,int>::to_char_type
	add	esp, 4
	mov	BYTE PTR tv150[ebp], al
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	cl, BYTE PTR tv150[ebp]
	mov	BYTE PTR [eax], cl
$LN4@pbackfail:
; Line 175
	lea	eax, DWORD PTR __Meta$[ebp]
	push	eax
	call	?not_eof@?$_Narrow_char_traits@DH@std@@SAHABH@Z ; std::_Narrow_char_traits<char,int>::not_eof
	add	esp, 4
$LN1@pbackfail:
; Line 176
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?pbackfail@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::pbackfail
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z
_TEXT	SEGMENT
tv202 = -308						; size = 4
tv215 = -304						; size = 4
tv204 = -304						; size = 4
tv155 = -304						; size = 4
tv228 = -301						; size = 1
tv131 = -301						; size = 1
$T1 = -296						; size = 4
__New_pnext$ = -92					; size = 4
__Newptr$ = -80						; size = 4
__Newsize$ = -68					; size = 4
__Oldptr$ = -56						; size = 4
__Oldsize$ = -44					; size = 4
__Epptr$ = -32						; size = 4
__Pptr$ = -20						; size = 4
_this$ = -8						; size = 4
__Meta$ = 8						; size = 4
?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::overflow, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\sstream
; Line 104
	push	ebp
	mov	ebp, esp
	sub	esp, 308				; 00000134H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-308]
	mov	ecx, 77					; 0000004dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __BD0AA72F_sstream
	call	@__CheckForDebuggerJustMyCode@4
; Line 105
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	and	ecx, 2
	je	SHORT $LN2@overflow
; Line 106
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	jmp	$LN1@overflow
$LN2@overflow:
; Line 109
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	mov	DWORD PTR $T1[ebp], eax
	lea	eax, DWORD PTR __Meta$[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NABH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN3@overflow
; Line 110
	lea	eax, DWORD PTR __Meta$[ebp]
	push	eax
	call	?not_eof@?$_Narrow_char_traits@DH@std@@SAHABH@Z ; std::_Narrow_char_traits<char,int>::not_eof
	add	esp, 4
	jmp	$LN1@overflow
$LN3@overflow:
; Line 113
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Pptr$[ebp], eax
; Line 114
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?epptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Epptr$[ebp], eax
; Line 115
	cmp	DWORD PTR __Pptr$[ebp], 0
	je	SHORT $LN4@overflow
	mov	eax, DWORD PTR __Pptr$[ebp]
	cmp	eax, DWORD PTR __Epptr$[ebp]
	jae	SHORT $LN4@overflow
; Line 116
	lea	eax, DWORD PTR __Meta$[ebp]
	push	eax
	call	?to_char_type@?$_Narrow_char_traits@DH@std@@SADABH@Z ; std::_Narrow_char_traits<char,int>::to_char_type
	add	esp, 4
	mov	BYTE PTR tv131[ebp], al
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	cl, BYTE PTR tv131[ebp]
	mov	BYTE PTR [eax], cl
; Line 117
	mov	eax, DWORD PTR __Pptr$[ebp]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+56], eax
; Line 118
	mov	eax, DWORD PTR __Meta$[ebp]
	jmp	$LN1@overflow
$LN4@overflow:
; Line 122
	mov	DWORD PTR __Oldsize$[ebp], 0
; Line 123
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Oldptr$[ebp], eax
; Line 124
	cmp	DWORD PTR __Pptr$[ebp], 0
	je	SHORT $LN5@overflow
; Line 125
	mov	eax, DWORD PTR __Epptr$[ebp]
	sub	eax, DWORD PTR __Oldptr$[ebp]
	mov	DWORD PTR __Oldsize$[ebp], eax
$LN5@overflow:
; Line 129
	cmp	DWORD PTR __Oldsize$[ebp], 32		; 00000020H
	jae	SHORT $LN6@overflow
; Line 130
	mov	DWORD PTR __Newsize$[ebp], 32		; 00000020H
	jmp	SHORT $LN7@overflow
$LN6@overflow:
; Line 131
	cmp	DWORD PTR __Oldsize$[ebp], 1073741823	; 3fffffffH
	jae	SHORT $LN8@overflow
; Line 132
	mov	eax, DWORD PTR __Oldsize$[ebp]
	shl	eax, 1
	mov	DWORD PTR __Newsize$[ebp], eax
	jmp	SHORT $LN7@overflow
$LN8@overflow:
; Line 133
	cmp	DWORD PTR __Oldsize$[ebp], 2147483647	; 7fffffffH
	jae	SHORT $LN10@overflow
; Line 134
	mov	DWORD PTR __Newsize$[ebp], 2147483647	; 7fffffffH
; Line 135
	jmp	SHORT $LN7@overflow
$LN10@overflow:
; Line 136
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	jmp	$LN1@overflow
$LN7@overflow:
; Line 139
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 64					; 00000040H
	mov	DWORD PTR tv155[ebp], eax
	mov	ecx, DWORD PTR __Newsize$[ebp]
	push	ecx
	mov	ecx, DWORD PTR tv155[ebp]
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate
	push	eax
	call	??$_Unfancy@D@std@@YAPADPAD@Z		; std::_Unfancy<char>
	add	esp, 4
	mov	DWORD PTR __Newptr$[ebp], eax
; Line 140
	mov	eax, DWORD PTR __Oldsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Oldptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Newptr$[ebp]
	push	edx
	call	?copy@?$_Narrow_char_traits@DH@std@@SAPADQADQBDI@Z ; std::_Narrow_char_traits<char,int>::copy
	add	esp, 12					; 0000000cH
; Line 142
	mov	eax, DWORD PTR __Newptr$[ebp]
	add	eax, DWORD PTR __Oldsize$[ebp]
	mov	DWORD PTR __New_pnext$[ebp], eax
; Line 143
	mov	eax, DWORD PTR __New_pnext$[ebp]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+56], eax
; Line 145
	mov	eax, DWORD PTR __Newptr$[ebp]
	add	eax, DWORD PTR __Newsize$[ebp]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR __New_pnext$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Newptr$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setp@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 146
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	and	ecx, 4
	je	SHORT $LN12@overflow
; Line 147
	mov	esi, esp
	mov	eax, DWORD PTR __Newptr$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR __Newptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 148
	jmp	SHORT $LN13@overflow
$LN12@overflow:
; Line 149
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	mov	DWORD PTR tv204[ebp], ecx
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	eax, DWORD PTR __Oldptr$[ebp]
	add	eax, DWORD PTR __Newptr$[ebp]
	mov	DWORD PTR tv202[ebp], eax
	mov	esi, esp
	mov	edx, DWORD PTR tv204[ebp]
	push	edx
	mov	eax, DWORD PTR tv202[ebp]
	push	eax
	mov	ecx, DWORD PTR __Newptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?setg@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXPAD00@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN13@overflow:
; Line 152
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	and	ecx, 1
	je	SHORT $LN14@overflow
; Line 153
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 64					; 00000040H
	mov	DWORD PTR tv215[ebp], eax
	mov	ecx, DWORD PTR __Oldsize$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Oldptr$[ebp]
	push	edx
	call	?pointer_to@?$pointer_traits@PAD@std@@SAPADAAD@Z ; std::pointer_traits<char *>::pointer_to
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR tv215[ebp]
	call	?deallocate@?$allocator@D@std@@QAEXQADI@Z ; std::allocator<char>::deallocate
$LN14@overflow:
; Line 156
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	or	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+60], ecx
; Line 157
	lea	eax, DWORD PTR __Meta$[ebp]
	push	eax
	call	?to_char_type@?$_Narrow_char_traits@DH@std@@SADABH@Z ; std::_Narrow_char_traits<char,int>::to_char_type
	add	esp, 4
	mov	BYTE PTR tv228[ebp], al
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	cl, BYTE PTR tv228[ebp]
	mov	BYTE PTR [eax], cl
; Line 158
	mov	eax, DWORD PTR __Meta$[ebp]
$LN1@overflow:
; Line 159
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 308				; 00000134H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?overflow@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@MAEHH@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::overflow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
$T2 = -300						; size = 4
$T3 = -288						; size = 4
__Base$4 = -84						; size = 4
__Base$5 = -72						; size = 4
__Result$ = -60						; size = 28
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\sstream
; Line 85
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 292				; 00000124H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-304]
	mov	ecx, 73					; 00000049H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
	mov	ecx, OFFSET __BD0AA72F_sstream
	call	@__CheckForDebuggerJustMyCode@4
; Line 86
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 64					; 00000040H
	push	eax
	lea	ecx, DWORD PTR __Result$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$allocator@D@1@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 87
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	and	ecx, 2
	jne	SHORT $LN2@str
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN2@str
; Line 88
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pbase@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Base$5[ebp], eax
; Line 89
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?pptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR $T3[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 56					; 00000038H
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	call	??$max@PAD@std@@YAABQADABQAD0@Z		; std::max<char *>
	add	esp, 8
	mov	edx, DWORD PTR [eax]
	sub	edx, DWORD PTR __Base$5[ebp]
	push	edx
	mov	eax, DWORD PTR __Base$5[ebp]
	push	eax
	lea	ecx, DWORD PTR __Result$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
	jmp	SHORT $LN3@str
$LN2@str:
; Line 90
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	and	ecx, 4
	jne	SHORT $LN3@str
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?gptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN3@str
; Line 91
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?eback@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Base$4[ebp], eax
; Line 92
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_?egptr@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IBEPADXZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	sub	eax, DWORD PTR __Base$4[ebp]
	push	eax
	mov	eax, DWORD PTR __Base$4[ebp]
	push	eax
	lea	ecx, DWORD PTR __Result$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
$LN3@str:
; Line 95
	lea	eax, DWORD PTR __Result$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR $T2[ebp]
	or	ecx, 1
	mov	DWORD PTR $T2[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Result$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 96
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@str
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 304				; 00000130H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN12@str:
	DD	1
	DD	$LN11@str
$LN11@str:
	DD	-60					; ffffffc4H
	DD	28					; 0000001cH
	DD	$LN9@str
$LN9@str:
	DB	95					; 0000005fH
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ$0:
	lea	ecx, DWORD PTR __Result$[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-308]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\sstream
; Line 69
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __BD0AA72F_sstream
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
; Line 70
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXXZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Line 71
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Mode$ = 8						; size = 4
??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z PROC ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\sstream
; Line 34
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __BD0AA72F_sstream
	call	@__CheckForDebuggerJustMyCode@4
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+56], 0
	mov	eax, DWORD PTR __Mode$[ebp]
	push	eax
	call	?_Getstate@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAHH@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::_Getstate
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+60], eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 64					; 00000040H
	call	??0?$allocator@D@std@@QAE@XZ		; std::allocator<char>::allocator<char>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z$0:
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ENDP ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
tv69 = -220						; size = 4
$T1 = -212						; size = 4
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::str, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\sstream
; Line 495
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0
	mov	ecx, OFFSET __BD0AA72F_sstream
	call	@__CheckForDebuggerJustMyCode@4
; Line 496
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv69[ebp], eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, DWORD PTR tv69[ebp]
	call	?str@?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::str
	mov	edx, DWORD PTR $T1[ebp]
	or	edx, 1
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 497
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::str
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ PROC ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\sstream
; Line 489
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __BD0AA72F_sstream
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-80]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+edx-80], OFFSET ??_7?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-80]
	mov	edx, DWORD PTR [ecx+4]
	sub	edx, 80					; 00000050H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-80]
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax-84], edx
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 76					; 0000004cH
	call	??1?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::~basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR _this$[ebp]
	sub	ecx, 72					; 00000048H
	mov	esi, esp
	call	DWORD PTR __imp_??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@UAE@XZ ENDP ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::~basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
tv159 = -232						; size = 4
$T2 = -224						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_$initVBases$ = 8					; size = 4
??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\sstream
; Line 455
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T2[ebp], 0
	mov	ecx, OFFSET __BD0AA72F_sstream
	call	@__CheckForDebuggerJustMyCode@4
	cmp	DWORD PTR _$initVBases$[ebp], 0
	je	SHORT $LN2@basic_ostr
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_8?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@7B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 80					; 00000050H
	mov	esi, esp
	call	DWORD PTR __imp_??0?$basic_ios@DU?$char_traits@D@std@@@std@@IAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T2[ebp]
	or	eax, 1
	mov	DWORD PTR $T2[ebp], eax
$LN2@basic_ostr:
	mov	esi, esp
	push	0
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	push	eax
	call	??$addressof@V?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::addressof<std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	DWORD PTR __imp_??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+edx], OFFSET ??_7?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	sub	edx, 80					; 00000050H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	eax, DWORD PTR [ecx+4]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax-4], edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR tv159[ebp], eax
	push	2
	mov	ecx, DWORD PTR tv159[ebp]
	call	??0?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@H@Z ; std::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >::basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ$0:
	mov	eax, DWORD PTR $T2[ebp]
	and	eax, 1
	je	$LN5@basic_ostr
	and	DWORD PTR $T2[ebp], -2			; fffffffeH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 80					; 00000050H
	mov	esi, esp
	call	DWORD PTR __imp_??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
$LN5@basic_ostr:
	ret	0
__unwindfunclet$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	mov	esi, esp
	call	DWORD PTR __imp_??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UAE@XZ
	cmp	esi, esp
	jmp	__RTC_CheckEsp
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-236]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$size@G$0CE@@std@@YAIAAY0CE@$$CBG@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
??$size@G$0CE@@std@@YAIAAY0CE@$$CBG@Z PROC		; std::size<unsigned short,36>, COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; Line 2197
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$size@G$0CE@@std@@YAIAAY0CE@$$CBG@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __4324C6B3_xutility
	call	@__CheckForDebuggerJustMyCode@4
; Line 2198
	mov	eax, 36					; 00000024H
; Line 2199
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$size@G$0CE@@std@@YAIAAY0CE@$$CBG@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$size@G$0CE@@std@@YAIAAY0CE@$$CBG@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$size@G$0CE@@std@@YAIAAY0CE@$$CBG@Z ENDP		; std::size<unsigned short,36>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??B?$ComPtrRef@V?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11InputLayout@@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??B?$ComPtrRef@V?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11InputLayout@@XZ PROC ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11InputLayout> >::operator ID3D11InputLayout * *, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 113
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??B?$ComPtrRef@V?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11InputLayout@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 114
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?ReleaseAndGetAddressOf@?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@QAEPAPAUID3D11InputLayout@@XZ ; Microsoft::WRL::ComPtr<ID3D11InputLayout>::ReleaseAndGetAddressOf
; Line 115
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??B?$ComPtrRef@V?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11InputLayout@@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??B?$ComPtrRef@V?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11InputLayout@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??B?$ComPtrRef@V?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11InputLayout@@XZ ENDP ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11InputLayout> >::operator ID3D11InputLayout * *
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$ComPtrRef@V?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11InputLayout@@@23@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_ptr$ = 8						; size = 4
??0?$ComPtrRef@V?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11InputLayout@@@23@@Z PROC ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11InputLayout> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11InputLayout> >, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 92
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$ComPtrRef@V?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11InputLayout@@@23@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 94
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ptr$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 95
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$ComPtrRef@V?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11InputLayout@@@23@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$ComPtrRef@V?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11InputLayout@@@23@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$ComPtrRef@V?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11InputLayout@@@23@@Z ENDP ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11InputLayout> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11InputLayout> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$size@UD3D11_INPUT_ELEMENT_DESC@@$00@std@@YAIAAY00$$CBUD3D11_INPUT_ELEMENT_DESC@@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
??$size@UD3D11_INPUT_ELEMENT_DESC@@$00@std@@YAIAAY00$$CBUD3D11_INPUT_ELEMENT_DESC@@@Z PROC ; std::size<D3D11_INPUT_ELEMENT_DESC,1>, COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xutility
; Line 2197
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$size@UD3D11_INPUT_ELEMENT_DESC@@$00@std@@YAIAAY00$$CBUD3D11_INPUT_ELEMENT_DESC@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __4324C6B3_xutility
	call	@__CheckForDebuggerJustMyCode@4
; Line 2198
	mov	eax, 1
; Line 2199
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$size@UD3D11_INPUT_ELEMENT_DESC@@$00@std@@YAIAAY00$$CBUD3D11_INPUT_ELEMENT_DESC@@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$size@UD3D11_INPUT_ELEMENT_DESC@@$00@std@@YAIAAY00$$CBUD3D11_INPUT_ELEMENT_DESC@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$size@UD3D11_INPUT_ELEMENT_DESC@@$00@std@@YAIAAY00$$CBUD3D11_INPUT_ELEMENT_DESC@@@Z ENDP ; std::size<D3D11_INPUT_ELEMENT_DESC,1>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_classSize$ = 8						; size = 4
?__autoclassinit2@?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@QAEXI@Z PROC ; Microsoft::WRL::ComPtr<ID3D11InputLayout>::__autoclassinit2, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _classSize$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?__autoclassinit2@?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@QAEXI@Z ENDP ; Microsoft::WRL::ComPtr<ID3D11InputLayout>::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ReleaseAndGetAddressOf@?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@QAEPAPAUID3D11InputLayout@@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?ReleaseAndGetAddressOf@?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@QAEPAPAUID3D11InputLayout@@XZ PROC ; Microsoft::WRL::ComPtr<ID3D11InputLayout>::ReleaseAndGetAddressOf, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 340
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ReleaseAndGetAddressOf@?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@QAEPAPAUID3D11InputLayout@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 341
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InternalRelease@?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<ID3D11InputLayout>::InternalRelease
; Line 342
	mov	eax, DWORD PTR _this$[ebp]
; Line 343
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?ReleaseAndGetAddressOf@?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@QAEPAPAUID3D11InputLayout@@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ReleaseAndGetAddressOf@?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@QAEPAPAUID3D11InputLayout@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?ReleaseAndGetAddressOf@?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@QAEPAPAUID3D11InputLayout@@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D11InputLayout>::ReleaseAndGetAddressOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??I?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@@Details@12@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
??I?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@@Details@12@XZ PROC ; Microsoft::WRL::ComPtr<ID3D11InputLayout>::operator&, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 320
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??I?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@@Details@12@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 321
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$ComPtrRef@V?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11InputLayout@@@23@@Z ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11InputLayout> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11InputLayout> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 322
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??I?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@@Details@12@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??I?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@@Details@12@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??I?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@@Details@12@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D11InputLayout>::operator&
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Get@?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@QBEPAUID3D11InputLayout@@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?Get@?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@QBEPAUID3D11InputLayout@@XZ PROC ; Microsoft::WRL::ComPtr<ID3D11InputLayout>::Get, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 310
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Get@?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@QBEPAUID3D11InputLayout@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 311
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 312
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?Get@?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@QBEPAUID3D11InputLayout@@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Get@?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@QBEPAUID3D11InputLayout@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Get@?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@QBEPAUID3D11InputLayout@@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D11InputLayout>::Get
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@QAE@XZ PROC ; Microsoft::WRL::ComPtr<ID3D11InputLayout>::~ComPtr<ID3D11InputLayout>, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 230
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 231
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InternalRelease@?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<ID3D11InputLayout>::InternalRelease
; Line 232
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@QAE@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D11InputLayout>::~ComPtr<ID3D11InputLayout>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@QAE@XZ PROC ; Microsoft::WRL::ComPtr<ID3D11InputLayout>::ComPtr<ID3D11InputLayout>, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 185
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 184
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 186
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@QAE@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D11InputLayout>::ComPtr<ID3D11InputLayout>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?InternalRelease@?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@IAEKXZ
_TEXT	SEGMENT
_temp$ = -44						; size = 4
_ref$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?InternalRelease@?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@IAEKXZ PROC ; Microsoft::WRL::ComPtr<ID3D11InputLayout>::InternalRelease, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 169
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?InternalRelease@?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@IAEKXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 170
	mov	DWORD PTR _ref$[ebp], 0
; Line 171
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _temp$[ebp], ecx
; Line 173
	cmp	DWORD PTR _temp$[ebp], 0
	je	SHORT $LN2@InternalRe
; Line 175
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 176
	mov	eax, DWORD PTR _temp$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _temp$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ref$[ebp], eax
$LN2@InternalRe:
; Line 179
	mov	eax, DWORD PTR _ref$[ebp]
; Line 180
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?InternalRelease@?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@IAEKXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-244]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?InternalRelease@?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@IAEKXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?InternalRelease@?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@IAEKXZ ENDP ; Microsoft::WRL::ComPtr<ID3D11InputLayout>::InternalRelease
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??B?$ComPtrRef@V?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11VertexShader@@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??B?$ComPtrRef@V?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11VertexShader@@XZ PROC ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11VertexShader> >::operator ID3D11VertexShader * *, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 113
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??B?$ComPtrRef@V?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11VertexShader@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 114
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?ReleaseAndGetAddressOf@?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@QAEPAPAUID3D11VertexShader@@XZ ; Microsoft::WRL::ComPtr<ID3D11VertexShader>::ReleaseAndGetAddressOf
; Line 115
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??B?$ComPtrRef@V?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11VertexShader@@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??B?$ComPtrRef@V?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11VertexShader@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??B?$ComPtrRef@V?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11VertexShader@@XZ ENDP ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11VertexShader> >::operator ID3D11VertexShader * *
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$ComPtrRef@V?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11VertexShader@@@23@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_ptr$ = 8						; size = 4
??0?$ComPtrRef@V?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11VertexShader@@@23@@Z PROC ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11VertexShader> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11VertexShader> >, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 92
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$ComPtrRef@V?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11VertexShader@@@23@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 94
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ptr$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 95
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$ComPtrRef@V?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11VertexShader@@@23@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$ComPtrRef@V?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11VertexShader@@@23@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$ComPtrRef@V?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11VertexShader@@@23@@Z ENDP ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11VertexShader> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11VertexShader> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_classSize$ = 8						; size = 4
?__autoclassinit2@?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@QAEXI@Z PROC ; Microsoft::WRL::ComPtr<ID3D11VertexShader>::__autoclassinit2, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _classSize$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?__autoclassinit2@?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@QAEXI@Z ENDP ; Microsoft::WRL::ComPtr<ID3D11VertexShader>::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ReleaseAndGetAddressOf@?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@QAEPAPAUID3D11VertexShader@@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?ReleaseAndGetAddressOf@?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@QAEPAPAUID3D11VertexShader@@XZ PROC ; Microsoft::WRL::ComPtr<ID3D11VertexShader>::ReleaseAndGetAddressOf, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 340
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ReleaseAndGetAddressOf@?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@QAEPAPAUID3D11VertexShader@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 341
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InternalRelease@?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<ID3D11VertexShader>::InternalRelease
; Line 342
	mov	eax, DWORD PTR _this$[ebp]
; Line 343
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?ReleaseAndGetAddressOf@?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@QAEPAPAUID3D11VertexShader@@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ReleaseAndGetAddressOf@?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@QAEPAPAUID3D11VertexShader@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?ReleaseAndGetAddressOf@?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@QAEPAPAUID3D11VertexShader@@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D11VertexShader>::ReleaseAndGetAddressOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??I?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@@Details@12@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
??I?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@@Details@12@XZ PROC ; Microsoft::WRL::ComPtr<ID3D11VertexShader>::operator&, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 320
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??I?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@@Details@12@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 321
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$ComPtrRef@V?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11VertexShader@@@23@@Z ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11VertexShader> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11VertexShader> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 322
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??I?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@@Details@12@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??I?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@@Details@12@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??I?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@@Details@12@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D11VertexShader>::operator&
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Get@?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@QBEPAUID3D11VertexShader@@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?Get@?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@QBEPAUID3D11VertexShader@@XZ PROC ; Microsoft::WRL::ComPtr<ID3D11VertexShader>::Get, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 310
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Get@?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@QBEPAUID3D11VertexShader@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 311
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 312
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?Get@?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@QBEPAUID3D11VertexShader@@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Get@?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@QBEPAUID3D11VertexShader@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Get@?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@QBEPAUID3D11VertexShader@@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D11VertexShader>::Get
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@QAE@XZ PROC ; Microsoft::WRL::ComPtr<ID3D11VertexShader>::~ComPtr<ID3D11VertexShader>, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 230
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 231
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InternalRelease@?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<ID3D11VertexShader>::InternalRelease
; Line 232
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@QAE@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D11VertexShader>::~ComPtr<ID3D11VertexShader>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@QAE@XZ PROC ; Microsoft::WRL::ComPtr<ID3D11VertexShader>::ComPtr<ID3D11VertexShader>, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 185
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 184
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 186
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@QAE@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D11VertexShader>::ComPtr<ID3D11VertexShader>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?InternalRelease@?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@IAEKXZ
_TEXT	SEGMENT
_temp$ = -44						; size = 4
_ref$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?InternalRelease@?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@IAEKXZ PROC ; Microsoft::WRL::ComPtr<ID3D11VertexShader>::InternalRelease, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 169
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?InternalRelease@?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@IAEKXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 170
	mov	DWORD PTR _ref$[ebp], 0
; Line 171
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _temp$[ebp], ecx
; Line 173
	cmp	DWORD PTR _temp$[ebp], 0
	je	SHORT $LN2@InternalRe
; Line 175
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 176
	mov	eax, DWORD PTR _temp$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _temp$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ref$[ebp], eax
$LN2@InternalRe:
; Line 179
	mov	eax, DWORD PTR _ref$[ebp]
; Line 180
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?InternalRelease@?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@IAEKXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-244]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?InternalRelease@?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@IAEKXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?InternalRelease@?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@IAEKXZ ENDP ; Microsoft::WRL::ComPtr<ID3D11VertexShader>::InternalRelease
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??B?$ComPtrRef@V?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11PixelShader@@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??B?$ComPtrRef@V?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11PixelShader@@XZ PROC ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11PixelShader> >::operator ID3D11PixelShader * *, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 113
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??B?$ComPtrRef@V?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11PixelShader@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 114
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?ReleaseAndGetAddressOf@?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@QAEPAPAUID3D11PixelShader@@XZ ; Microsoft::WRL::ComPtr<ID3D11PixelShader>::ReleaseAndGetAddressOf
; Line 115
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??B?$ComPtrRef@V?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11PixelShader@@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??B?$ComPtrRef@V?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11PixelShader@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??B?$ComPtrRef@V?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11PixelShader@@XZ ENDP ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11PixelShader> >::operator ID3D11PixelShader * *
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$ComPtrRef@V?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11PixelShader@@@23@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_ptr$ = 8						; size = 4
??0?$ComPtrRef@V?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11PixelShader@@@23@@Z PROC ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11PixelShader> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11PixelShader> >, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 92
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$ComPtrRef@V?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11PixelShader@@@23@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 94
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ptr$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 95
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$ComPtrRef@V?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11PixelShader@@@23@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$ComPtrRef@V?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11PixelShader@@@23@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$ComPtrRef@V?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11PixelShader@@@23@@Z ENDP ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11PixelShader> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11PixelShader> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??B?$ComPtrRef@V?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D10Blob@@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??B?$ComPtrRef@V?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D10Blob@@XZ PROC ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D10Blob> >::operator ID3D10Blob * *, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 113
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??B?$ComPtrRef@V?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D10Blob@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 114
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?ReleaseAndGetAddressOf@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QAEPAPAUID3D10Blob@@XZ ; Microsoft::WRL::ComPtr<ID3D10Blob>::ReleaseAndGetAddressOf
; Line 115
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??B?$ComPtrRef@V?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D10Blob@@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??B?$ComPtrRef@V?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D10Blob@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??B?$ComPtrRef@V?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D10Blob@@XZ ENDP ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D10Blob> >::operator ID3D10Blob * *
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$ComPtrRef@V?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D10Blob@@@23@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_ptr$ = 8						; size = 4
??0?$ComPtrRef@V?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D10Blob@@@23@@Z PROC ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D10Blob> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D10Blob> >, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 92
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$ComPtrRef@V?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D10Blob@@@23@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 94
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ptr$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 95
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$ComPtrRef@V?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D10Blob@@@23@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$ComPtrRef@V?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D10Blob@@@23@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$ComPtrRef@V?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D10Blob@@@23@@Z ENDP ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D10Blob> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D10Blob> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_classSize$ = 8						; size = 4
?__autoclassinit2@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QAEXI@Z PROC ; Microsoft::WRL::ComPtr<ID3D10Blob>::__autoclassinit2, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _classSize$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?__autoclassinit2@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QAEXI@Z ENDP ; Microsoft::WRL::ComPtr<ID3D10Blob>::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ReleaseAndGetAddressOf@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QAEPAPAUID3D10Blob@@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?ReleaseAndGetAddressOf@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QAEPAPAUID3D10Blob@@XZ PROC ; Microsoft::WRL::ComPtr<ID3D10Blob>::ReleaseAndGetAddressOf, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 340
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ReleaseAndGetAddressOf@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QAEPAPAUID3D10Blob@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 341
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InternalRelease@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<ID3D10Blob>::InternalRelease
; Line 342
	mov	eax, DWORD PTR _this$[ebp]
; Line 343
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?ReleaseAndGetAddressOf@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QAEPAPAUID3D10Blob@@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ReleaseAndGetAddressOf@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QAEPAPAUID3D10Blob@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?ReleaseAndGetAddressOf@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QAEPAPAUID3D10Blob@@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D10Blob>::ReleaseAndGetAddressOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??I?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@@Details@12@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
??I?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@@Details@12@XZ PROC ; Microsoft::WRL::ComPtr<ID3D10Blob>::operator&, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 320
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??I?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@@Details@12@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 321
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$ComPtrRef@V?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D10Blob@@@23@@Z ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D10Blob> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D10Blob> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 322
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??I?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@@Details@12@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??I?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@@Details@12@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??I?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@@Details@12@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D10Blob>::operator&
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??C?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QBEPAUID3D10Blob@@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??C?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QBEPAUID3D10Blob@@XZ PROC ; Microsoft::WRL::ComPtr<ID3D10Blob>::operator->, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 315
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??C?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QBEPAUID3D10Blob@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 316
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 317
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??C?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QBEPAUID3D10Blob@@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??C?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QBEPAUID3D10Blob@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??C?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QBEPAUID3D10Blob@@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D10Blob>::operator->
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QAE@XZ PROC	; Microsoft::WRL::ComPtr<ID3D10Blob>::~ComPtr<ID3D10Blob>, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 230
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 231
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InternalRelease@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<ID3D10Blob>::InternalRelease
; Line 232
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QAE@XZ ENDP	; Microsoft::WRL::ComPtr<ID3D10Blob>::~ComPtr<ID3D10Blob>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QAE@XZ PROC	; Microsoft::WRL::ComPtr<ID3D10Blob>::ComPtr<ID3D10Blob>, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 185
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 184
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 186
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QAE@XZ ENDP	; Microsoft::WRL::ComPtr<ID3D10Blob>::ComPtr<ID3D10Blob>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?InternalRelease@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@IAEKXZ
_TEXT	SEGMENT
_temp$ = -44						; size = 4
_ref$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?InternalRelease@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@IAEKXZ PROC ; Microsoft::WRL::ComPtr<ID3D10Blob>::InternalRelease, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 169
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?InternalRelease@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@IAEKXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 170
	mov	DWORD PTR _ref$[ebp], 0
; Line 171
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _temp$[ebp], ecx
; Line 173
	cmp	DWORD PTR _temp$[ebp], 0
	je	SHORT $LN2@InternalRe
; Line 175
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 176
	mov	eax, DWORD PTR _temp$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _temp$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ref$[ebp], eax
$LN2@InternalRe:
; Line 179
	mov	eax, DWORD PTR _ref$[ebp]
; Line 180
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?InternalRelease@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@IAEKXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-244]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?InternalRelease@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@IAEKXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?InternalRelease@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@IAEKXZ ENDP ; Microsoft::WRL::ComPtr<ID3D10Blob>::InternalRelease
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_classSize$ = 8						; size = 4
?__autoclassinit2@?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@QAEXI@Z PROC ; Microsoft::WRL::ComPtr<ID3D11PixelShader>::__autoclassinit2, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _classSize$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?__autoclassinit2@?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@QAEXI@Z ENDP ; Microsoft::WRL::ComPtr<ID3D11PixelShader>::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ReleaseAndGetAddressOf@?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@QAEPAPAUID3D11PixelShader@@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?ReleaseAndGetAddressOf@?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@QAEPAPAUID3D11PixelShader@@XZ PROC ; Microsoft::WRL::ComPtr<ID3D11PixelShader>::ReleaseAndGetAddressOf, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 340
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ReleaseAndGetAddressOf@?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@QAEPAPAUID3D11PixelShader@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 341
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InternalRelease@?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<ID3D11PixelShader>::InternalRelease
; Line 342
	mov	eax, DWORD PTR _this$[ebp]
; Line 343
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?ReleaseAndGetAddressOf@?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@QAEPAPAUID3D11PixelShader@@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ReleaseAndGetAddressOf@?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@QAEPAPAUID3D11PixelShader@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?ReleaseAndGetAddressOf@?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@QAEPAPAUID3D11PixelShader@@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D11PixelShader>::ReleaseAndGetAddressOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??I?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@@Details@12@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
??I?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@@Details@12@XZ PROC ; Microsoft::WRL::ComPtr<ID3D11PixelShader>::operator&, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 320
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??I?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@@Details@12@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 321
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$ComPtrRef@V?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11PixelShader@@@23@@Z ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11PixelShader> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11PixelShader> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 322
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??I?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@@Details@12@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??I?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@@Details@12@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??I?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@@Details@12@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D11PixelShader>::operator&
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Get@?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@QBEPAUID3D11PixelShader@@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?Get@?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@QBEPAUID3D11PixelShader@@XZ PROC ; Microsoft::WRL::ComPtr<ID3D11PixelShader>::Get, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 310
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Get@?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@QBEPAUID3D11PixelShader@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 311
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 312
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?Get@?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@QBEPAUID3D11PixelShader@@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Get@?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@QBEPAUID3D11PixelShader@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Get@?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@QBEPAUID3D11PixelShader@@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D11PixelShader>::Get
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@QAE@XZ PROC ; Microsoft::WRL::ComPtr<ID3D11PixelShader>::~ComPtr<ID3D11PixelShader>, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 230
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 231
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InternalRelease@?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<ID3D11PixelShader>::InternalRelease
; Line 232
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@QAE@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D11PixelShader>::~ComPtr<ID3D11PixelShader>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@QAE@XZ PROC ; Microsoft::WRL::ComPtr<ID3D11PixelShader>::ComPtr<ID3D11PixelShader>, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 185
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 184
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 186
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@QAE@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D11PixelShader>::ComPtr<ID3D11PixelShader>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?InternalRelease@?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@IAEKXZ
_TEXT	SEGMENT
_temp$ = -44						; size = 4
_ref$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?InternalRelease@?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@IAEKXZ PROC ; Microsoft::WRL::ComPtr<ID3D11PixelShader>::InternalRelease, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 169
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?InternalRelease@?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@IAEKXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 170
	mov	DWORD PTR _ref$[ebp], 0
; Line 171
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _temp$[ebp], ecx
; Line 173
	cmp	DWORD PTR _temp$[ebp], 0
	je	SHORT $LN2@InternalRe
; Line 175
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 176
	mov	eax, DWORD PTR _temp$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _temp$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ref$[ebp], eax
$LN2@InternalRe:
; Line 179
	mov	eax, DWORD PTR _ref$[ebp]
; Line 180
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?InternalRelease@?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@IAEKXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-244]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?InternalRelease@?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@IAEKXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?InternalRelease@?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@IAEKXZ ENDP ; Microsoft::WRL::ComPtr<ID3D11PixelShader>::InternalRelease
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??B?$ComPtrRef@V?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11Buffer@@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??B?$ComPtrRef@V?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11Buffer@@XZ PROC ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11Buffer> >::operator ID3D11Buffer * *, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 113
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??B?$ComPtrRef@V?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11Buffer@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 114
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?ReleaseAndGetAddressOf@?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QAEPAPAUID3D11Buffer@@XZ ; Microsoft::WRL::ComPtr<ID3D11Buffer>::ReleaseAndGetAddressOf
; Line 115
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??B?$ComPtrRef@V?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11Buffer@@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??B?$ComPtrRef@V?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11Buffer@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??B?$ComPtrRef@V?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11Buffer@@XZ ENDP ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11Buffer> >::operator ID3D11Buffer * *
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$ComPtrRef@V?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11Buffer@@@23@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_ptr$ = 8						; size = 4
??0?$ComPtrRef@V?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11Buffer@@@23@@Z PROC ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11Buffer> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11Buffer> >, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 92
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$ComPtrRef@V?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11Buffer@@@23@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 94
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ptr$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 95
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$ComPtrRef@V?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11Buffer@@@23@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$ComPtrRef@V?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11Buffer@@@23@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$ComPtrRef@V?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11Buffer@@@23@@Z ENDP ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11Buffer> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11Buffer> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_classSize$ = 8						; size = 4
?__autoclassinit2@?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QAEXI@Z PROC ; Microsoft::WRL::ComPtr<ID3D11Buffer>::__autoclassinit2, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _classSize$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?__autoclassinit2@?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QAEXI@Z ENDP ; Microsoft::WRL::ComPtr<ID3D11Buffer>::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ReleaseAndGetAddressOf@?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QAEPAPAUID3D11Buffer@@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?ReleaseAndGetAddressOf@?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QAEPAPAUID3D11Buffer@@XZ PROC ; Microsoft::WRL::ComPtr<ID3D11Buffer>::ReleaseAndGetAddressOf, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 340
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ReleaseAndGetAddressOf@?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QAEPAPAUID3D11Buffer@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 341
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InternalRelease@?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<ID3D11Buffer>::InternalRelease
; Line 342
	mov	eax, DWORD PTR _this$[ebp]
; Line 343
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?ReleaseAndGetAddressOf@?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QAEPAPAUID3D11Buffer@@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ReleaseAndGetAddressOf@?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QAEPAPAUID3D11Buffer@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?ReleaseAndGetAddressOf@?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QAEPAPAUID3D11Buffer@@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D11Buffer>::ReleaseAndGetAddressOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetAddressOf@?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QAEPAPAUID3D11Buffer@@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?GetAddressOf@?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QAEPAPAUID3D11Buffer@@XZ PROC ; Microsoft::WRL::ComPtr<ID3D11Buffer>::GetAddressOf, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 335
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetAddressOf@?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QAEPAPAUID3D11Buffer@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 336
	mov	eax, DWORD PTR _this$[ebp]
; Line 337
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?GetAddressOf@?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QAEPAPAUID3D11Buffer@@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetAddressOf@?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QAEPAPAUID3D11Buffer@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetAddressOf@?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QAEPAPAUID3D11Buffer@@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D11Buffer>::GetAddressOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??I?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@@Details@12@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
??I?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@@Details@12@XZ PROC ; Microsoft::WRL::ComPtr<ID3D11Buffer>::operator&, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 320
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??I?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@@Details@12@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 321
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$ComPtrRef@V?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11Buffer@@@23@@Z ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11Buffer> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11Buffer> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 322
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??I?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@@Details@12@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??I?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@@Details@12@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??I?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@@Details@12@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D11Buffer>::operator&
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Get@?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QBEPAUID3D11Buffer@@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?Get@?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QBEPAUID3D11Buffer@@XZ PROC ; Microsoft::WRL::ComPtr<ID3D11Buffer>::Get, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 310
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Get@?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QBEPAUID3D11Buffer@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 311
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 312
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?Get@?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QBEPAUID3D11Buffer@@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Get@?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QBEPAUID3D11Buffer@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Get@?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QBEPAUID3D11Buffer@@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D11Buffer>::Get
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QAE@XZ PROC	; Microsoft::WRL::ComPtr<ID3D11Buffer>::~ComPtr<ID3D11Buffer>, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 230
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 231
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InternalRelease@?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<ID3D11Buffer>::InternalRelease
; Line 232
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QAE@XZ ENDP	; Microsoft::WRL::ComPtr<ID3D11Buffer>::~ComPtr<ID3D11Buffer>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QAE@XZ PROC	; Microsoft::WRL::ComPtr<ID3D11Buffer>::ComPtr<ID3D11Buffer>, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 185
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 184
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 186
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QAE@XZ ENDP	; Microsoft::WRL::ComPtr<ID3D11Buffer>::ComPtr<ID3D11Buffer>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?InternalRelease@?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@IAEKXZ
_TEXT	SEGMENT
_temp$ = -44						; size = 4
_ref$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?InternalRelease@?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@IAEKXZ PROC ; Microsoft::WRL::ComPtr<ID3D11Buffer>::InternalRelease, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 169
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?InternalRelease@?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@IAEKXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 170
	mov	DWORD PTR _ref$[ebp], 0
; Line 171
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _temp$[ebp], ecx
; Line 173
	cmp	DWORD PTR _temp$[ebp], 0
	je	SHORT $LN2@InternalRe
; Line 175
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 176
	mov	eax, DWORD PTR _temp$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _temp$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ref$[ebp], eax
$LN2@InternalRe:
; Line 179
	mov	eax, DWORD PTR _ref$[ebp]
; Line 180
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?InternalRelease@?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@IAEKXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-244]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?InternalRelease@?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@IAEKXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?InternalRelease@?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@IAEKXZ ENDP ; Microsoft::WRL::ComPtr<ID3D11Buffer>::InternalRelease
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??B?$ComPtrRef@V?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11DepthStencilView@@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??B?$ComPtrRef@V?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11DepthStencilView@@XZ PROC ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11DepthStencilView> >::operator ID3D11DepthStencilView * *, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 113
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??B?$ComPtrRef@V?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11DepthStencilView@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 114
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?ReleaseAndGetAddressOf@?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@QAEPAPAUID3D11DepthStencilView@@XZ ; Microsoft::WRL::ComPtr<ID3D11DepthStencilView>::ReleaseAndGetAddressOf
; Line 115
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??B?$ComPtrRef@V?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11DepthStencilView@@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??B?$ComPtrRef@V?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11DepthStencilView@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??B?$ComPtrRef@V?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11DepthStencilView@@XZ ENDP ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11DepthStencilView> >::operator ID3D11DepthStencilView * *
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$ComPtrRef@V?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11DepthStencilView@@@23@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_ptr$ = 8						; size = 4
??0?$ComPtrRef@V?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11DepthStencilView@@@23@@Z PROC ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11DepthStencilView> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11DepthStencilView> >, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 92
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$ComPtrRef@V?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11DepthStencilView@@@23@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 94
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ptr$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 95
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$ComPtrRef@V?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11DepthStencilView@@@23@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$ComPtrRef@V?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11DepthStencilView@@@23@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$ComPtrRef@V?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11DepthStencilView@@@23@@Z ENDP ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11DepthStencilView> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11DepthStencilView> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??B?$ComPtrRef@V?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11Texture2D@@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??B?$ComPtrRef@V?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11Texture2D@@XZ PROC ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11Texture2D> >::operator ID3D11Texture2D * *, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 113
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??B?$ComPtrRef@V?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11Texture2D@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 114
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?ReleaseAndGetAddressOf@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAEPAPAUID3D11Texture2D@@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::ReleaseAndGetAddressOf
; Line 115
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??B?$ComPtrRef@V?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11Texture2D@@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??B?$ComPtrRef@V?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11Texture2D@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??B?$ComPtrRef@V?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11Texture2D@@XZ ENDP ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11Texture2D> >::operator ID3D11Texture2D * *
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$ComPtrRef@V?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11Texture2D@@@23@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_ptr$ = 8						; size = 4
??0?$ComPtrRef@V?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11Texture2D@@@23@@Z PROC ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11Texture2D> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11Texture2D> >, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 92
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$ComPtrRef@V?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11Texture2D@@@23@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 94
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ptr$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 95
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$ComPtrRef@V?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11Texture2D@@@23@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$ComPtrRef@V?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11Texture2D@@@23@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$ComPtrRef@V?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11Texture2D@@@23@@Z ENDP ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11Texture2D> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11Texture2D> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_classSize$ = 8						; size = 4
?__autoclassinit2@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAEXI@Z PROC ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::__autoclassinit2, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _classSize$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?__autoclassinit2@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAEXI@Z ENDP ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ReleaseAndGetAddressOf@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAEPAPAUID3D11Texture2D@@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?ReleaseAndGetAddressOf@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAEPAPAUID3D11Texture2D@@XZ PROC ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::ReleaseAndGetAddressOf, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 340
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ReleaseAndGetAddressOf@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAEPAPAUID3D11Texture2D@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 341
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InternalRelease@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::InternalRelease
; Line 342
	mov	eax, DWORD PTR _this$[ebp]
; Line 343
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?ReleaseAndGetAddressOf@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAEPAPAUID3D11Texture2D@@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ReleaseAndGetAddressOf@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAEPAPAUID3D11Texture2D@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?ReleaseAndGetAddressOf@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAEPAPAUID3D11Texture2D@@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::ReleaseAndGetAddressOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??I?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@@Details@12@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
??I?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@@Details@12@XZ PROC ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::operator&, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 320
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??I?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@@Details@12@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 321
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$ComPtrRef@V?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11Texture2D@@@23@@Z ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11Texture2D> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11Texture2D> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 322
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??I?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@@Details@12@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??I?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@@Details@12@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??I?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@@Details@12@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::operator&
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Get@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QBEPAUID3D11Texture2D@@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?Get@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QBEPAUID3D11Texture2D@@XZ PROC ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::Get, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 310
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Get@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QBEPAUID3D11Texture2D@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 311
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 312
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?Get@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QBEPAUID3D11Texture2D@@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Get@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QBEPAUID3D11Texture2D@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Get@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QBEPAUID3D11Texture2D@@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::Get
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ PROC ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 230
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 231
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InternalRelease@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::InternalRelease
; Line 232
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ PROC ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::ComPtr<ID3D11Texture2D>, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 185
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 184
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 186
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::ComPtr<ID3D11Texture2D>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?InternalRelease@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@IAEKXZ
_TEXT	SEGMENT
_temp$ = -44						; size = 4
_ref$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?InternalRelease@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@IAEKXZ PROC ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::InternalRelease, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 169
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?InternalRelease@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@IAEKXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 170
	mov	DWORD PTR _ref$[ebp], 0
; Line 171
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _temp$[ebp], ecx
; Line 173
	cmp	DWORD PTR _temp$[ebp], 0
	je	SHORT $LN2@InternalRe
; Line 175
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 176
	mov	eax, DWORD PTR _temp$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _temp$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ref$[ebp], eax
$LN2@InternalRe:
; Line 179
	mov	eax, DWORD PTR _ref$[ebp]
; Line 180
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?InternalRelease@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@IAEKXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-244]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?InternalRelease@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@IAEKXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?InternalRelease@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@IAEKXZ ENDP ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::InternalRelease
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??B?$ComPtrRef@V?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11DepthStencilState@@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??B?$ComPtrRef@V?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11DepthStencilState@@XZ PROC ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11DepthStencilState> >::operator ID3D11DepthStencilState * *, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 113
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??B?$ComPtrRef@V?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11DepthStencilState@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 114
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?ReleaseAndGetAddressOf@?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@QAEPAPAUID3D11DepthStencilState@@XZ ; Microsoft::WRL::ComPtr<ID3D11DepthStencilState>::ReleaseAndGetAddressOf
; Line 115
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??B?$ComPtrRef@V?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11DepthStencilState@@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??B?$ComPtrRef@V?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11DepthStencilState@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??B?$ComPtrRef@V?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11DepthStencilState@@XZ ENDP ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11DepthStencilState> >::operator ID3D11DepthStencilState * *
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$ComPtrRef@V?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11DepthStencilState@@@23@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_ptr$ = 8						; size = 4
??0?$ComPtrRef@V?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11DepthStencilState@@@23@@Z PROC ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11DepthStencilState> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11DepthStencilState> >, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 92
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$ComPtrRef@V?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11DepthStencilState@@@23@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 94
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ptr$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 95
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$ComPtrRef@V?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11DepthStencilState@@@23@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$ComPtrRef@V?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11DepthStencilState@@@23@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$ComPtrRef@V?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11DepthStencilState@@@23@@Z ENDP ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11DepthStencilState> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11DepthStencilState> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_classSize$ = 8						; size = 4
?__autoclassinit2@?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@QAEXI@Z PROC ; Microsoft::WRL::ComPtr<ID3D11DepthStencilState>::__autoclassinit2, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _classSize$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?__autoclassinit2@?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@QAEXI@Z ENDP ; Microsoft::WRL::ComPtr<ID3D11DepthStencilState>::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ReleaseAndGetAddressOf@?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@QAEPAPAUID3D11DepthStencilState@@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?ReleaseAndGetAddressOf@?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@QAEPAPAUID3D11DepthStencilState@@XZ PROC ; Microsoft::WRL::ComPtr<ID3D11DepthStencilState>::ReleaseAndGetAddressOf, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 340
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ReleaseAndGetAddressOf@?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@QAEPAPAUID3D11DepthStencilState@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 341
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InternalRelease@?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<ID3D11DepthStencilState>::InternalRelease
; Line 342
	mov	eax, DWORD PTR _this$[ebp]
; Line 343
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?ReleaseAndGetAddressOf@?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@QAEPAPAUID3D11DepthStencilState@@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ReleaseAndGetAddressOf@?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@QAEPAPAUID3D11DepthStencilState@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?ReleaseAndGetAddressOf@?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@QAEPAPAUID3D11DepthStencilState@@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D11DepthStencilState>::ReleaseAndGetAddressOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??I?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@@Details@12@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
??I?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@@Details@12@XZ PROC ; Microsoft::WRL::ComPtr<ID3D11DepthStencilState>::operator&, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 320
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??I?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@@Details@12@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 321
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$ComPtrRef@V?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11DepthStencilState@@@23@@Z ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11DepthStencilState> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11DepthStencilState> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 322
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??I?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@@Details@12@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??I?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@@Details@12@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??I?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@@Details@12@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D11DepthStencilState>::operator&
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Get@?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@QBEPAUID3D11DepthStencilState@@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?Get@?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@QBEPAUID3D11DepthStencilState@@XZ PROC ; Microsoft::WRL::ComPtr<ID3D11DepthStencilState>::Get, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 310
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Get@?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@QBEPAUID3D11DepthStencilState@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 311
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 312
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?Get@?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@QBEPAUID3D11DepthStencilState@@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Get@?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@QBEPAUID3D11DepthStencilState@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Get@?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@QBEPAUID3D11DepthStencilState@@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D11DepthStencilState>::Get
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@QAE@XZ PROC ; Microsoft::WRL::ComPtr<ID3D11DepthStencilState>::~ComPtr<ID3D11DepthStencilState>, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 230
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 231
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InternalRelease@?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<ID3D11DepthStencilState>::InternalRelease
; Line 232
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@QAE@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D11DepthStencilState>::~ComPtr<ID3D11DepthStencilState>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@QAE@XZ PROC ; Microsoft::WRL::ComPtr<ID3D11DepthStencilState>::ComPtr<ID3D11DepthStencilState>, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 185
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 184
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 186
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@QAE@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D11DepthStencilState>::ComPtr<ID3D11DepthStencilState>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?InternalRelease@?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@IAEKXZ
_TEXT	SEGMENT
_temp$ = -44						; size = 4
_ref$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?InternalRelease@?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@IAEKXZ PROC ; Microsoft::WRL::ComPtr<ID3D11DepthStencilState>::InternalRelease, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 169
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?InternalRelease@?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@IAEKXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 170
	mov	DWORD PTR _ref$[ebp], 0
; Line 171
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _temp$[ebp], ecx
; Line 173
	cmp	DWORD PTR _temp$[ebp], 0
	je	SHORT $LN2@InternalRe
; Line 175
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 176
	mov	eax, DWORD PTR _temp$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _temp$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ref$[ebp], eax
$LN2@InternalRe:
; Line 179
	mov	eax, DWORD PTR _ref$[ebp]
; Line 180
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?InternalRelease@?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@IAEKXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-244]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?InternalRelease@?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@IAEKXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?InternalRelease@?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@IAEKXZ ENDP ; Microsoft::WRL::ComPtr<ID3D11DepthStencilState>::InternalRelease
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??B?$ComPtrRef@V?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11RenderTargetView@@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??B?$ComPtrRef@V?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11RenderTargetView@@XZ PROC ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11RenderTargetView> >::operator ID3D11RenderTargetView * *, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 113
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??B?$ComPtrRef@V?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11RenderTargetView@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 114
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?ReleaseAndGetAddressOf@?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@QAEPAPAUID3D11RenderTargetView@@XZ ; Microsoft::WRL::ComPtr<ID3D11RenderTargetView>::ReleaseAndGetAddressOf
; Line 115
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??B?$ComPtrRef@V?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11RenderTargetView@@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??B?$ComPtrRef@V?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11RenderTargetView@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??B?$ComPtrRef@V?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11RenderTargetView@@XZ ENDP ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11RenderTargetView> >::operator ID3D11RenderTargetView * *
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$ComPtrRef@V?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11RenderTargetView@@@23@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_ptr$ = 8						; size = 4
??0?$ComPtrRef@V?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11RenderTargetView@@@23@@Z PROC ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11RenderTargetView> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11RenderTargetView> >, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 92
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$ComPtrRef@V?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11RenderTargetView@@@23@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 94
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ptr$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 95
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$ComPtrRef@V?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11RenderTargetView@@@23@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$ComPtrRef@V?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11RenderTargetView@@@23@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$ComPtrRef@V?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11RenderTargetView@@@23@@Z ENDP ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11RenderTargetView> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11RenderTargetView> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??B?$ComPtrRef@V?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QBEPAPAXXZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??B?$ComPtrRef@V?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QBEPAPAXXZ PROC ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11Resource> >::operator void * *, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 99
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??B?$ComPtrRef@V?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QBEPAPAXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 100
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?ReleaseAndGetAddressOf@?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@QAEPAPAUID3D11Resource@@XZ ; Microsoft::WRL::ComPtr<ID3D11Resource>::ReleaseAndGetAddressOf
; Line 101
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??B?$ComPtrRef@V?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QBEPAPAXXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??B?$ComPtrRef@V?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QBEPAPAXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??B?$ComPtrRef@V?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QBEPAPAXXZ ENDP ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11Resource> >::operator void * *
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$ComPtrRef@V?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11Resource@@@23@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_ptr$ = 8						; size = 4
??0?$ComPtrRef@V?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11Resource@@@23@@Z PROC ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11Resource> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11Resource> >, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 92
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$ComPtrRef@V?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11Resource@@@23@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 94
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ptr$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 95
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$ComPtrRef@V?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11Resource@@@23@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$ComPtrRef@V?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11Resource@@@23@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$ComPtrRef@V?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11Resource@@@23@@Z ENDP ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11Resource> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11Resource> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_classSize$ = 8						; size = 4
?__autoclassinit2@?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@QAEXI@Z PROC ; Microsoft::WRL::ComPtr<ID3D11Resource>::__autoclassinit2, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _classSize$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?__autoclassinit2@?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@QAEXI@Z ENDP ; Microsoft::WRL::ComPtr<ID3D11Resource>::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ReleaseAndGetAddressOf@?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@QAEPAPAUID3D11Resource@@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?ReleaseAndGetAddressOf@?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@QAEPAPAUID3D11Resource@@XZ PROC ; Microsoft::WRL::ComPtr<ID3D11Resource>::ReleaseAndGetAddressOf, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 340
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ReleaseAndGetAddressOf@?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@QAEPAPAUID3D11Resource@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 341
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InternalRelease@?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<ID3D11Resource>::InternalRelease
; Line 342
	mov	eax, DWORD PTR _this$[ebp]
; Line 343
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?ReleaseAndGetAddressOf@?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@QAEPAPAUID3D11Resource@@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ReleaseAndGetAddressOf@?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@QAEPAPAUID3D11Resource@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?ReleaseAndGetAddressOf@?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@QAEPAPAUID3D11Resource@@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D11Resource>::ReleaseAndGetAddressOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??I?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@@Details@12@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
??I?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@@Details@12@XZ PROC ; Microsoft::WRL::ComPtr<ID3D11Resource>::operator&, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 320
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??I?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@@Details@12@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 321
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$ComPtrRef@V?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11Resource@@@23@@Z ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11Resource> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11Resource> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 322
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??I?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@@Details@12@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??I?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@@Details@12@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??I?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@@Details@12@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D11Resource>::operator&
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Get@?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@QBEPAUID3D11Resource@@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?Get@?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@QBEPAUID3D11Resource@@XZ PROC ; Microsoft::WRL::ComPtr<ID3D11Resource>::Get, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 310
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Get@?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@QBEPAUID3D11Resource@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 311
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 312
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?Get@?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@QBEPAUID3D11Resource@@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Get@?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@QBEPAUID3D11Resource@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Get@?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@QBEPAUID3D11Resource@@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D11Resource>::Get
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@QAE@XZ PROC ; Microsoft::WRL::ComPtr<ID3D11Resource>::~ComPtr<ID3D11Resource>, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 230
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 231
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InternalRelease@?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<ID3D11Resource>::InternalRelease
; Line 232
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@QAE@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D11Resource>::~ComPtr<ID3D11Resource>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@QAE@XZ PROC ; Microsoft::WRL::ComPtr<ID3D11Resource>::ComPtr<ID3D11Resource>, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 185
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 184
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 186
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@QAE@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D11Resource>::ComPtr<ID3D11Resource>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?InternalRelease@?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@IAEKXZ
_TEXT	SEGMENT
_temp$ = -44						; size = 4
_ref$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?InternalRelease@?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@IAEKXZ PROC ; Microsoft::WRL::ComPtr<ID3D11Resource>::InternalRelease, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 169
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?InternalRelease@?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@IAEKXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 170
	mov	DWORD PTR _ref$[ebp], 0
; Line 171
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _temp$[ebp], ecx
; Line 173
	cmp	DWORD PTR _temp$[ebp], 0
	je	SHORT $LN2@InternalRe
; Line 175
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 176
	mov	eax, DWORD PTR _temp$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _temp$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ref$[ebp], eax
$LN2@InternalRe:
; Line 179
	mov	eax, DWORD PTR _ref$[ebp]
; Line 180
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?InternalRelease@?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@IAEKXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-244]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?InternalRelease@?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@IAEKXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?InternalRelease@?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@IAEKXZ ENDP ; Microsoft::WRL::ComPtr<ID3D11Resource>::InternalRelease
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??B?$ComPtrRef@V?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11DeviceContext@@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??B?$ComPtrRef@V?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11DeviceContext@@XZ PROC ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11DeviceContext> >::operator ID3D11DeviceContext * *, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 113
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??B?$ComPtrRef@V?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11DeviceContext@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 114
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?ReleaseAndGetAddressOf@?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@QAEPAPAUID3D11DeviceContext@@XZ ; Microsoft::WRL::ComPtr<ID3D11DeviceContext>::ReleaseAndGetAddressOf
; Line 115
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??B?$ComPtrRef@V?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11DeviceContext@@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??B?$ComPtrRef@V?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11DeviceContext@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??B?$ComPtrRef@V?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11DeviceContext@@XZ ENDP ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11DeviceContext> >::operator ID3D11DeviceContext * *
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$ComPtrRef@V?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11DeviceContext@@@23@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_ptr$ = 8						; size = 4
??0?$ComPtrRef@V?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11DeviceContext@@@23@@Z PROC ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11DeviceContext> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11DeviceContext> >, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 92
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$ComPtrRef@V?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11DeviceContext@@@23@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 94
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ptr$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 95
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$ComPtrRef@V?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11DeviceContext@@@23@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$ComPtrRef@V?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11DeviceContext@@@23@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$ComPtrRef@V?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11DeviceContext@@@23@@Z ENDP ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11DeviceContext> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11DeviceContext> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??B?$ComPtrRef@V?$ComPtr@UID3D11Device@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11Device@@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??B?$ComPtrRef@V?$ComPtr@UID3D11Device@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11Device@@XZ PROC ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11Device> >::operator ID3D11Device * *, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 113
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??B?$ComPtrRef@V?$ComPtr@UID3D11Device@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11Device@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 114
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?ReleaseAndGetAddressOf@?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAEPAPAUID3D11Device@@XZ ; Microsoft::WRL::ComPtr<ID3D11Device>::ReleaseAndGetAddressOf
; Line 115
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??B?$ComPtrRef@V?$ComPtr@UID3D11Device@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11Device@@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??B?$ComPtrRef@V?$ComPtr@UID3D11Device@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11Device@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??B?$ComPtrRef@V?$ComPtr@UID3D11Device@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11Device@@XZ ENDP ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11Device> >::operator ID3D11Device * *
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$ComPtrRef@V?$ComPtr@UID3D11Device@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11Device@@@23@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_ptr$ = 8						; size = 4
??0?$ComPtrRef@V?$ComPtr@UID3D11Device@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11Device@@@23@@Z PROC ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11Device> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11Device> >, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 92
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$ComPtrRef@V?$ComPtr@UID3D11Device@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11Device@@@23@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 94
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ptr$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 95
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$ComPtrRef@V?$ComPtr@UID3D11Device@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11Device@@@23@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$ComPtrRef@V?$ComPtr@UID3D11Device@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11Device@@@23@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$ComPtrRef@V?$ComPtr@UID3D11Device@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11Device@@@23@@Z ENDP ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11Device> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11Device> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??B?$ComPtrRef@V?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUIDXGISwapChain@@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??B?$ComPtrRef@V?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUIDXGISwapChain@@XZ PROC ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IDXGISwapChain> >::operator IDXGISwapChain * *, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 113
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??B?$ComPtrRef@V?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUIDXGISwapChain@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 114
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?ReleaseAndGetAddressOf@?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QAEPAPAUIDXGISwapChain@@XZ ; Microsoft::WRL::ComPtr<IDXGISwapChain>::ReleaseAndGetAddressOf
; Line 115
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??B?$ComPtrRef@V?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUIDXGISwapChain@@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??B?$ComPtrRef@V?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUIDXGISwapChain@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??B?$ComPtrRef@V?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUIDXGISwapChain@@XZ ENDP ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IDXGISwapChain> >::operator IDXGISwapChain * *
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$ComPtrRef@V?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UIDXGISwapChain@@@23@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_ptr$ = 8						; size = 4
??0?$ComPtrRef@V?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UIDXGISwapChain@@@23@@Z PROC ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IDXGISwapChain> >::ComPtrRef<Microsoft::WRL::ComPtr<IDXGISwapChain> >, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 92
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$ComPtrRef@V?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UIDXGISwapChain@@@23@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 94
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ptr$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 95
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$ComPtrRef@V?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UIDXGISwapChain@@@23@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$ComPtrRef@V?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UIDXGISwapChain@@@23@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$ComPtrRef@V?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UIDXGISwapChain@@@23@@Z ENDP ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IDXGISwapChain> >::ComPtrRef<Microsoft::WRL::ComPtr<IDXGISwapChain> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?XMScalarSinCos@DirectX@@YAXPAM0M@Z
_TEXT	SEGMENT
_p$ = -56						; size = 4
_y2$ = -44						; size = 4
_sign$ = -32						; size = 4
_y$ = -20						; size = 4
_quotient$ = -8						; size = 4
_pSin$ = 8						; size = 4
_pCos$ = 12						; size = 4
_Value$ = 16						; size = 4
?XMScalarSinCos@DirectX@@YAXPAM0M@Z PROC		; DirectX::XMScalarSinCos, COMDAT
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\um\DirectXMathMisc.inl
; Line 2317
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __20B0B2D8_DirectXMathMisc@inl
	call	@__CheckForDebuggerJustMyCode@4
; Line 2318
	cmp	DWORD PTR _pSin$[ebp], 0
	jne	SHORT $LN9@XMScalarSi
	mov	eax, DWORD PTR ?__LINE__Var@?0??XMScalarSinCos@DirectX@@YAXPAM0M@Z@4JA
	add	eax, 1
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1KG@NLJHBPON@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_19MFJHDIJG@?$AAp?$AAS?$AAi?$AAn@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN9@XMScalarSi:
; Line 2319
	cmp	DWORD PTR _pCos$[ebp], 0
	jne	SHORT $LN10@XMScalarSi
	mov	eax, DWORD PTR ?__LINE__Var@?0??XMScalarSinCos@DirectX@@YAXPAM0M@Z@4JA
	add	eax, 2
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1KG@NLJHBPON@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_19MNAGGFOC@?$AAp?$AAC?$AAo?$AAs@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN10@XMScalarSi:
; Line 2322
	movss	xmm0, DWORD PTR __real@3e22f983
	mulss	xmm0, DWORD PTR _Value$[ebp]
	movss	DWORD PTR _quotient$[ebp], xmm0
; Line 2323
	movss	xmm0, DWORD PTR _Value$[ebp]
	comiss	xmm0, DWORD PTR __real@00000000
	jb	SHORT $LN2@XMScalarSi
; Line 2325
	movss	xmm0, DWORD PTR _quotient$[ebp]
	addss	xmm0, DWORD PTR __real@3f000000
	cvttss2si eax, xmm0
	cvtsi2ss xmm0, eax
	movss	DWORD PTR _quotient$[ebp], xmm0
; Line 2326
	jmp	SHORT $LN3@XMScalarSi
$LN2@XMScalarSi:
; Line 2329
	movss	xmm0, DWORD PTR _quotient$[ebp]
	subss	xmm0, DWORD PTR __real@3f000000
	cvttss2si eax, xmm0
	cvtsi2ss xmm0, eax
	movss	DWORD PTR _quotient$[ebp], xmm0
$LN3@XMScalarSi:
; Line 2331
	movss	xmm0, DWORD PTR __real@40c90fdb
	mulss	xmm0, DWORD PTR _quotient$[ebp]
	movss	xmm1, DWORD PTR _Value$[ebp]
	subss	xmm1, xmm0
	movss	DWORD PTR _y$[ebp], xmm1
; Line 2335
	movss	xmm0, DWORD PTR _y$[ebp]
	comiss	xmm0, DWORD PTR __real@3fc90fdb
	jbe	SHORT $LN4@XMScalarSi
; Line 2337
	movss	xmm0, DWORD PTR __real@40490fdb
	subss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR _y$[ebp], xmm0
; Line 2338
	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR _sign$[ebp], xmm0
; Line 2339
	jmp	SHORT $LN7@XMScalarSi
$LN4@XMScalarSi:
; Line 2340
	movss	xmm0, DWORD PTR __real@bfc90fdb
	comiss	xmm0, DWORD PTR _y$[ebp]
	jbe	SHORT $LN6@XMScalarSi
; Line 2342
	movss	xmm0, DWORD PTR __real@c0490fdb
	subss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR _y$[ebp], xmm0
; Line 2343
	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR _sign$[ebp], xmm0
; Line 2344
	jmp	SHORT $LN7@XMScalarSi
$LN6@XMScalarSi:
; Line 2347
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _sign$[ebp], xmm0
$LN7@XMScalarSi:
; Line 2350
	movss	xmm0, DWORD PTR _y$[ebp]
	mulss	xmm0, DWORD PTR _y$[ebp]
	movss	DWORD PTR _y2$[ebp], xmm0
; Line 2353
	movss	xmm0, DWORD PTR __real@b2cd365b
	mulss	xmm0, DWORD PTR _y2$[ebp]
	addss	xmm0, DWORD PTR __real@3638b88e
	mulss	xmm0, DWORD PTR _y2$[ebp]
	subss	xmm0, DWORD PTR __real@39500bf1
	mulss	xmm0, DWORD PTR _y2$[ebp]
	addss	xmm0, DWORD PTR __real@3c088886
	mulss	xmm0, DWORD PTR _y2$[ebp]
	subss	xmm0, DWORD PTR __real@3e2aaaab
	mulss	xmm0, DWORD PTR _y2$[ebp]
	addss	xmm0, DWORD PTR __real@3f800000
	mulss	xmm0, DWORD PTR _y$[ebp]
	mov	eax, DWORD PTR _pSin$[ebp]
	movss	DWORD PTR [eax], xmm0
; Line 2356
	movss	xmm0, DWORD PTR __real@b48bdd11
	mulss	xmm0, DWORD PTR _y2$[ebp]
	addss	xmm0, DWORD PTR __real@37cfb4c2
	mulss	xmm0, DWORD PTR _y2$[ebp]
	subss	xmm0, DWORD PTR __real@3ab609aa
	mulss	xmm0, DWORD PTR _y2$[ebp]
	addss	xmm0, DWORD PTR __real@3d2aaaa3
	mulss	xmm0, DWORD PTR _y2$[ebp]
	subss	xmm0, DWORD PTR __real@3f000000
	mulss	xmm0, DWORD PTR _y2$[ebp]
	addss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _p$[ebp], xmm0
; Line 2357
	movss	xmm0, DWORD PTR _sign$[ebp]
	mulss	xmm0, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR _pCos$[ebp]
	movss	DWORD PTR [eax], xmm0
; Line 2358
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?XMScalarSinCos@DirectX@@YAXPAM0M@Z ENDP		; DirectX::XMScalarSinCos
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?XMScalarNearEqual@DirectX@@YA_NMMM@Z
_TEXT	SEGMENT
tv68 = -212						; size = 4
tv77 = -208						; size = 4
_Delta$ = -8						; size = 4
_S1$ = 8						; size = 4
_S2$ = 12						; size = 4
_Epsilon$ = 16						; size = 4
?XMScalarNearEqual@DirectX@@YA_NMMM@Z PROC		; DirectX::XMScalarNearEqual, COMDAT
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\um\DirectXMathMisc.inl
; Line 2127
	push	ebp
	mov	ebp, esp
	sub	esp, 212				; 000000d4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-212]
	mov	ecx, 53					; 00000035H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __20B0B2D8_DirectXMathMisc@inl
	call	@__CheckForDebuggerJustMyCode@4
; Line 2128
	movss	xmm0, DWORD PTR _S1$[ebp]
	subss	xmm0, DWORD PTR _S2$[ebp]
	movss	DWORD PTR _Delta$[ebp], xmm0
; Line 2129
	push	ecx
	movss	xmm0, DWORD PTR _Delta$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	_fabsf
	add	esp, 4
	fstp	DWORD PTR tv77[ebp]
	movss	xmm0, DWORD PTR _Epsilon$[ebp]
	comiss	xmm0, DWORD PTR tv77[ebp]
	jb	SHORT $LN3@XMScalarNe
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN4@XMScalarNe
$LN3@XMScalarNe:
	mov	DWORD PTR tv68[ebp], 0
$LN4@XMScalarNe:
	mov	al, BYTE PTR tv68[ebp]
; Line 2130
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 212				; 000000d4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?XMScalarNearEqual@DirectX@@YA_NMMM@Z ENDP		; DirectX::XMScalarNearEqual
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?XMMatrixPerspectiveLH@DirectX@@YQ?AUXMMATRIX@1@MMMM@Z
_TEXT	SEGMENT
$T1 = -912						; size = 16
$T2 = -880						; size = 16
$T3 = -848						; size = 16
$T4 = -816						; size = 16
$T5 = -784						; size = 16
$T6 = -752						; size = 16
$T7 = -720						; size = 16
$T8 = -688						; size = 16
$T9 = -656						; size = 16
_vTemp$ = -240						; size = 16
_vValues$ = -208					; size = 16
_rMem$ = -176						; size = 16
_fRange$ = -152						; size = 4
_TwoNearZ$ = -140					; size = 4
_M$ = -128						; size = 64
_FarZ$ = -44						; size = 4
_NearZ$ = -32						; size = 4
_ViewHeight$ = -20					; size = 4
_ViewWidth$ = -8					; size = 4
?XMMatrixPerspectiveLH@DirectX@@YQ?AUXMMATRIX@1@MMMM@Z PROC ; DirectX::XMMatrixPerspectiveLH, COMDAT
; _ViewWidth$ = xmm0s
; _ViewHeight$ = xmm1s
; _NearZ$ = xmm2s
; _FarZ$ = xmm3s
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\um\DirectXMathMatrix.inl
; Line 2018
	push	ebx
	mov	ebx, esp
	sub	esp, 8
	and	esp, -16				; fffffff0H
	add	esp, 4
	push	ebp
	mov	ebp, DWORD PTR [ebx+4]
	mov	DWORD PTR [esp+4], ebp
	mov	ebp, esp
	sub	esp, 920				; 00000398H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-920]
	mov	ecx, 230				; 000000e6H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	movss	DWORD PTR _FarZ$[ebp], xmm3
	movss	DWORD PTR _NearZ$[ebp], xmm2
	movss	DWORD PTR _ViewHeight$[ebp], xmm1
	movss	DWORD PTR _ViewWidth$[ebp], xmm0
	mov	ecx, OFFSET __7142F416_DirectXMathMatrix@inl
	call	@__CheckForDebuggerJustMyCode@4
; Line 2019
	movss	xmm0, DWORD PTR _NearZ$[ebp]
	comiss	xmm0, DWORD PTR __real@00000000
	jbe	SHORT $LN3@XMMatrixPe
	movss	xmm0, DWORD PTR _FarZ$[ebp]
	comiss	xmm0, DWORD PTR __real@00000000
	ja	SHORT $LN4@XMMatrixPe
$LN3@XMMatrixPe:
	mov	eax, DWORD PTR ?__LINE__Var@?0??XMMatrixPerspectiveLH@DirectX@@YQ?AUXMMATRIX@2@MMMM@Z@4JA
	add	eax, 1
	mov	esi, esp
	push	eax
	push	OFFSET ??_C@_1KK@OEJMKAH@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_1DE@NHJOKGBK@?$AAN?$AAe?$AAa?$AAr?$AAZ?$AA?5?$AA?$DO?$AA?5?$AA0?$AA?4?$AAf?$AA?5?$AA?$CG?$AA?$CG?$AA?5@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@XMMatrixPe:
; Line 2020
	push	ecx
	movss	xmm0, DWORD PTR __real@3727c5ac
	movss	DWORD PTR [esp], xmm0
	push	ecx
	xorps	xmm0, xmm0
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _ViewWidth$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?XMScalarNearEqual@DirectX@@YA_NMMM@Z	; DirectX::XMScalarNearEqual
	add	esp, 12					; 0000000cH
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN5@XMMatrixPe
	mov	ecx, DWORD PTR ?__LINE__Var@?0??XMMatrixPerspectiveLH@DirectX@@YQ?AUXMMATRIX@2@MMMM@Z@4JA
	add	ecx, 2
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1KK@OEJMKAH@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_1FM@GHGDCEAE@?$AA?$CB?$AAX?$AAM?$AAS?$AAc?$AAa?$AAl?$AAa?$AAr?$AAN?$AAe?$AAa?$AAr?$AAE?$AAq@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@XMMatrixPe:
; Line 2021
	push	ecx
	movss	xmm0, DWORD PTR __real@3727c5ac
	movss	DWORD PTR [esp], xmm0
	push	ecx
	xorps	xmm0, xmm0
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _ViewHeight$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?XMScalarNearEqual@DirectX@@YA_NMMM@Z	; DirectX::XMScalarNearEqual
	add	esp, 12					; 0000000cH
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN6@XMMatrixPe
	mov	ecx, DWORD PTR ?__LINE__Var@?0??XMMatrixPerspectiveLH@DirectX@@YQ?AUXMMATRIX@2@MMMM@Z@4JA
	add	ecx, 3
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1KK@OEJMKAH@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_1FO@OGFPCKGG@?$AA?$CB?$AAX?$AAM?$AAS?$AAc?$AAa?$AAl?$AAa?$AAr?$AAN?$AAe?$AAa?$AAr?$AAE?$AAq@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@XMMatrixPe:
; Line 2022
	push	ecx
	movss	xmm0, DWORD PTR __real@3727c5ac
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _NearZ$[ebp]
	movss	DWORD PTR [esp], xmm0
	push	ecx
	movss	xmm0, DWORD PTR _FarZ$[ebp]
	movss	DWORD PTR [esp], xmm0
	call	?XMScalarNearEqual@DirectX@@YA_NMMM@Z	; DirectX::XMScalarNearEqual
	add	esp, 12					; 0000000cH
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN7@XMMatrixPe
	mov	ecx, DWORD PTR ?__LINE__Var@?0??XMMatrixPerspectiveLH@DirectX@@YQ?AUXMMATRIX@2@MMMM@Z@4JA
	add	ecx, 4
	mov	esi, esp
	push	ecx
	push	OFFSET ??_C@_1KK@OEJMKAH@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_1FE@IMEJOJAH@?$AA?$CB?$AAX?$AAM?$AAS?$AAc?$AAa?$AAl?$AAa?$AAr?$AAN?$AAe?$AAa?$AAr?$AAE?$AAq@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN7@XMMatrixPe:
; Line 2063
	movss	xmm0, DWORD PTR _NearZ$[ebp]
	addss	xmm0, DWORD PTR _NearZ$[ebp]
	movss	DWORD PTR _TwoNearZ$[ebp], xmm0
; Line 2064
	movss	xmm0, DWORD PTR _FarZ$[ebp]
	subss	xmm0, DWORD PTR _NearZ$[ebp]
	movss	xmm1, DWORD PTR _FarZ$[ebp]
	divss	xmm1, xmm0
	movss	DWORD PTR _fRange$[ebp], xmm1
; Line 2067
	movss	xmm0, DWORD PTR _TwoNearZ$[ebp]
	divss	xmm0, DWORD PTR _ViewWidth$[ebp]
	movss	DWORD PTR _rMem$[ebp], xmm0
; Line 2068
	movss	xmm0, DWORD PTR _TwoNearZ$[ebp]
	divss	xmm0, DWORD PTR _ViewHeight$[ebp]
	movss	DWORD PTR _rMem$[ebp+4], xmm0
; Line 2069
	movss	xmm0, DWORD PTR _fRange$[ebp]
	movss	DWORD PTR _rMem$[ebp+8], xmm0
; Line 2070
	movss	xmm0, DWORD PTR _fRange$[ebp]
	xorps	xmm0, DWORD PTR __xmm@80000000800000008000000080000000
	mulss	xmm0, DWORD PTR _NearZ$[ebp]
	movss	DWORD PTR _rMem$[ebp+12], xmm0
; Line 2073
	movaps	xmm0, XMMWORD PTR _rMem$[ebp]
	movaps	XMMWORD PTR _vValues$[ebp], xmm0
; Line 2074
	xorps	xmm0, xmm0
	movaps	XMMWORD PTR $T9[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T9[ebp]
	movaps	XMMWORD PTR _vTemp$[ebp], xmm0
; Line 2076
	movaps	xmm0, XMMWORD PTR _vValues$[ebp]
	movaps	xmm1, XMMWORD PTR _vTemp$[ebp]
	movss	xmm1, xmm0
	movaps	XMMWORD PTR $T8[ebp], xmm1
	movaps	xmm0, XMMWORD PTR $T8[ebp]
	movaps	XMMWORD PTR _vTemp$[ebp], xmm0
; Line 2078
	mov	eax, 16					; 00000010H
	imul	ecx, eax, 0
	movups	xmm0, XMMWORD PTR _vTemp$[ebp]
	movups	XMMWORD PTR _M$[ebp+ecx], xmm0
; Line 2080
	movaps	xmm0, XMMWORD PTR _vValues$[ebp]
	movaps	XMMWORD PTR _vTemp$[ebp], xmm0
; Line 2081
	lea	eax, DWORD PTR $T6[ebp]
	push	eax
	mov	ecx, OFFSET ?g_XMMaskY@DirectX@@3UXMVECTORU32@1@B ; DirectX::g_XMMaskY
	call	??BXMVECTORU32@DirectX@@QBE?AT__m128@@XZ ; DirectX::XMVECTORU32::operator __m128
	movups	xmm0, XMMWORD PTR [eax]
	movaps	xmm1, XMMWORD PTR _vTemp$[ebp]
	andps	xmm1, xmm0
	movaps	XMMWORD PTR $T7[ebp], xmm1
	movaps	xmm0, XMMWORD PTR $T7[ebp]
	movaps	XMMWORD PTR _vTemp$[ebp], xmm0
; Line 2082
	mov	eax, 16					; 00000010H
	shl	eax, 0
	movups	xmm0, XMMWORD PTR _vTemp$[ebp]
	movups	XMMWORD PTR _M$[ebp+eax], xmm0
; Line 2084
	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	mov	ecx, OFFSET ?g_XMIdentityR3@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMIdentityR3
	call	??BXMVECTORF32@DirectX@@QBE?AT__m128@@XZ ; DirectX::XMVECTORF32::operator __m128
	movups	xmm0, XMMWORD PTR [eax]
	movaps	xmm1, XMMWORD PTR _vValues$[ebp]
	shufps	xmm1, xmm0, 238				; 000000eeH
	movaps	XMMWORD PTR $T5[ebp], xmm1
	movaps	xmm0, XMMWORD PTR $T5[ebp]
	movaps	XMMWORD PTR _vValues$[ebp], xmm0
; Line 2086
	xorps	xmm0, xmm0
	movaps	XMMWORD PTR $T3[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T3[ebp]
	movaps	XMMWORD PTR _vTemp$[ebp], xmm0
; Line 2087
	movaps	xmm0, XMMWORD PTR _vTemp$[ebp]
	shufps	xmm0, XMMWORD PTR _vValues$[ebp], 192	; 000000c0H
	movaps	XMMWORD PTR $T2[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T2[ebp]
	movaps	XMMWORD PTR _vTemp$[ebp], xmm0
; Line 2088
	mov	eax, 16					; 00000010H
	shl	eax, 1
	movups	xmm0, XMMWORD PTR _vTemp$[ebp]
	movups	XMMWORD PTR _M$[ebp+eax], xmm0
; Line 2090
	movaps	xmm0, XMMWORD PTR _vTemp$[ebp]
	shufps	xmm0, XMMWORD PTR _vValues$[ebp], 144	; 00000090H
	movaps	XMMWORD PTR $T1[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T1[ebp]
	movaps	XMMWORD PTR _vTemp$[ebp], xmm0
; Line 2091
	mov	eax, 16					; 00000010H
	imul	ecx, eax, 3
	movups	xmm0, XMMWORD PTR _vTemp$[ebp]
	movups	XMMWORD PTR _M$[ebp+ecx], xmm0
; Line 2092
	movaps	xmm0, XMMWORD PTR _M$[ebp]
	movaps	xmm1, XMMWORD PTR _M$[ebp+16]
	movaps	xmm2, XMMWORD PTR _M$[ebp+32]
	movaps	xmm3, XMMWORD PTR _M$[ebp+48]
; Line 2094
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@XMMatrixPe
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	mov	esp, ebx
	pop	ebx
	ret	0
	npad	2
$LN10@XMMatrixPe:
	DD	1
	DD	$LN9@XMMatrixPe
$LN9@XMMatrixPe:
	DD	-128					; ffffff80H
	DD	64					; 00000040H
	DD	$LN8@XMMatrixPe
$LN8@XMMatrixPe:
	DB	77					; 0000004dH
	DB	0
?XMMatrixPerspectiveLH@DirectX@@YQ?AUXMMATRIX@1@MMMM@Z ENDP ; DirectX::XMMatrixPerspectiveLH
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?XMMatrixRotationY@DirectX@@YQ?AUXMMATRIX@1@M@Z
_TEXT	SEGMENT
$T1 = -624						; size = 16
$T2 = -592						; size = 16
$T3 = -560						; size = 16
$T4 = -528						; size = 16
$T5 = -496						; size = 16
$T6 = -464						; size = 16
$T7 = -432						; size = 16
$T8 = -400						; size = 16
_M$ = -176						; size = 64
_vCos$ = -96						; size = 16
_vSin$ = -64						; size = 16
_CosAngle$ = -36					; size = 4
_SinAngle$ = -24					; size = 4
_Angle$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
?XMMatrixRotationY@DirectX@@YQ?AUXMMATRIX@1@M@Z PROC	; DirectX::XMMatrixRotationY, COMDAT
; _Angle$ = xmm0s
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\um\DirectXMathMatrix.inl
; Line 1373
	push	ebx
	mov	ebx, esp
	sub	esp, 8
	and	esp, -16				; fffffff0H
	add	esp, 4
	push	ebp
	mov	ebp, DWORD PTR [ebx+4]
	mov	DWORD PTR [esp+4], ebp
	mov	ebp, esp
	sub	esp, 632				; 00000278H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-632]
	mov	ecx, 158				; 0000009eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	movss	DWORD PTR _Angle$[ebp], xmm0
	mov	ecx, OFFSET __7142F416_DirectXMathMatrix@inl
	call	@__CheckForDebuggerJustMyCode@4
; Line 1424
	push	ecx
	movss	xmm0, DWORD PTR _Angle$[ebp]
	movss	DWORD PTR [esp], xmm0
	lea	eax, DWORD PTR _CosAngle$[ebp]
	push	eax
	lea	ecx, DWORD PTR _SinAngle$[ebp]
	push	ecx
	call	?XMScalarSinCos@DirectX@@YAXPAM0M@Z	; DirectX::XMScalarSinCos
	add	esp, 12					; 0000000cH
; Line 1426
	movss	xmm0, DWORD PTR _SinAngle$[ebp]
	xorps	xmm1, xmm1
	movss	xmm1, xmm0
	movaps	XMMWORD PTR $T8[ebp], xmm1
	movaps	xmm0, XMMWORD PTR $T8[ebp]
	movaps	XMMWORD PTR _vSin$[ebp], xmm0
; Line 1427
	movss	xmm0, DWORD PTR _CosAngle$[ebp]
	xorps	xmm1, xmm1
	movss	xmm1, xmm0
	movaps	XMMWORD PTR $T7[ebp], xmm1
	movaps	xmm0, XMMWORD PTR $T7[ebp]
	movaps	XMMWORD PTR _vCos$[ebp], xmm0
; Line 1429
	movaps	xmm0, XMMWORD PTR _vSin$[ebp]
	shufps	xmm0, XMMWORD PTR _vCos$[ebp], 204	; 000000ccH
	movaps	XMMWORD PTR $T6[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T6[ebp]
	movaps	XMMWORD PTR _vSin$[ebp], xmm0
; Line 1431
	mov	eax, 16					; 00000010H
	shl	eax, 1
	movups	xmm0, XMMWORD PTR _vSin$[ebp]
	movups	XMMWORD PTR _M$[ebp+eax], xmm0
; Line 1432
	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	mov	ecx, OFFSET ?g_XMIdentityR1@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMIdentityR1
	call	??BXMVECTORF32@DirectX@@QBE?AT__m128@@XZ ; DirectX::XMVECTORF32::operator __m128
	mov	ecx, 16					; 00000010H
	shl	ecx, 0
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR _M$[ebp+ecx], xmm0
; Line 1434
	movaps	xmm0, XMMWORD PTR _vSin$[ebp]
	shufps	xmm0, XMMWORD PTR _vSin$[ebp], 198	; 000000c6H
	movaps	XMMWORD PTR $T4[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T4[ebp]
	movaps	XMMWORD PTR _vSin$[ebp], xmm0
; Line 1436
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, OFFSET ?g_XMNegateZ@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMNegateZ
	call	??BXMVECTORF32@DirectX@@QBE?AT__m128@@XZ ; DirectX::XMVECTORF32::operator __m128
	movups	xmm0, XMMWORD PTR [eax]
	movaps	xmm1, XMMWORD PTR _vSin$[ebp]
	mulps	xmm1, xmm0
	movaps	XMMWORD PTR $T3[ebp], xmm1
	movaps	xmm0, XMMWORD PTR $T3[ebp]
	movaps	XMMWORD PTR _vSin$[ebp], xmm0
; Line 1437
	mov	eax, 16					; 00000010H
	imul	ecx, eax, 0
	movups	xmm0, XMMWORD PTR _vSin$[ebp]
	movups	XMMWORD PTR _M$[ebp+ecx], xmm0
; Line 1438
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, OFFSET ?g_XMIdentityR3@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMIdentityR3
	call	??BXMVECTORF32@DirectX@@QBE?AT__m128@@XZ ; DirectX::XMVECTORF32::operator __m128
	mov	ecx, 16					; 00000010H
	imul	edx, ecx, 3
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR _M$[ebp+edx], xmm0
; Line 1439
	movaps	xmm0, XMMWORD PTR _M$[ebp]
	movaps	xmm1, XMMWORD PTR _M$[ebp+16]
	movaps	xmm2, XMMWORD PTR _M$[ebp+32]
	movaps	xmm3, XMMWORD PTR _M$[ebp+48]
; Line 1441
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@XMMatrixRo
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	mov	esp, ebx
	pop	ebx
	ret	0
	npad	3
$LN7@XMMatrixRo:
	DD	3
	DD	$LN6@XMMatrixRo
$LN6@XMMatrixRo:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN3@XMMatrixRo
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN4@XMMatrixRo
	DD	-176					; ffffff50H
	DD	64					; 00000040H
	DD	$LN5@XMMatrixRo
$LN5@XMMatrixRo:
	DB	77					; 0000004dH
	DB	0
$LN4@XMMatrixRo:
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	65					; 00000041H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	0
$LN3@XMMatrixRo:
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	65					; 00000041H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	0
?XMMatrixRotationY@DirectX@@YQ?AUXMMATRIX@1@M@Z ENDP	; DirectX::XMMatrixRotationY
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?XMMatrixRotationX@DirectX@@YQ?AUXMMATRIX@1@M@Z
_TEXT	SEGMENT
$T1 = -624						; size = 16
$T2 = -592						; size = 16
$T3 = -560						; size = 16
$T4 = -528						; size = 16
$T5 = -496						; size = 16
$T6 = -464						; size = 16
$T7 = -432						; size = 16
$T8 = -400						; size = 16
_M$ = -176						; size = 64
_vCos$ = -96						; size = 16
_vSin$ = -64						; size = 16
_CosAngle$ = -36					; size = 4
_SinAngle$ = -24					; size = 4
_Angle$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
?XMMatrixRotationX@DirectX@@YQ?AUXMMATRIX@1@M@Z PROC	; DirectX::XMMatrixRotationX, COMDAT
; _Angle$ = xmm0s
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\um\DirectXMathMatrix.inl
; Line 1297
	push	ebx
	mov	ebx, esp
	sub	esp, 8
	and	esp, -16				; fffffff0H
	add	esp, 4
	push	ebp
	mov	ebp, DWORD PTR [ebx+4]
	mov	DWORD PTR [esp+4], ebp
	mov	ebp, esp
	sub	esp, 632				; 00000278H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-632]
	mov	ecx, 158				; 0000009eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	movss	DWORD PTR _Angle$[ebp], xmm0
	mov	ecx, OFFSET __7142F416_DirectXMathMatrix@inl
	call	@__CheckForDebuggerJustMyCode@4
; Line 1348
	push	ecx
	movss	xmm0, DWORD PTR _Angle$[ebp]
	movss	DWORD PTR [esp], xmm0
	lea	eax, DWORD PTR _CosAngle$[ebp]
	push	eax
	lea	ecx, DWORD PTR _SinAngle$[ebp]
	push	ecx
	call	?XMScalarSinCos@DirectX@@YAXPAM0M@Z	; DirectX::XMScalarSinCos
	add	esp, 12					; 0000000cH
; Line 1350
	movss	xmm0, DWORD PTR _SinAngle$[ebp]
	xorps	xmm1, xmm1
	movss	xmm1, xmm0
	movaps	XMMWORD PTR $T8[ebp], xmm1
	movaps	xmm0, XMMWORD PTR $T8[ebp]
	movaps	XMMWORD PTR _vSin$[ebp], xmm0
; Line 1351
	movss	xmm0, DWORD PTR _CosAngle$[ebp]
	xorps	xmm1, xmm1
	movss	xmm1, xmm0
	movaps	XMMWORD PTR $T7[ebp], xmm1
	movaps	xmm0, XMMWORD PTR $T7[ebp]
	movaps	XMMWORD PTR _vCos$[ebp], xmm0
; Line 1353
	movaps	xmm0, XMMWORD PTR _vCos$[ebp]
	shufps	xmm0, XMMWORD PTR _vSin$[ebp], 195	; 000000c3H
	movaps	XMMWORD PTR $T6[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T6[ebp]
	movaps	XMMWORD PTR _vCos$[ebp], xmm0
; Line 1355
	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	mov	ecx, OFFSET ?g_XMIdentityR0@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMIdentityR0
	call	??BXMVECTORF32@DirectX@@QBE?AT__m128@@XZ ; DirectX::XMVECTORF32::operator __m128
	mov	ecx, 16					; 00000010H
	imul	edx, ecx, 0
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR _M$[ebp+edx], xmm0
; Line 1356
	mov	eax, 16					; 00000010H
	shl	eax, 0
	movups	xmm0, XMMWORD PTR _vCos$[ebp]
	movups	XMMWORD PTR _M$[ebp+eax], xmm0
; Line 1358
	movaps	xmm0, XMMWORD PTR _vCos$[ebp]
	shufps	xmm0, XMMWORD PTR _vCos$[ebp], 216	; 000000d8H
	movaps	XMMWORD PTR $T4[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T4[ebp]
	movaps	XMMWORD PTR _vCos$[ebp], xmm0
; Line 1360
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, OFFSET ?g_XMNegateY@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMNegateY
	call	??BXMVECTORF32@DirectX@@QBE?AT__m128@@XZ ; DirectX::XMVECTORF32::operator __m128
	movups	xmm0, XMMWORD PTR [eax]
	movaps	xmm1, XMMWORD PTR _vCos$[ebp]
	mulps	xmm1, xmm0
	movaps	XMMWORD PTR $T3[ebp], xmm1
	movaps	xmm0, XMMWORD PTR $T3[ebp]
	movaps	XMMWORD PTR _vCos$[ebp], xmm0
; Line 1361
	mov	eax, 16					; 00000010H
	shl	eax, 1
	movups	xmm0, XMMWORD PTR _vCos$[ebp]
	movups	XMMWORD PTR _M$[ebp+eax], xmm0
; Line 1362
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	mov	ecx, OFFSET ?g_XMIdentityR3@DirectX@@3UXMVECTORF32@1@B ; DirectX::g_XMIdentityR3
	call	??BXMVECTORF32@DirectX@@QBE?AT__m128@@XZ ; DirectX::XMVECTORF32::operator __m128
	mov	ecx, 16					; 00000010H
	imul	edx, ecx, 3
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR _M$[ebp+edx], xmm0
; Line 1363
	movaps	xmm0, XMMWORD PTR _M$[ebp]
	movaps	xmm1, XMMWORD PTR _M$[ebp+16]
	movaps	xmm2, XMMWORD PTR _M$[ebp+32]
	movaps	xmm3, XMMWORD PTR _M$[ebp+48]
; Line 1365
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@XMMatrixRo
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	mov	esp, ebx
	pop	ebx
	ret	0
	npad	3
$LN7@XMMatrixRo:
	DD	3
	DD	$LN6@XMMatrixRo
$LN6@XMMatrixRo:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN3@XMMatrixRo
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN4@XMMatrixRo
	DD	-176					; ffffff50H
	DD	64					; 00000040H
	DD	$LN5@XMMatrixRo
$LN5@XMMatrixRo:
	DB	77					; 0000004dH
	DB	0
$LN4@XMMatrixRo:
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	65					; 00000041H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	0
$LN3@XMMatrixRo:
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	65					; 00000041H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	0
?XMMatrixRotationX@DirectX@@YQ?AUXMMATRIX@1@M@Z ENDP	; DirectX::XMMatrixRotationX
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?XMMatrixTranslation@DirectX@@YQ?AUXMMATRIX@1@MMM@Z
_TEXT	SEGMENT
$T1 = -336						; size = 16
_M$ = -112						; size = 64
_OffsetZ$ = -32						; size = 4
_OffsetY$ = -20						; size = 4
_OffsetX$ = -8						; size = 4
?XMMatrixTranslation@DirectX@@YQ?AUXMMATRIX@1@MMM@Z PROC ; DirectX::XMMatrixTranslation, COMDAT
; _OffsetX$ = xmm0s
; _OffsetY$ = xmm1s
; _OffsetZ$ = xmm2s
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\um\DirectXMathMatrix.inl
; Line 1115
	push	ebx
	mov	ebx, esp
	sub	esp, 8
	and	esp, -16				; fffffff0H
	add	esp, 4
	push	ebp
	mov	ebp, DWORD PTR [ebx+4]
	mov	DWORD PTR [esp+4], ebp
	mov	ebp, esp
	sub	esp, 344				; 00000158H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-344]
	mov	ecx, 86					; 00000056H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	movss	DWORD PTR _OffsetZ$[ebp], xmm2
	movss	DWORD PTR _OffsetY$[ebp], xmm1
	movss	DWORD PTR _OffsetX$[ebp], xmm0
	mov	ecx, OFFSET __7142F416_DirectXMathMatrix@inl
	call	@__CheckForDebuggerJustMyCode@4
; Line 1142
	mov	eax, 16					; 00000010H
	imul	ecx, eax, 0
	movups	xmm0, XMMWORD PTR ?g_XMIdentityR0@DirectX@@3UXMVECTORF32@1@B
	movups	XMMWORD PTR _M$[ebp+ecx], xmm0
; Line 1143
	mov	eax, 16					; 00000010H
	shl	eax, 0
	movups	xmm0, XMMWORD PTR ?g_XMIdentityR1@DirectX@@3UXMVECTORF32@1@B
	movups	XMMWORD PTR _M$[ebp+eax], xmm0
; Line 1144
	mov	eax, 16					; 00000010H
	shl	eax, 1
	movups	xmm0, XMMWORD PTR ?g_XMIdentityR2@DirectX@@3UXMVECTORF32@1@B
	movups	XMMWORD PTR _M$[ebp+eax], xmm0
; Line 1145
	movss	xmm3, DWORD PTR __real@3f800000
	movss	xmm2, DWORD PTR _OffsetZ$[ebp]
	movss	xmm1, DWORD PTR _OffsetY$[ebp]
	movss	xmm0, DWORD PTR _OffsetX$[ebp]
	call	?XMVectorSet@DirectX@@YQ?AT__m128@@MMMM@Z ; DirectX::XMVectorSet
	movaps	XMMWORD PTR $T1[ebp], xmm0
	mov	eax, 16					; 00000010H
	imul	ecx, eax, 3
	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR _M$[ebp+ecx], xmm0
; Line 1146
	movaps	xmm0, XMMWORD PTR _M$[ebp]
	movaps	xmm1, XMMWORD PTR _M$[ebp+16]
	movaps	xmm2, XMMWORD PTR _M$[ebp+32]
	movaps	xmm3, XMMWORD PTR _M$[ebp+48]
; Line 1148
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@XMMatrixTr
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	mov	esp, ebx
	pop	ebx
	ret	0
	npad	1
$LN5@XMMatrixTr:
	DD	1
	DD	$LN4@XMMatrixTr
$LN4@XMMatrixTr:
	DD	-112					; ffffff90H
	DD	64					; 00000040H
	DD	$LN3@XMMatrixTr
$LN3@XMMatrixTr:
	DB	77					; 0000004dH
	DB	0
?XMMatrixTranslation@DirectX@@YQ?AUXMMATRIX@1@MMM@Z ENDP ; DirectX::XMMatrixTranslation
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?XMMatrixTranspose@DirectX@@YQ?AUXMMATRIX@1@U21@@Z
_TEXT	SEGMENT
$T1 = -928						; size = 16
$T2 = -896						; size = 16
$T3 = -864						; size = 16
$T4 = -832						; size = 16
$T5 = -800						; size = 16
$T6 = -768						; size = 16
$T7 = -736						; size = 16
$T8 = -704						; size = 16
_mResult$ = -288					; size = 64
_vTemp4$ = -208						; size = 16
_vTemp2$ = -176						; size = 16
_vTemp3$ = -144						; size = 16
_vTemp1$ = -112						; size = 16
_M$ = -80						; size = 64
?XMMatrixTranspose@DirectX@@YQ?AUXMMATRIX@1@U21@@Z PROC	; DirectX::XMMatrixTranspose, COMDAT
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\um\DirectXMathMatrix.inl
; Line 591
	push	ebx
	mov	ebx, esp
	sub	esp, 8
	and	esp, -16				; fffffff0H
	add	esp, 4
	push	ebp
	mov	ebp, DWORD PTR [ebx+4]
	mov	DWORD PTR [esp+4], ebp
	mov	ebp, esp
	sub	esp, 936				; 000003a8H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-936]
	mov	ecx, 234				; 000000eaH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	movaps	XMMWORD PTR _M$[ebp+48], xmm3
	movaps	XMMWORD PTR _M$[ebp+32], xmm2
	movaps	XMMWORD PTR _M$[ebp+16], xmm1
	movaps	XMMWORD PTR _M$[ebp], xmm0
	mov	ecx, OFFSET __7142F416_DirectXMathMatrix@inl
	call	@__CheckForDebuggerJustMyCode@4
; Line 629
	mov	eax, 16					; 00000010H
	shl	eax, 0
	mov	ecx, 16					; 00000010H
	imul	edx, ecx, 0
	movups	xmm0, XMMWORD PTR _M$[ebp+edx]
	shufps	xmm0, XMMWORD PTR _M$[ebp+eax], 68	; 00000044H
	movaps	XMMWORD PTR $T8[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T8[ebp]
	movaps	XMMWORD PTR _vTemp1$[ebp], xmm0
; Line 631
	mov	eax, 16					; 00000010H
	shl	eax, 0
	mov	ecx, 16					; 00000010H
	imul	edx, ecx, 0
	movups	xmm0, XMMWORD PTR _M$[ebp+edx]
	shufps	xmm0, XMMWORD PTR _M$[ebp+eax], 238	; 000000eeH
	movaps	XMMWORD PTR $T7[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T7[ebp]
	movaps	XMMWORD PTR _vTemp3$[ebp], xmm0
; Line 633
	mov	eax, 16					; 00000010H
	imul	ecx, eax, 3
	mov	edx, 16					; 00000010H
	shl	edx, 1
	movups	xmm0, XMMWORD PTR _M$[ebp+edx]
	shufps	xmm0, XMMWORD PTR _M$[ebp+ecx], 68	; 00000044H
	movaps	XMMWORD PTR $T6[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T6[ebp]
	movaps	XMMWORD PTR _vTemp2$[ebp], xmm0
; Line 635
	mov	eax, 16					; 00000010H
	imul	ecx, eax, 3
	mov	edx, 16					; 00000010H
	shl	edx, 1
	movups	xmm0, XMMWORD PTR _M$[ebp+edx]
	shufps	xmm0, XMMWORD PTR _M$[ebp+ecx], 238	; 000000eeH
	movaps	XMMWORD PTR $T5[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T5[ebp]
	movaps	XMMWORD PTR _vTemp4$[ebp], xmm0
; Line 639
	movaps	xmm0, XMMWORD PTR _vTemp1$[ebp]
	shufps	xmm0, XMMWORD PTR _vTemp2$[ebp], 136	; 00000088H
	movaps	XMMWORD PTR $T4[ebp], xmm0
	mov	eax, 16					; 00000010H
	imul	ecx, eax, 0
	movups	xmm0, XMMWORD PTR $T4[ebp]
	movups	XMMWORD PTR _mResult$[ebp+ecx], xmm0
; Line 641
	movaps	xmm0, XMMWORD PTR _vTemp1$[ebp]
	shufps	xmm0, XMMWORD PTR _vTemp2$[ebp], 221	; 000000ddH
	movaps	XMMWORD PTR $T3[ebp], xmm0
	mov	eax, 16					; 00000010H
	shl	eax, 0
	movups	xmm0, XMMWORD PTR $T3[ebp]
	movups	XMMWORD PTR _mResult$[ebp+eax], xmm0
; Line 643
	movaps	xmm0, XMMWORD PTR _vTemp3$[ebp]
	shufps	xmm0, XMMWORD PTR _vTemp4$[ebp], 136	; 00000088H
	movaps	XMMWORD PTR $T2[ebp], xmm0
	mov	eax, 16					; 00000010H
	shl	eax, 1
	movups	xmm0, XMMWORD PTR $T2[ebp]
	movups	XMMWORD PTR _mResult$[ebp+eax], xmm0
; Line 645
	movaps	xmm0, XMMWORD PTR _vTemp3$[ebp]
	shufps	xmm0, XMMWORD PTR _vTemp4$[ebp], 221	; 000000ddH
	movaps	XMMWORD PTR $T1[ebp], xmm0
	mov	eax, 16					; 00000010H
	imul	ecx, eax, 3
	movups	xmm0, XMMWORD PTR $T1[ebp]
	movups	XMMWORD PTR _mResult$[ebp+ecx], xmm0
; Line 646
	movaps	xmm0, XMMWORD PTR _mResult$[ebp]
	movaps	xmm1, XMMWORD PTR _mResult$[ebp+16]
	movaps	xmm2, XMMWORD PTR _mResult$[ebp+32]
	movaps	xmm3, XMMWORD PTR _mResult$[ebp+48]
; Line 648
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@XMMatrixTr
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	mov	esp, ebx
	pop	ebx
	ret	0
	npad	2
$LN6@XMMatrixTr:
	DD	2
	DD	$LN5@XMMatrixTr
$LN5@XMMatrixTr:
	DD	-80					; ffffffb0H
	DD	64					; 00000040H
	DD	$LN3@XMMatrixTr
	DD	-288					; fffffee0H
	DD	64					; 00000040H
	DD	$LN4@XMMatrixTr
$LN4@XMMatrixTr:
	DB	109					; 0000006dH
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
$LN3@XMMatrixTr:
	DB	77					; 0000004dH
	DB	0
?XMMatrixTranspose@DirectX@@YQ?AUXMMATRIX@1@U21@@Z ENDP	; DirectX::XMMatrixTranspose
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?XMMatrixMultiply@DirectX@@YQ?AUXMMATRIX@1@U21@ABU21@@Z
_TEXT	SEGMENT
$T1 = -2480						; size = 16
$T2 = -2448						; size = 16
$T3 = -2416						; size = 16
$T4 = -2384						; size = 16
$T5 = -2352						; size = 16
$T6 = -2320						; size = 16
$T7 = -2288						; size = 16
$T8 = -2256						; size = 16
$T9 = -2224						; size = 16
$T10 = -2192						; size = 16
$T11 = -2160						; size = 16
$T12 = -2128						; size = 16
$T13 = -2096						; size = 16
$T14 = -2064						; size = 16
$T15 = -2032						; size = 16
$T16 = -2000						; size = 16
$T17 = -1968						; size = 16
$T18 = -1936						; size = 16
$T19 = -1904						; size = 16
$T20 = -1872						; size = 16
$T21 = -1840						; size = 16
$T22 = -1808						; size = 16
$T23 = -1776						; size = 16
$T24 = -1744						; size = 16
$T25 = -1712						; size = 16
$T26 = -1680						; size = 16
$T27 = -1648						; size = 16
$T28 = -1616						; size = 16
$T29 = -1584						; size = 16
$T30 = -1552						; size = 16
$T31 = -1520						; size = 16
$T32 = -1488						; size = 16
$T33 = -1456						; size = 16
$T34 = -1424						; size = 16
$T35 = -1392						; size = 16
$T36 = -1360						; size = 16
$T37 = -1328						; size = 16
$T38 = -1296						; size = 16
$T39 = -1264						; size = 16
$T40 = -1232						; size = 16
$T41 = -1200						; size = 16
$T42 = -1168						; size = 16
$T43 = -1136						; size = 16
$T44 = -1104						; size = 16
_vZ$ = -304						; size = 16
_vY$ = -272						; size = 16
_vX$ = -240						; size = 16
_vW$ = -208						; size = 16
_mResult$ = -176					; size = 64
_M2$ = -92						; size = 4
_M1$ = -80						; size = 64
?XMMatrixMultiply@DirectX@@YQ?AUXMMATRIX@1@U21@ABU21@@Z PROC ; DirectX::XMMatrixMultiply, COMDAT
; _M2$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\um\DirectXMathMatrix.inl
; Line 222
	push	ebx
	mov	ebx, esp
	sub	esp, 8
	and	esp, -16				; fffffff0H
	add	esp, 4
	push	ebp
	mov	ebp, DWORD PTR [ebx+4]
	mov	DWORD PTR [esp+4], ebp
	mov	ebp, esp
	sub	esp, 2488				; 000009b8H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-2488]
	mov	ecx, 622				; 0000026eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _M2$[ebp], ecx
	movaps	XMMWORD PTR _M1$[ebp+48], xmm3
	movaps	XMMWORD PTR _M1$[ebp+32], xmm2
	movaps	XMMWORD PTR _M1$[ebp+16], xmm1
	movaps	XMMWORD PTR _M1$[ebp], xmm0
	mov	ecx, OFFSET __7142F416_DirectXMathMatrix@inl
	call	@__CheckForDebuggerJustMyCode@4
; Line 304
	mov	eax, 16					; 00000010H
	imul	ecx, eax, 0
	movups	xmm0, XMMWORD PTR _M1$[ebp+ecx]
	movups	XMMWORD PTR _vW$[ebp], xmm0
; Line 305
	movaps	xmm0, XMMWORD PTR _vW$[ebp]
	shufps	xmm0, XMMWORD PTR _vW$[ebp], 0
	movaps	XMMWORD PTR $T44[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T44[ebp]
	movaps	XMMWORD PTR _vX$[ebp], xmm0
; Line 306
	movaps	xmm0, XMMWORD PTR _vW$[ebp]
	shufps	xmm0, XMMWORD PTR _vW$[ebp], 85		; 00000055H
	movaps	XMMWORD PTR $T43[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T43[ebp]
	movaps	XMMWORD PTR _vY$[ebp], xmm0
; Line 307
	movaps	xmm0, XMMWORD PTR _vW$[ebp]
	shufps	xmm0, XMMWORD PTR _vW$[ebp], 170	; 000000aaH
	movaps	XMMWORD PTR $T42[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T42[ebp]
	movaps	XMMWORD PTR _vZ$[ebp], xmm0
; Line 308
	movaps	xmm0, XMMWORD PTR _vW$[ebp]
	shufps	xmm0, XMMWORD PTR _vW$[ebp], 255	; 000000ffH
	movaps	XMMWORD PTR $T41[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T41[ebp]
	movaps	XMMWORD PTR _vW$[ebp], xmm0
; Line 311
	mov	eax, 16					; 00000010H
	imul	ecx, eax, 0
	add	ecx, DWORD PTR _M2$[ebp]
	movaps	xmm0, XMMWORD PTR _vX$[ebp]
	mulps	xmm0, XMMWORD PTR [ecx]
	movaps	XMMWORD PTR $T40[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T40[ebp]
	movaps	XMMWORD PTR _vX$[ebp], xmm0
; Line 312
	mov	eax, 16					; 00000010H
	shl	eax, 0
	add	eax, DWORD PTR _M2$[ebp]
	movaps	xmm0, XMMWORD PTR _vY$[ebp]
	mulps	xmm0, XMMWORD PTR [eax]
	movaps	XMMWORD PTR $T39[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T39[ebp]
	movaps	XMMWORD PTR _vY$[ebp], xmm0
; Line 313
	mov	eax, 16					; 00000010H
	shl	eax, 1
	add	eax, DWORD PTR _M2$[ebp]
	movaps	xmm0, XMMWORD PTR _vZ$[ebp]
	mulps	xmm0, XMMWORD PTR [eax]
	movaps	XMMWORD PTR $T38[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T38[ebp]
	movaps	XMMWORD PTR _vZ$[ebp], xmm0
; Line 314
	mov	eax, 16					; 00000010H
	imul	ecx, eax, 3
	add	ecx, DWORD PTR _M2$[ebp]
	movaps	xmm0, XMMWORD PTR _vW$[ebp]
	mulps	xmm0, XMMWORD PTR [ecx]
	movaps	XMMWORD PTR $T37[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T37[ebp]
	movaps	XMMWORD PTR _vW$[ebp], xmm0
; Line 316
	movaps	xmm0, XMMWORD PTR _vX$[ebp]
	addps	xmm0, XMMWORD PTR _vZ$[ebp]
	movaps	XMMWORD PTR $T36[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T36[ebp]
	movaps	XMMWORD PTR _vX$[ebp], xmm0
; Line 317
	movaps	xmm0, XMMWORD PTR _vY$[ebp]
	addps	xmm0, XMMWORD PTR _vW$[ebp]
	movaps	XMMWORD PTR $T35[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T35[ebp]
	movaps	XMMWORD PTR _vY$[ebp], xmm0
; Line 318
	movaps	xmm0, XMMWORD PTR _vX$[ebp]
	addps	xmm0, XMMWORD PTR _vY$[ebp]
	movaps	XMMWORD PTR $T34[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T34[ebp]
	movaps	XMMWORD PTR _vX$[ebp], xmm0
; Line 319
	mov	eax, 16					; 00000010H
	imul	ecx, eax, 0
	movups	xmm0, XMMWORD PTR _vX$[ebp]
	movups	XMMWORD PTR _mResult$[ebp+ecx], xmm0
; Line 327
	mov	eax, 16					; 00000010H
	shl	eax, 0
	movups	xmm0, XMMWORD PTR _M1$[ebp+eax]
	movups	XMMWORD PTR _vW$[ebp], xmm0
; Line 328
	movaps	xmm0, XMMWORD PTR _vW$[ebp]
	shufps	xmm0, XMMWORD PTR _vW$[ebp], 0
	movaps	XMMWORD PTR $T33[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T33[ebp]
	movaps	XMMWORD PTR _vX$[ebp], xmm0
; Line 329
	movaps	xmm0, XMMWORD PTR _vW$[ebp]
	shufps	xmm0, XMMWORD PTR _vW$[ebp], 85		; 00000055H
	movaps	XMMWORD PTR $T32[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T32[ebp]
	movaps	XMMWORD PTR _vY$[ebp], xmm0
; Line 330
	movaps	xmm0, XMMWORD PTR _vW$[ebp]
	shufps	xmm0, XMMWORD PTR _vW$[ebp], 170	; 000000aaH
	movaps	XMMWORD PTR $T31[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T31[ebp]
	movaps	XMMWORD PTR _vZ$[ebp], xmm0
; Line 331
	movaps	xmm0, XMMWORD PTR _vW$[ebp]
	shufps	xmm0, XMMWORD PTR _vW$[ebp], 255	; 000000ffH
	movaps	XMMWORD PTR $T30[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T30[ebp]
	movaps	XMMWORD PTR _vW$[ebp], xmm0
; Line 333
	mov	eax, 16					; 00000010H
	imul	ecx, eax, 0
	add	ecx, DWORD PTR _M2$[ebp]
	movaps	xmm0, XMMWORD PTR _vX$[ebp]
	mulps	xmm0, XMMWORD PTR [ecx]
	movaps	XMMWORD PTR $T29[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T29[ebp]
	movaps	XMMWORD PTR _vX$[ebp], xmm0
; Line 334
	mov	eax, 16					; 00000010H
	shl	eax, 0
	add	eax, DWORD PTR _M2$[ebp]
	movaps	xmm0, XMMWORD PTR _vY$[ebp]
	mulps	xmm0, XMMWORD PTR [eax]
	movaps	XMMWORD PTR $T28[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T28[ebp]
	movaps	XMMWORD PTR _vY$[ebp], xmm0
; Line 335
	mov	eax, 16					; 00000010H
	shl	eax, 1
	add	eax, DWORD PTR _M2$[ebp]
	movaps	xmm0, XMMWORD PTR _vZ$[ebp]
	mulps	xmm0, XMMWORD PTR [eax]
	movaps	XMMWORD PTR $T27[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T27[ebp]
	movaps	XMMWORD PTR _vZ$[ebp], xmm0
; Line 336
	mov	eax, 16					; 00000010H
	imul	ecx, eax, 3
	add	ecx, DWORD PTR _M2$[ebp]
	movaps	xmm0, XMMWORD PTR _vW$[ebp]
	mulps	xmm0, XMMWORD PTR [ecx]
	movaps	XMMWORD PTR $T26[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T26[ebp]
	movaps	XMMWORD PTR _vW$[ebp], xmm0
; Line 337
	movaps	xmm0, XMMWORD PTR _vX$[ebp]
	addps	xmm0, XMMWORD PTR _vZ$[ebp]
	movaps	XMMWORD PTR $T25[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T25[ebp]
	movaps	XMMWORD PTR _vX$[ebp], xmm0
; Line 338
	movaps	xmm0, XMMWORD PTR _vY$[ebp]
	addps	xmm0, XMMWORD PTR _vW$[ebp]
	movaps	XMMWORD PTR $T24[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T24[ebp]
	movaps	XMMWORD PTR _vY$[ebp], xmm0
; Line 339
	movaps	xmm0, XMMWORD PTR _vX$[ebp]
	addps	xmm0, XMMWORD PTR _vY$[ebp]
	movaps	XMMWORD PTR $T23[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T23[ebp]
	movaps	XMMWORD PTR _vX$[ebp], xmm0
; Line 340
	mov	eax, 16					; 00000010H
	shl	eax, 0
	movups	xmm0, XMMWORD PTR _vX$[ebp]
	movups	XMMWORD PTR _mResult$[ebp+eax], xmm0
; Line 347
	mov	eax, 16					; 00000010H
	shl	eax, 1
	movups	xmm0, XMMWORD PTR _M1$[ebp+eax]
	movups	XMMWORD PTR _vW$[ebp], xmm0
; Line 348
	movaps	xmm0, XMMWORD PTR _vW$[ebp]
	shufps	xmm0, XMMWORD PTR _vW$[ebp], 0
	movaps	XMMWORD PTR $T22[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T22[ebp]
	movaps	XMMWORD PTR _vX$[ebp], xmm0
; Line 349
	movaps	xmm0, XMMWORD PTR _vW$[ebp]
	shufps	xmm0, XMMWORD PTR _vW$[ebp], 85		; 00000055H
	movaps	XMMWORD PTR $T21[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T21[ebp]
	movaps	XMMWORD PTR _vY$[ebp], xmm0
; Line 350
	movaps	xmm0, XMMWORD PTR _vW$[ebp]
	shufps	xmm0, XMMWORD PTR _vW$[ebp], 170	; 000000aaH
	movaps	XMMWORD PTR $T20[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T20[ebp]
	movaps	XMMWORD PTR _vZ$[ebp], xmm0
; Line 351
	movaps	xmm0, XMMWORD PTR _vW$[ebp]
	shufps	xmm0, XMMWORD PTR _vW$[ebp], 255	; 000000ffH
	movaps	XMMWORD PTR $T19[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T19[ebp]
	movaps	XMMWORD PTR _vW$[ebp], xmm0
; Line 353
	mov	eax, 16					; 00000010H
	imul	ecx, eax, 0
	add	ecx, DWORD PTR _M2$[ebp]
	movaps	xmm0, XMMWORD PTR _vX$[ebp]
	mulps	xmm0, XMMWORD PTR [ecx]
	movaps	XMMWORD PTR $T18[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T18[ebp]
	movaps	XMMWORD PTR _vX$[ebp], xmm0
; Line 354
	mov	eax, 16					; 00000010H
	shl	eax, 0
	add	eax, DWORD PTR _M2$[ebp]
	movaps	xmm0, XMMWORD PTR _vY$[ebp]
	mulps	xmm0, XMMWORD PTR [eax]
	movaps	XMMWORD PTR $T17[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T17[ebp]
	movaps	XMMWORD PTR _vY$[ebp], xmm0
; Line 355
	mov	eax, 16					; 00000010H
	shl	eax, 1
	add	eax, DWORD PTR _M2$[ebp]
	movaps	xmm0, XMMWORD PTR _vZ$[ebp]
	mulps	xmm0, XMMWORD PTR [eax]
	movaps	XMMWORD PTR $T16[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T16[ebp]
	movaps	XMMWORD PTR _vZ$[ebp], xmm0
; Line 356
	mov	eax, 16					; 00000010H
	imul	ecx, eax, 3
	add	ecx, DWORD PTR _M2$[ebp]
	movaps	xmm0, XMMWORD PTR _vW$[ebp]
	mulps	xmm0, XMMWORD PTR [ecx]
	movaps	XMMWORD PTR $T15[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T15[ebp]
	movaps	XMMWORD PTR _vW$[ebp], xmm0
; Line 357
	movaps	xmm0, XMMWORD PTR _vX$[ebp]
	addps	xmm0, XMMWORD PTR _vZ$[ebp]
	movaps	XMMWORD PTR $T14[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T14[ebp]
	movaps	XMMWORD PTR _vX$[ebp], xmm0
; Line 358
	movaps	xmm0, XMMWORD PTR _vY$[ebp]
	addps	xmm0, XMMWORD PTR _vW$[ebp]
	movaps	XMMWORD PTR $T13[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T13[ebp]
	movaps	XMMWORD PTR _vY$[ebp], xmm0
; Line 359
	movaps	xmm0, XMMWORD PTR _vX$[ebp]
	addps	xmm0, XMMWORD PTR _vY$[ebp]
	movaps	XMMWORD PTR $T12[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T12[ebp]
	movaps	XMMWORD PTR _vX$[ebp], xmm0
; Line 360
	mov	eax, 16					; 00000010H
	shl	eax, 1
	movups	xmm0, XMMWORD PTR _vX$[ebp]
	movups	XMMWORD PTR _mResult$[ebp+eax], xmm0
; Line 367
	mov	eax, 16					; 00000010H
	imul	ecx, eax, 3
	movups	xmm0, XMMWORD PTR _M1$[ebp+ecx]
	movups	XMMWORD PTR _vW$[ebp], xmm0
; Line 368
	movaps	xmm0, XMMWORD PTR _vW$[ebp]
	shufps	xmm0, XMMWORD PTR _vW$[ebp], 0
	movaps	XMMWORD PTR $T11[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T11[ebp]
	movaps	XMMWORD PTR _vX$[ebp], xmm0
; Line 369
	movaps	xmm0, XMMWORD PTR _vW$[ebp]
	shufps	xmm0, XMMWORD PTR _vW$[ebp], 85		; 00000055H
	movaps	XMMWORD PTR $T10[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T10[ebp]
	movaps	XMMWORD PTR _vY$[ebp], xmm0
; Line 370
	movaps	xmm0, XMMWORD PTR _vW$[ebp]
	shufps	xmm0, XMMWORD PTR _vW$[ebp], 170	; 000000aaH
	movaps	XMMWORD PTR $T9[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T9[ebp]
	movaps	XMMWORD PTR _vZ$[ebp], xmm0
; Line 371
	movaps	xmm0, XMMWORD PTR _vW$[ebp]
	shufps	xmm0, XMMWORD PTR _vW$[ebp], 255	; 000000ffH
	movaps	XMMWORD PTR $T8[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T8[ebp]
	movaps	XMMWORD PTR _vW$[ebp], xmm0
; Line 373
	mov	eax, 16					; 00000010H
	imul	ecx, eax, 0
	add	ecx, DWORD PTR _M2$[ebp]
	movaps	xmm0, XMMWORD PTR _vX$[ebp]
	mulps	xmm0, XMMWORD PTR [ecx]
	movaps	XMMWORD PTR $T7[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T7[ebp]
	movaps	XMMWORD PTR _vX$[ebp], xmm0
; Line 374
	mov	eax, 16					; 00000010H
	shl	eax, 0
	add	eax, DWORD PTR _M2$[ebp]
	movaps	xmm0, XMMWORD PTR _vY$[ebp]
	mulps	xmm0, XMMWORD PTR [eax]
	movaps	XMMWORD PTR $T6[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T6[ebp]
	movaps	XMMWORD PTR _vY$[ebp], xmm0
; Line 375
	mov	eax, 16					; 00000010H
	shl	eax, 1
	add	eax, DWORD PTR _M2$[ebp]
	movaps	xmm0, XMMWORD PTR _vZ$[ebp]
	mulps	xmm0, XMMWORD PTR [eax]
	movaps	XMMWORD PTR $T5[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T5[ebp]
	movaps	XMMWORD PTR _vZ$[ebp], xmm0
; Line 376
	mov	eax, 16					; 00000010H
	imul	ecx, eax, 3
	add	ecx, DWORD PTR _M2$[ebp]
	movaps	xmm0, XMMWORD PTR _vW$[ebp]
	mulps	xmm0, XMMWORD PTR [ecx]
	movaps	XMMWORD PTR $T4[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T4[ebp]
	movaps	XMMWORD PTR _vW$[ebp], xmm0
; Line 377
	movaps	xmm0, XMMWORD PTR _vX$[ebp]
	addps	xmm0, XMMWORD PTR _vZ$[ebp]
	movaps	XMMWORD PTR $T3[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T3[ebp]
	movaps	XMMWORD PTR _vX$[ebp], xmm0
; Line 378
	movaps	xmm0, XMMWORD PTR _vY$[ebp]
	addps	xmm0, XMMWORD PTR _vW$[ebp]
	movaps	XMMWORD PTR $T2[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T2[ebp]
	movaps	XMMWORD PTR _vY$[ebp], xmm0
; Line 379
	movaps	xmm0, XMMWORD PTR _vX$[ebp]
	addps	xmm0, XMMWORD PTR _vY$[ebp]
	movaps	XMMWORD PTR $T1[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T1[ebp]
	movaps	XMMWORD PTR _vX$[ebp], xmm0
; Line 380
	mov	eax, 16					; 00000010H
	imul	ecx, eax, 3
	movups	xmm0, XMMWORD PTR _vX$[ebp]
	movups	XMMWORD PTR _mResult$[ebp+ecx], xmm0
; Line 381
	movaps	xmm0, XMMWORD PTR _mResult$[ebp]
	movaps	xmm1, XMMWORD PTR _mResult$[ebp+16]
	movaps	xmm2, XMMWORD PTR _mResult$[ebp+32]
	movaps	xmm3, XMMWORD PTR _mResult$[ebp+48]
; Line 383
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@XMMatrixMu
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	mov	esp, ebx
	pop	ebx
	ret	0
$LN6@XMMatrixMu:
	DD	2
	DD	$LN5@XMMatrixMu
$LN5@XMMatrixMu:
	DD	-80					; ffffffb0H
	DD	64					; 00000040H
	DD	$LN3@XMMatrixMu
	DD	-176					; ffffff50H
	DD	64					; 00000040H
	DD	$LN4@XMMatrixMu
$LN4@XMMatrixMu:
	DB	109					; 0000006dH
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
$LN3@XMMatrixMu:
	DB	77					; 0000004dH
	DB	49					; 00000031H
	DB	0
?XMMatrixMultiply@DirectX@@YQ?AUXMMATRIX@1@U21@ABU21@@Z ENDP ; DirectX::XMMatrixMultiply
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?XMVectorSet@DirectX@@YQ?AT__m128@@MMMM@Z
_TEXT	SEGMENT
$T1 = -272						; size = 16
_w$ = -44						; size = 4
_z$ = -32						; size = 4
_y$ = -20						; size = 4
_x$ = -8						; size = 4
?XMVectorSet@DirectX@@YQ?AT__m128@@MMMM@Z PROC		; DirectX::XMVectorSet, COMDAT
; _x$ = xmm0s
; _y$ = xmm1s
; _z$ = xmm2s
; _w$ = xmm3s
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\um\DirectXMathVector.inl
; Line 67
	push	ebx
	mov	ebx, esp
	sub	esp, 8
	and	esp, -16				; fffffff0H
	add	esp, 4
	push	ebp
	mov	ebp, DWORD PTR [ebx+4]
	mov	DWORD PTR [esp+4], ebp
	mov	ebp, esp
	sub	esp, 280				; 00000118H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	movss	DWORD PTR _w$[ebp], xmm3
	movss	DWORD PTR _z$[ebp], xmm2
	movss	DWORD PTR _y$[ebp], xmm1
	movss	DWORD PTR _x$[ebp], xmm0
	mov	ecx, OFFSET __7AA729B1_DirectXMathVector@inl
	call	@__CheckForDebuggerJustMyCode@4
; Line 80
	movss	xmm0, DWORD PTR _x$[ebp]
	movss	xmm1, DWORD PTR _y$[ebp]
	movss	xmm2, DWORD PTR _z$[ebp]
	movss	xmm3, DWORD PTR _w$[ebp]
	unpcklps xmm0, xmm2
	unpcklps xmm1, xmm3
	unpcklps xmm0, xmm1
	movaps	XMMWORD PTR $T1[ebp], xmm0
	movaps	xmm0, XMMWORD PTR $T1[ebp]
; Line 82
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	mov	esp, ebx
	pop	ebx
	ret	0
?XMVectorSet@DirectX@@YQ?AT__m128@@MMMM@Z ENDP		; DirectX::XMVectorSet
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??DXMMATRIX@DirectX@@QBQ?AU01@U01@@Z
_TEXT	SEGMENT
$T1 = -448						; size = 64
$T2 = -368						; size = 64
_this$ = -92						; size = 4
_M$ = -80						; size = 64
__$ArrayPad$ = -4					; size = 4
??DXMMATRIX@DirectX@@QBQ?AU01@U01@@Z PROC		; DirectX::XMMATRIX::operator*, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\um\DirectXMathMatrix.inl
; Line 3113
	push	ebx
	mov	ebx, esp
	sub	esp, 8
	and	esp, -16				; fffffff0H
	add	esp, 4
	push	ebp
	mov	ebp, DWORD PTR [ebx+4]
	mov	DWORD PTR [esp+4], ebp
	mov	ebp, esp
	sub	esp, 456				; 000001c8H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-456]
	mov	ecx, 114				; 00000072H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	movaps	XMMWORD PTR _M$[ebp+48], xmm3
	movaps	XMMWORD PTR _M$[ebp+32], xmm2
	movaps	XMMWORD PTR _M$[ebp+16], xmm1
	movaps	XMMWORD PTR _M$[ebp], xmm0
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __7142F416_DirectXMathMatrix@inl
	call	@__CheckForDebuggerJustMyCode@4
; Line 3114
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR _M$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	xmm1, XMMWORD PTR [eax+16]
	movups	xmm2, XMMWORD PTR [eax+32]
	movups	xmm3, XMMWORD PTR [eax+48]
	call	?XMMatrixMultiply@DirectX@@YQ?AUXMMATRIX@1@U21@ABU21@@Z ; DirectX::XMMatrixMultiply
	movaps	XMMWORD PTR $T1[ebp+48], xmm3
	movaps	XMMWORD PTR $T1[ebp+32], xmm2
	movaps	XMMWORD PTR $T1[ebp+16], xmm1
	movaps	XMMWORD PTR $T1[ebp], xmm0
	mov	ecx, 16					; 00000010H
	lea	esi, DWORD PTR $T1[ebp]
	lea	edi, DWORD PTR $T2[ebp]
	rep movsd
	movaps	xmm0, XMMWORD PTR $T2[ebp]
	movaps	xmm1, XMMWORD PTR $T2[ebp+16]
	movaps	xmm2, XMMWORD PTR $T2[ebp+32]
	movaps	xmm3, XMMWORD PTR $T2[ebp+48]
; Line 3115
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@operator
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	mov	esp, ebx
	pop	ebx
	ret	0
	npad	2
$LN5@operator:
	DD	1
	DD	$LN4@operator
$LN4@operator:
	DD	-80					; ffffffb0H
	DD	64					; 00000040H
	DD	$LN3@operator
$LN3@operator:
	DB	77					; 0000004dH
	DB	0
??DXMMATRIX@DirectX@@QBQ?AU01@U01@@Z ENDP		; DirectX::XMMATRIX::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??BXMVECTORU32@DirectX@@QBE?AT__m128@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
??BXMVECTORU32@DirectX@@QBE?AT__m128@@XZ PROC		; DirectX::XMVECTORU32::operator __m128, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\um\DirectXMath.h
; Line 382
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __A500D4E3_DirectXMath@h
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??BXMVECTORU32@DirectX@@QBE?AT__m128@@XZ ENDP		; DirectX::XMVECTORU32::operator __m128
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??BXMVECTORF32@DirectX@@QBE?AT__m128@@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
___$ReturnUdt$ = 8					; size = 4
??BXMVECTORF32@DirectX@@QBE?AT__m128@@XZ PROC		; DirectX::XMVECTORF32::operator __m128, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\um\DirectXMath.h
; Line 336
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __A500D4E3_DirectXMath@h
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	movups	xmm0, XMMWORD PTR [eax]
	movups	XMMWORD PTR [ecx], xmm0
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??BXMVECTORF32@DirectX@@QBE?AT__m128@@XZ ENDP		; DirectX::XMVECTORF32::operator __m128
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ReleaseAndGetAddressOf@?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@QAEPAPAUID3D11DepthStencilView@@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?ReleaseAndGetAddressOf@?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@QAEPAPAUID3D11DepthStencilView@@XZ PROC ; Microsoft::WRL::ComPtr<ID3D11DepthStencilView>::ReleaseAndGetAddressOf, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 340
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ReleaseAndGetAddressOf@?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@QAEPAPAUID3D11DepthStencilView@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 341
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InternalRelease@?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<ID3D11DepthStencilView>::InternalRelease
; Line 342
	mov	eax, DWORD PTR _this$[ebp]
; Line 343
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?ReleaseAndGetAddressOf@?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@QAEPAPAUID3D11DepthStencilView@@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ReleaseAndGetAddressOf@?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@QAEPAPAUID3D11DepthStencilView@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?ReleaseAndGetAddressOf@?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@QAEPAPAUID3D11DepthStencilView@@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D11DepthStencilView>::ReleaseAndGetAddressOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??I?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@@Details@12@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
??I?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@@Details@12@XZ PROC ; Microsoft::WRL::ComPtr<ID3D11DepthStencilView>::operator&, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 320
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??I?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@@Details@12@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 321
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$ComPtrRef@V?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11DepthStencilView@@@23@@Z ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11DepthStencilView> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11DepthStencilView> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 322
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??I?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@@Details@12@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??I?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@@Details@12@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??I?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@@Details@12@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D11DepthStencilView>::operator&
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Get@?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@QBEPAUID3D11DepthStencilView@@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?Get@?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@QBEPAUID3D11DepthStencilView@@XZ PROC ; Microsoft::WRL::ComPtr<ID3D11DepthStencilView>::Get, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 310
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Get@?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@QBEPAUID3D11DepthStencilView@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 311
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 312
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?Get@?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@QBEPAUID3D11DepthStencilView@@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Get@?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@QBEPAUID3D11DepthStencilView@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Get@?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@QBEPAUID3D11DepthStencilView@@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D11DepthStencilView>::Get
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@QAE@XZ PROC ; Microsoft::WRL::ComPtr<ID3D11DepthStencilView>::~ComPtr<ID3D11DepthStencilView>, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 230
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 231
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InternalRelease@?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<ID3D11DepthStencilView>::InternalRelease
; Line 232
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@QAE@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D11DepthStencilView>::~ComPtr<ID3D11DepthStencilView>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@QAE@XZ PROC ; Microsoft::WRL::ComPtr<ID3D11DepthStencilView>::ComPtr<ID3D11DepthStencilView>, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 185
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 184
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 186
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@QAE@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D11DepthStencilView>::ComPtr<ID3D11DepthStencilView>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?InternalRelease@?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@IAEKXZ
_TEXT	SEGMENT
_temp$ = -44						; size = 4
_ref$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?InternalRelease@?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@IAEKXZ PROC ; Microsoft::WRL::ComPtr<ID3D11DepthStencilView>::InternalRelease, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 169
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?InternalRelease@?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@IAEKXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 170
	mov	DWORD PTR _ref$[ebp], 0
; Line 171
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _temp$[ebp], ecx
; Line 173
	cmp	DWORD PTR _temp$[ebp], 0
	je	SHORT $LN2@InternalRe
; Line 175
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 176
	mov	eax, DWORD PTR _temp$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _temp$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ref$[ebp], eax
$LN2@InternalRe:
; Line 179
	mov	eax, DWORD PTR _ref$[ebp]
; Line 180
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?InternalRelease@?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@IAEKXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-244]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?InternalRelease@?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@IAEKXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?InternalRelease@?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@IAEKXZ ENDP ; Microsoft::WRL::ComPtr<ID3D11DepthStencilView>::InternalRelease
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ReleaseAndGetAddressOf@?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@QAEPAPAUID3D11RenderTargetView@@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?ReleaseAndGetAddressOf@?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@QAEPAPAUID3D11RenderTargetView@@XZ PROC ; Microsoft::WRL::ComPtr<ID3D11RenderTargetView>::ReleaseAndGetAddressOf, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 340
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ReleaseAndGetAddressOf@?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@QAEPAPAUID3D11RenderTargetView@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 341
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InternalRelease@?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<ID3D11RenderTargetView>::InternalRelease
; Line 342
	mov	eax, DWORD PTR _this$[ebp]
; Line 343
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?ReleaseAndGetAddressOf@?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@QAEPAPAUID3D11RenderTargetView@@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ReleaseAndGetAddressOf@?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@QAEPAPAUID3D11RenderTargetView@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?ReleaseAndGetAddressOf@?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@QAEPAPAUID3D11RenderTargetView@@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D11RenderTargetView>::ReleaseAndGetAddressOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetAddressOf@?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@QAEPAPAUID3D11RenderTargetView@@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?GetAddressOf@?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@QAEPAPAUID3D11RenderTargetView@@XZ PROC ; Microsoft::WRL::ComPtr<ID3D11RenderTargetView>::GetAddressOf, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 335
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetAddressOf@?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@QAEPAPAUID3D11RenderTargetView@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 336
	mov	eax, DWORD PTR _this$[ebp]
; Line 337
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?GetAddressOf@?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@QAEPAPAUID3D11RenderTargetView@@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetAddressOf@?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@QAEPAPAUID3D11RenderTargetView@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetAddressOf@?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@QAEPAPAUID3D11RenderTargetView@@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D11RenderTargetView>::GetAddressOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??I?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@@Details@12@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
??I?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@@Details@12@XZ PROC ; Microsoft::WRL::ComPtr<ID3D11RenderTargetView>::operator&, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 320
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??I?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@@Details@12@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 321
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$ComPtrRef@V?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11RenderTargetView@@@23@@Z ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11RenderTargetView> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11RenderTargetView> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 322
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??I?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@@Details@12@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??I?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@@Details@12@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??I?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@@Details@12@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D11RenderTargetView>::operator&
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?Get@?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@QBEPAUID3D11RenderTargetView@@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?Get@?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@QBEPAUID3D11RenderTargetView@@XZ PROC ; Microsoft::WRL::ComPtr<ID3D11RenderTargetView>::Get, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 310
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Get@?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@QBEPAUID3D11RenderTargetView@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 311
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 312
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?Get@?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@QBEPAUID3D11RenderTargetView@@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Get@?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@QBEPAUID3D11RenderTargetView@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Get@?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@QBEPAUID3D11RenderTargetView@@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D11RenderTargetView>::Get
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@QAE@XZ PROC ; Microsoft::WRL::ComPtr<ID3D11RenderTargetView>::~ComPtr<ID3D11RenderTargetView>, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 230
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 231
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InternalRelease@?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<ID3D11RenderTargetView>::InternalRelease
; Line 232
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@QAE@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D11RenderTargetView>::~ComPtr<ID3D11RenderTargetView>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@QAE@XZ PROC ; Microsoft::WRL::ComPtr<ID3D11RenderTargetView>::ComPtr<ID3D11RenderTargetView>, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 185
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 184
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 186
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@QAE@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D11RenderTargetView>::ComPtr<ID3D11RenderTargetView>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?InternalRelease@?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@IAEKXZ
_TEXT	SEGMENT
_temp$ = -44						; size = 4
_ref$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?InternalRelease@?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@IAEKXZ PROC ; Microsoft::WRL::ComPtr<ID3D11RenderTargetView>::InternalRelease, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 169
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?InternalRelease@?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@IAEKXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 170
	mov	DWORD PTR _ref$[ebp], 0
; Line 171
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _temp$[ebp], ecx
; Line 173
	cmp	DWORD PTR _temp$[ebp], 0
	je	SHORT $LN2@InternalRe
; Line 175
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 176
	mov	eax, DWORD PTR _temp$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _temp$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ref$[ebp], eax
$LN2@InternalRe:
; Line 179
	mov	eax, DWORD PTR _ref$[ebp]
; Line 180
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?InternalRelease@?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@IAEKXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-244]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?InternalRelease@?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@IAEKXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?InternalRelease@?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@IAEKXZ ENDP ; Microsoft::WRL::ComPtr<ID3D11RenderTargetView>::InternalRelease
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ReleaseAndGetAddressOf@?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@QAEPAPAUID3D11DeviceContext@@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?ReleaseAndGetAddressOf@?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@QAEPAPAUID3D11DeviceContext@@XZ PROC ; Microsoft::WRL::ComPtr<ID3D11DeviceContext>::ReleaseAndGetAddressOf, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 340
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ReleaseAndGetAddressOf@?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@QAEPAPAUID3D11DeviceContext@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 341
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InternalRelease@?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<ID3D11DeviceContext>::InternalRelease
; Line 342
	mov	eax, DWORD PTR _this$[ebp]
; Line 343
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?ReleaseAndGetAddressOf@?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@QAEPAPAUID3D11DeviceContext@@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ReleaseAndGetAddressOf@?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@QAEPAPAUID3D11DeviceContext@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?ReleaseAndGetAddressOf@?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@QAEPAPAUID3D11DeviceContext@@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D11DeviceContext>::ReleaseAndGetAddressOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??I?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@@Details@12@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
??I?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@@Details@12@XZ PROC ; Microsoft::WRL::ComPtr<ID3D11DeviceContext>::operator&, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 320
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??I?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@@Details@12@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 321
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$ComPtrRef@V?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11DeviceContext@@@23@@Z ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11DeviceContext> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11DeviceContext> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 322
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??I?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@@Details@12@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??I?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@@Details@12@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??I?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@@Details@12@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D11DeviceContext>::operator&
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??C?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@QBEPAUID3D11DeviceContext@@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??C?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@QBEPAUID3D11DeviceContext@@XZ PROC ; Microsoft::WRL::ComPtr<ID3D11DeviceContext>::operator->, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 315
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??C?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@QBEPAUID3D11DeviceContext@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 316
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 317
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??C?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@QBEPAUID3D11DeviceContext@@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??C?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@QBEPAUID3D11DeviceContext@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??C?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@QBEPAUID3D11DeviceContext@@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D11DeviceContext>::operator->
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@QAE@XZ PROC ; Microsoft::WRL::ComPtr<ID3D11DeviceContext>::~ComPtr<ID3D11DeviceContext>, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 230
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 231
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InternalRelease@?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<ID3D11DeviceContext>::InternalRelease
; Line 232
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@QAE@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D11DeviceContext>::~ComPtr<ID3D11DeviceContext>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@QAE@XZ PROC ; Microsoft::WRL::ComPtr<ID3D11DeviceContext>::ComPtr<ID3D11DeviceContext>, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 185
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 184
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 186
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@QAE@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D11DeviceContext>::ComPtr<ID3D11DeviceContext>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?InternalRelease@?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@IAEKXZ
_TEXT	SEGMENT
_temp$ = -44						; size = 4
_ref$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?InternalRelease@?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@IAEKXZ PROC ; Microsoft::WRL::ComPtr<ID3D11DeviceContext>::InternalRelease, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 169
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?InternalRelease@?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@IAEKXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 170
	mov	DWORD PTR _ref$[ebp], 0
; Line 171
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _temp$[ebp], ecx
; Line 173
	cmp	DWORD PTR _temp$[ebp], 0
	je	SHORT $LN2@InternalRe
; Line 175
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 176
	mov	eax, DWORD PTR _temp$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _temp$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ref$[ebp], eax
$LN2@InternalRe:
; Line 179
	mov	eax, DWORD PTR _ref$[ebp]
; Line 180
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?InternalRelease@?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@IAEKXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-244]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?InternalRelease@?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@IAEKXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?InternalRelease@?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@IAEKXZ ENDP ; Microsoft::WRL::ComPtr<ID3D11DeviceContext>::InternalRelease
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ReleaseAndGetAddressOf@?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QAEPAPAUIDXGISwapChain@@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?ReleaseAndGetAddressOf@?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QAEPAPAUIDXGISwapChain@@XZ PROC ; Microsoft::WRL::ComPtr<IDXGISwapChain>::ReleaseAndGetAddressOf, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 340
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ReleaseAndGetAddressOf@?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QAEPAPAUIDXGISwapChain@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 341
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InternalRelease@?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IDXGISwapChain>::InternalRelease
; Line 342
	mov	eax, DWORD PTR _this$[ebp]
; Line 343
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?ReleaseAndGetAddressOf@?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QAEPAPAUIDXGISwapChain@@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ReleaseAndGetAddressOf@?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QAEPAPAUIDXGISwapChain@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?ReleaseAndGetAddressOf@?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QAEPAPAUIDXGISwapChain@@XZ ENDP ; Microsoft::WRL::ComPtr<IDXGISwapChain>::ReleaseAndGetAddressOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??I?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@@Details@12@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
??I?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@@Details@12@XZ PROC ; Microsoft::WRL::ComPtr<IDXGISwapChain>::operator&, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 320
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??I?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@@Details@12@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 321
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$ComPtrRef@V?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UIDXGISwapChain@@@23@@Z ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IDXGISwapChain> >::ComPtrRef<Microsoft::WRL::ComPtr<IDXGISwapChain> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 322
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??I?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@@Details@12@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??I?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@@Details@12@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??I?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@@Details@12@XZ ENDP ; Microsoft::WRL::ComPtr<IDXGISwapChain>::operator&
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??C?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QBEPAUIDXGISwapChain@@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??C?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QBEPAUIDXGISwapChain@@XZ PROC ; Microsoft::WRL::ComPtr<IDXGISwapChain>::operator->, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 315
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??C?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QBEPAUIDXGISwapChain@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 316
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 317
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??C?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QBEPAUIDXGISwapChain@@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??C?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QBEPAUIDXGISwapChain@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??C?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QBEPAUIDXGISwapChain@@XZ ENDP ; Microsoft::WRL::ComPtr<IDXGISwapChain>::operator->
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QAE@XZ PROC ; Microsoft::WRL::ComPtr<IDXGISwapChain>::~ComPtr<IDXGISwapChain>, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 230
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 231
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InternalRelease@?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IDXGISwapChain>::InternalRelease
; Line 232
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QAE@XZ ENDP ; Microsoft::WRL::ComPtr<IDXGISwapChain>::~ComPtr<IDXGISwapChain>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QAE@XZ PROC ; Microsoft::WRL::ComPtr<IDXGISwapChain>::ComPtr<IDXGISwapChain>, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 185
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 184
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 186
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QAE@XZ ENDP ; Microsoft::WRL::ComPtr<IDXGISwapChain>::ComPtr<IDXGISwapChain>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?InternalRelease@?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@IAEKXZ
_TEXT	SEGMENT
_temp$ = -44						; size = 4
_ref$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?InternalRelease@?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@IAEKXZ PROC ; Microsoft::WRL::ComPtr<IDXGISwapChain>::InternalRelease, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 169
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?InternalRelease@?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@IAEKXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 170
	mov	DWORD PTR _ref$[ebp], 0
; Line 171
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _temp$[ebp], ecx
; Line 173
	cmp	DWORD PTR _temp$[ebp], 0
	je	SHORT $LN2@InternalRe
; Line 175
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 176
	mov	eax, DWORD PTR _temp$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _temp$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ref$[ebp], eax
$LN2@InternalRe:
; Line 179
	mov	eax, DWORD PTR _ref$[ebp]
; Line 180
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?InternalRelease@?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@IAEKXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-244]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?InternalRelease@?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@IAEKXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?InternalRelease@?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@IAEKXZ ENDP ; Microsoft::WRL::ComPtr<IDXGISwapChain>::InternalRelease
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ReleaseAndGetAddressOf@?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAEPAPAUID3D11Device@@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?ReleaseAndGetAddressOf@?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAEPAPAUID3D11Device@@XZ PROC ; Microsoft::WRL::ComPtr<ID3D11Device>::ReleaseAndGetAddressOf, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 340
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?ReleaseAndGetAddressOf@?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAEPAPAUID3D11Device@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 341
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InternalRelease@?$ComPtr@UID3D11Device@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<ID3D11Device>::InternalRelease
; Line 342
	mov	eax, DWORD PTR _this$[ebp]
; Line 343
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?ReleaseAndGetAddressOf@?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAEPAPAUID3D11Device@@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?ReleaseAndGetAddressOf@?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAEPAPAUID3D11Device@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?ReleaseAndGetAddressOf@?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAEPAPAUID3D11Device@@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D11Device>::ReleaseAndGetAddressOf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??I?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11Device@@@WRL@Microsoft@@@Details@12@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
??I?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11Device@@@WRL@Microsoft@@@Details@12@XZ PROC ; Microsoft::WRL::ComPtr<ID3D11Device>::operator&, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 320
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??I?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11Device@@@WRL@Microsoft@@@Details@12@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 321
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$ComPtrRef@V?$ComPtr@UID3D11Device@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAE@PAV?$ComPtr@UID3D11Device@@@23@@Z ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11Device> >::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11Device> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 322
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??I?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11Device@@@WRL@Microsoft@@@Details@12@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??I?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11Device@@@WRL@Microsoft@@@Details@12@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??I?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11Device@@@WRL@Microsoft@@@Details@12@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D11Device>::operator&
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??C?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QBEPAUID3D11Device@@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??C?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QBEPAUID3D11Device@@XZ PROC ; Microsoft::WRL::ComPtr<ID3D11Device>::operator->, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 315
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??C?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QBEPAUID3D11Device@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 316
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
; Line 317
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??C?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QBEPAUID3D11Device@@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??C?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QBEPAUID3D11Device@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??C?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QBEPAUID3D11Device@@XZ ENDP ; Microsoft::WRL::ComPtr<ID3D11Device>::operator->
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAE@XZ PROC	; Microsoft::WRL::ComPtr<ID3D11Device>::~ComPtr<ID3D11Device>, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 230
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 231
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InternalRelease@?$ComPtr@UID3D11Device@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<ID3D11Device>::InternalRelease
; Line 232
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAE@XZ ENDP	; Microsoft::WRL::ComPtr<ID3D11Device>::~ComPtr<ID3D11Device>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAE@XZ PROC	; Microsoft::WRL::ComPtr<ID3D11Device>::ComPtr<ID3D11Device>, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 185
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 184
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 186
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAE@XZ ENDP	; Microsoft::WRL::ComPtr<ID3D11Device>::ComPtr<ID3D11Device>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?InternalRelease@?$ComPtr@UID3D11Device@@@WRL@Microsoft@@IAEKXZ
_TEXT	SEGMENT
_temp$ = -44						; size = 4
_ref$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?InternalRelease@?$ComPtr@UID3D11Device@@@WRL@Microsoft@@IAEKXZ PROC ; Microsoft::WRL::ComPtr<ID3D11Device>::InternalRelease, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 169
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?InternalRelease@?$ComPtr@UID3D11Device@@@WRL@Microsoft@@IAEKXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 170
	mov	DWORD PTR _ref$[ebp], 0
; Line 171
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _temp$[ebp], ecx
; Line 173
	cmp	DWORD PTR _temp$[ebp], 0
	je	SHORT $LN2@InternalRe
; Line 175
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 176
	mov	eax, DWORD PTR _temp$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _temp$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ref$[ebp], eax
$LN2@InternalRe:
; Line 179
	mov	eax, DWORD PTR _ref$[ebp]
; Line 180
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?InternalRelease@?$ComPtr@UID3D11Device@@@WRL@Microsoft@@IAEKXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-244]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?InternalRelease@?$ComPtr@UID3D11Device@@@WRL@Microsoft@@IAEKXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?InternalRelease@?$ComPtr@UID3D11Device@@@WRL@Microsoft@@IAEKXZ ENDP ; Microsoft::WRL::ComPtr<ID3D11Device>::InternalRelease
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?DrawTriangle@Graphics@@QAEXMMM@Z
_TEXT	SEGMENT
tv801 = -4516						; size = 4
tv803 = -4512						; size = 4
tv730 = -4512						; size = 4
tv536 = -4512						; size = 4
tv791 = -4508						; size = 4
tv724 = -4508						; size = 4
tv530 = -4508						; size = 4
tv805 = -4504						; size = 4
tv732 = -4504						; size = 4
tv538 = -4504						; size = 4
tv783 = -4500						; size = 4
tv716 = -4500						; size = 4
tv522 = -4500						; size = 4
tv898 = -4496						; size = 4
tv829 = -4496						; size = 4
tv807 = -4496						; size = 4
tv758 = -4496						; size = 4
tv734 = -4496						; size = 4
tv683 = -4496						; size = 4
tv659 = -4496						; size = 4
tv564 = -4496						; size = 4
tv540 = -4496						; size = 4
tv484 = -4496						; size = 4
tv460 = -4496						; size = 4
tv365 = -4496						; size = 4
tv317 = -4496						; size = 4
tv291 = -4496						; size = 4
tv92 = -4496						; size = 4
tv900 = -4492						; size = 4
tv852 = -4492						; size = 4
tv841 = -4492						; size = 4
tv831 = -4492						; size = 4
tv809 = -4492						; size = 4
tv760 = -4492						; size = 4
tv736 = -4492						; size = 4
tv685 = -4492						; size = 4
tv661 = -4492						; size = 4
tv566 = -4492						; size = 4
tv542 = -4492						; size = 4
tv486 = -4492						; size = 4
tv462 = -4492						; size = 4
tv367 = -4492						; size = 4
tv319 = -4492						; size = 4
tv293 = -4492						; size = 4
tv94 = -4492						; size = 4
tv857 = -4488						; size = 4
tv846 = -4488						; size = 4
tv836 = -4488						; size = 4
tv822 = -4488						; size = 4
tv770 = -4488						; size = 4
tv749 = -4488						; size = 4
tv702 = -4488						; size = 4
tv674 = -4488						; size = 4
tv646 = -4488						; size = 4
tv555 = -4488						; size = 4
tv508 = -4488						; size = 4
tv475 = -4488						; size = 4
tv383 = -4488						; size = 4
tv356 = -4488						; size = 4
tv306 = -4488						; size = 4
tv214 = -4488						; size = 4
tv79 = -4488						; size = 4
$T2 = -4480						; size = 76
$T3 = -4388						; size = 4
$T4 = -4376						; size = 76
$T5 = -4288						; size = 4
$T6 = -4276						; size = 4
$T7 = -4264						; size = 76
$T8 = -4172						; size = 4
$T9 = -4160						; size = 64
$T10 = -4080						; size = 64
$T11 = -4000						; size = 64
$T12 = -3920						; size = 64
$T13 = -3840						; size = 64
$T14 = -3760						; size = 64
$T15 = -3680						; size = 64
$T16 = -3600						; size = 64
$T17 = -3520						; size = 64
$T18 = -3440						; size = 64
$T19 = -3360						; size = 64
$T20 = -3280						; size = 64
$T21 = -3200						; size = 64
$T22 = -3120						; size = 64
$T23 = -3040						; size = 64
$T24 = -2960						; size = 64
$T25 = -2880						; size = 64
$T26 = -2800						; size = 64
$T27 = -2720						; size = 64
$T28 = -2640						; size = 64
$T29 = -2560						; size = 76
$T30 = -2472						; size = 4
$T31 = -2460						; size = 4
$T32 = -2448						; size = 76
$T33 = -2356						; size = 4
$T34 = -2344						; size = 76
$T35 = -2252						; size = 4
$T36 = -2240						; size = 76
$T37 = -2152						; size = 4
_vp$ = -796						; size = 24
_ied$ = -764						; size = 28
_pIL$ = -728						; size = 4
_pVS$ = -716						; size = 4
_csd$ = -704						; size = 12
_cbd$ = -684						; size = 24
_pCBuff$ = -652						; size = 4
_cb$ = -640						; size = 64
_pBlob$ = -568						; size = 4
_pPixelShader$ = -556					; size = 4
_c2sd$ = -544						; size = 12
_cb2d$ = -524						; size = 24
_pC2Buff$ = -492					; size = 4
_cb2$ = -480						; size = 96
_offset$ = -376						; size = 4
_stride$ = -364						; size = 4
_isd$ = -352						; size = 12
_ibd$ = -332						; size = 24
_pIBuff$ = -300						; size = 4
_index$ = -288						; size = 72
_vsd$ = -208						; size = 12
_vbd$ = -188						; size = 24
_pVBuff$ = -156						; size = 4
_vertices$ = -144					; size = 96
_hr$ = -40						; size = 4
_this$ = -28						; size = 4
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -12						; size = 12
_angle$ = 8						; size = 4
_mouseX$ = 12						; size = 4
_mouseY$ = 16						; size = 4
?DrawTriangle@Graphics@@QAEXMMM@Z PROC			; Graphics::DrawTriangle, COMDAT
; _this$ = ecx
; File F:\WindowSandbox\WindowSandbox\src\Graphics.cpp
; Line 93
	push	ebx
	mov	ebx, esp
	sub	esp, 8
	and	esp, -16				; fffffff0H
	add	esp, 4
	push	ebp
	mov	ebp, DWORD PTR [ebx+4]
	mov	DWORD PTR [esp+4], ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?DrawTriangle@Graphics@@QAEXMMM@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ebx
	mov	eax, 4504				; 00001198H
	call	__chkstk
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-4520]
	mov	ecx, 1126				; 00000466H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __AA27F043_Graphics@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 101
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _vertices$[ebp], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _vertices$[ebp+4], xmm0
	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR _vertices$[ebp+8], xmm0
; Line 102
	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR _vertices$[ebp+12], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _vertices$[ebp+16], xmm0
	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR _vertices$[ebp+20], xmm0
; Line 103
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _vertices$[ebp+24], xmm0
	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR _vertices$[ebp+28], xmm0
	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR _vertices$[ebp+32], xmm0
; Line 104
	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR _vertices$[ebp+36], xmm0
	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR _vertices$[ebp+40], xmm0
	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR _vertices$[ebp+44], xmm0
; Line 105
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _vertices$[ebp+48], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _vertices$[ebp+52], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _vertices$[ebp+56], xmm0
; Line 106
	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR _vertices$[ebp+60], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _vertices$[ebp+64], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _vertices$[ebp+68], xmm0
; Line 107
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _vertices$[ebp+72], xmm0
	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR _vertices$[ebp+76], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _vertices$[ebp+80], xmm0
; Line 108
	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR _vertices$[ebp+84], xmm0
	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR _vertices$[ebp+88], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _vertices$[ebp+92], xmm0
; Line 111
	push	4
	lea	ecx, DWORD PTR _pVBuff$[ebp]
	call	?__autoclassinit2@?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QAEXI@Z
	lea	ecx, DWORD PTR _pVBuff$[ebp]
	call	??0?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Buffer>::ComPtr<ID3D11Buffer>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 112
	xor	eax, eax
	mov	DWORD PTR _vbd$[ebp], eax
	mov	DWORD PTR _vbd$[ebp+4], eax
	mov	DWORD PTR _vbd$[ebp+8], eax
	mov	DWORD PTR _vbd$[ebp+12], eax
	mov	DWORD PTR _vbd$[ebp+16], eax
	mov	DWORD PTR _vbd$[ebp+20], eax
; Line 113
	mov	DWORD PTR _vbd$[ebp+8], 1
; Line 114
	mov	DWORD PTR _vbd$[ebp+4], 0
; Line 115
	mov	DWORD PTR _vbd$[ebp+12], 0
; Line 116
	mov	DWORD PTR _vbd$[ebp+16], 0
; Line 117
	mov	DWORD PTR _vbd$[ebp], 96		; 00000060H
; Line 118
	mov	DWORD PTR _vbd$[ebp+20], 12		; 0000000cH
; Line 119
	xor	eax, eax
	mov	DWORD PTR _vsd$[ebp], eax
	mov	DWORD PTR _vsd$[ebp+4], eax
	mov	DWORD PTR _vsd$[ebp+8], eax
; Line 120
	lea	eax, DWORD PTR _vertices$[ebp]
	mov	DWORD PTR _vsd$[ebp], eax
; Line 121
	mov	ecx, DWORD PTR _this$[ebp]
	call	??C?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QBEPAUID3D11Device@@XZ ; Microsoft::WRL::ComPtr<ID3D11Device>::operator->
	mov	DWORD PTR tv79[ebp], eax
	mov	eax, DWORD PTR tv79[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR tv94[ebp], edx
	lea	eax, DWORD PTR $T37[ebp]
	push	eax
	lea	ecx, DWORD PTR _pVBuff$[ebp]
	call	??I?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D11Buffer>::operator&
	mov	ecx, eax
	call	??B?$ComPtrRef@V?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11Buffer@@XZ ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11Buffer> >::operator ID3D11Buffer * *
	mov	DWORD PTR tv92[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR tv92[ebp]
	push	ecx
	lea	edx, DWORD PTR _vsd$[ebp]
	push	edx
	lea	eax, DWORD PTR _vbd$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv79[ebp]
	push	ecx
	call	DWORD PTR tv94[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN2@DrawTriang
	mov	eax, DWORD PTR _hr$[ebp]
	push	eax
	push	OFFSET ??_C@_0DA@OCAIHLLA@F?3?2WindowSandbox?2WindowSandbox?2@
	mov	ecx, DWORD PTR ?__LINE__Var@?0??DrawTriangle@Graphics@@QAEXMMM@Z@4JA
	add	ecx, 28					; 0000001cH
	push	ecx
	lea	ecx, DWORD PTR $T36[ebp]
	call	??0GraphicsException@Graphics@@QAE@HPBDJ@Z ; Graphics::GraphicsException::GraphicsException
	push	OFFSET __TI3?AVGraphicsException@Graphics@@
	lea	edx, DWORD PTR $T36[ebp]
	push	edx
	call	__CxxThrowException@8
$LN2@DrawTriang:
; Line 124
	mov	eax, 3
	mov	WORD PTR _index$[ebp], ax
	mov	eax, 2
	mov	WORD PTR _index$[ebp+2], ax
	mov	eax, 7
	mov	WORD PTR _index$[ebp+4], ax
; Line 125
	mov	eax, 6
	mov	WORD PTR _index$[ebp+6], ax
	mov	eax, 7
	mov	WORD PTR _index$[ebp+8], ax
	mov	eax, 2
	mov	WORD PTR _index$[ebp+10], ax
; Line 127
	mov	eax, 7
	mov	WORD PTR _index$[ebp+12], ax
	mov	eax, 5
	mov	WORD PTR _index$[ebp+14], ax
	mov	eax, 3
	mov	WORD PTR _index$[ebp+16], ax
; Line 128
	mov	eax, 1
	mov	WORD PTR _index$[ebp+18], ax
	mov	eax, 3
	mov	WORD PTR _index$[ebp+20], ax
	mov	eax, 5
	mov	WORD PTR _index$[ebp+22], ax
; Line 130
	mov	eax, 3
	mov	WORD PTR _index$[ebp+24], ax
	mov	eax, 1
	mov	WORD PTR _index$[ebp+26], ax
	mov	eax, 2
	mov	WORD PTR _index$[ebp+28], ax
; Line 131
	xor	eax, eax
	mov	WORD PTR _index$[ebp+30], ax
	mov	eax, 2
	mov	WORD PTR _index$[ebp+32], ax
	mov	eax, 1
	mov	WORD PTR _index$[ebp+34], ax
; Line 133
	mov	eax, 2
	mov	WORD PTR _index$[ebp+36], ax
	xor	eax, eax
	mov	WORD PTR _index$[ebp+38], ax
	mov	eax, 4
	mov	WORD PTR _index$[ebp+40], ax
; Line 134
	mov	eax, 4
	mov	WORD PTR _index$[ebp+42], ax
	mov	eax, 6
	mov	WORD PTR _index$[ebp+44], ax
	mov	eax, 2
	mov	WORD PTR _index$[ebp+46], ax
; Line 136
	mov	eax, 6
	mov	WORD PTR _index$[ebp+48], ax
	mov	eax, 4
	mov	WORD PTR _index$[ebp+50], ax
	mov	eax, 7
	mov	WORD PTR _index$[ebp+52], ax
; Line 137
	mov	eax, 7
	mov	WORD PTR _index$[ebp+54], ax
	mov	eax, 4
	mov	WORD PTR _index$[ebp+56], ax
	mov	eax, 5
	mov	WORD PTR _index$[ebp+58], ax
; Line 139
	mov	eax, 5
	mov	WORD PTR _index$[ebp+60], ax
	xor	eax, eax
	mov	WORD PTR _index$[ebp+62], ax
	mov	eax, 1
	mov	WORD PTR _index$[ebp+64], ax
; Line 140
	xor	eax, eax
	mov	WORD PTR _index$[ebp+66], ax
	mov	eax, 5
	mov	WORD PTR _index$[ebp+68], ax
	mov	eax, 4
	mov	WORD PTR _index$[ebp+70], ax
; Line 144
	push	4
	lea	ecx, DWORD PTR _pIBuff$[ebp]
	call	?__autoclassinit2@?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QAEXI@Z
	lea	ecx, DWORD PTR _pIBuff$[ebp]
	call	??0?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Buffer>::ComPtr<ID3D11Buffer>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 145
	xor	eax, eax
	mov	DWORD PTR _ibd$[ebp], eax
	mov	DWORD PTR _ibd$[ebp+4], eax
	mov	DWORD PTR _ibd$[ebp+8], eax
	mov	DWORD PTR _ibd$[ebp+12], eax
	mov	DWORD PTR _ibd$[ebp+16], eax
	mov	DWORD PTR _ibd$[ebp+20], eax
; Line 146
	mov	DWORD PTR _ibd$[ebp+8], 2
; Line 147
	mov	DWORD PTR _ibd$[ebp+4], 0
; Line 148
	mov	DWORD PTR _ibd$[ebp+12], 0
; Line 149
	mov	DWORD PTR _ibd$[ebp+16], 0
; Line 150
	mov	DWORD PTR _ibd$[ebp], 72		; 00000048H
; Line 151
	mov	DWORD PTR _ibd$[ebp+20], 2
; Line 152
	xor	eax, eax
	mov	DWORD PTR _isd$[ebp], eax
	mov	DWORD PTR _isd$[ebp+4], eax
	mov	DWORD PTR _isd$[ebp+8], eax
; Line 153
	lea	eax, DWORD PTR _index$[ebp]
	mov	DWORD PTR _isd$[ebp], eax
; Line 154
	mov	ecx, DWORD PTR _this$[ebp]
	call	??C?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QBEPAUID3D11Device@@XZ ; Microsoft::WRL::ComPtr<ID3D11Device>::operator->
	mov	DWORD PTR tv214[ebp], eax
	mov	eax, DWORD PTR tv214[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR tv293[ebp], edx
	lea	eax, DWORD PTR $T35[ebp]
	push	eax
	lea	ecx, DWORD PTR _pIBuff$[ebp]
	call	??I?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D11Buffer>::operator&
	mov	ecx, eax
	call	??B?$ComPtrRef@V?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11Buffer@@XZ ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11Buffer> >::operator ID3D11Buffer * *
	mov	DWORD PTR tv291[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR tv291[ebp]
	push	ecx
	lea	edx, DWORD PTR _isd$[ebp]
	push	edx
	lea	eax, DWORD PTR _ibd$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv214[ebp]
	push	ecx
	call	DWORD PTR tv293[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN3@DrawTriang
	mov	eax, DWORD PTR _hr$[ebp]
	push	eax
	push	OFFSET ??_C@_0DA@OCAIHLLA@F?3?2WindowSandbox?2WindowSandbox?2@
	mov	ecx, DWORD PTR ?__LINE__Var@?0??DrawTriangle@Graphics@@QAEXMMM@Z@4JA
	add	ecx, 61					; 0000003dH
	push	ecx
	lea	ecx, DWORD PTR $T34[ebp]
	call	??0GraphicsException@Graphics@@QAE@HPBDJ@Z ; Graphics::GraphicsException::GraphicsException
	push	OFFSET __TI3?AVGraphicsException@Graphics@@
	lea	edx, DWORD PTR $T34[ebp]
	push	edx
	call	__CxxThrowException@8
$LN3@DrawTriang:
; Line 157
	mov	DWORD PTR _stride$[ebp], 12		; 0000000cH
; Line 158
	mov	DWORD PTR _offset$[ebp], 0
; Line 159
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??C?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@QBEPAUID3D11DeviceContext@@XZ ; Microsoft::WRL::ComPtr<ID3D11DeviceContext>::operator->
	mov	DWORD PTR tv306[ebp], eax
	mov	eax, DWORD PTR tv306[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+72]
	mov	DWORD PTR tv319[ebp], edx
	lea	ecx, DWORD PTR _pVBuff$[ebp]
	call	?GetAddressOf@?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QAEPAPAUID3D11Buffer@@XZ ; Microsoft::WRL::ComPtr<ID3D11Buffer>::GetAddressOf
	mov	DWORD PTR tv317[ebp], eax
	mov	esi, esp
	lea	eax, DWORD PTR _offset$[ebp]
	push	eax
	lea	ecx, DWORD PTR _stride$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv317[ebp]
	push	edx
	push	1
	push	0
	mov	eax, DWORD PTR tv306[ebp]
	push	eax
	call	DWORD PTR tv319[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 160
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??C?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@QBEPAUID3D11DeviceContext@@XZ ; Microsoft::WRL::ComPtr<ID3D11DeviceContext>::operator->
	mov	DWORD PTR tv356[ebp], eax
	mov	eax, DWORD PTR tv356[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+76]
	mov	DWORD PTR tv367[ebp], edx
	lea	ecx, DWORD PTR _pIBuff$[ebp]
	call	?Get@?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QBEPAUID3D11Buffer@@XZ ; Microsoft::WRL::ComPtr<ID3D11Buffer>::Get
	mov	DWORD PTR tv365[ebp], eax
	mov	esi, esp
	push	0
	push	57					; 00000039H
	mov	eax, DWORD PTR tv365[ebp]
	push	eax
	mov	ecx, DWORD PTR tv356[ebp]
	push	ecx
	call	DWORD PTR tv367[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 169
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _cb2$[ebp], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR _cb2$[ebp+4], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR _cb2$[ebp+8], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _cb2$[ebp+12], xmm0
; Line 170
	xorps	xmm0, xmm0
	movss	DWORD PTR _cb2$[ebp+16], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _cb2$[ebp+20], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR _cb2$[ebp+24], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _cb2$[ebp+28], xmm0
; Line 171
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _cb2$[ebp+32], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _cb2$[ebp+36], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR _cb2$[ebp+40], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _cb2$[ebp+44], xmm0
; Line 172
	xorps	xmm0, xmm0
	movss	DWORD PTR _cb2$[ebp+48], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR _cb2$[ebp+52], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _cb2$[ebp+56], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _cb2$[ebp+60], xmm0
; Line 173
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _cb2$[ebp+64], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _cb2$[ebp+68], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _cb2$[ebp+72], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _cb2$[ebp+76], xmm0
; Line 174
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _cb2$[ebp+80], xmm0
	movss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR _cb2$[ebp+84], xmm0
	xorps	xmm0, xmm0
	movss	DWORD PTR _cb2$[ebp+88], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _cb2$[ebp+92], xmm0
; Line 178
	push	4
	lea	ecx, DWORD PTR _pC2Buff$[ebp]
	call	?__autoclassinit2@?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QAEXI@Z
	lea	ecx, DWORD PTR _pC2Buff$[ebp]
	call	??0?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Buffer>::ComPtr<ID3D11Buffer>
	mov	BYTE PTR __$EHRec$[ebp+8], 2
; Line 179
	xor	eax, eax
	mov	DWORD PTR _cb2d$[ebp], eax
	mov	DWORD PTR _cb2d$[ebp+4], eax
	mov	DWORD PTR _cb2d$[ebp+8], eax
	mov	DWORD PTR _cb2d$[ebp+12], eax
	mov	DWORD PTR _cb2d$[ebp+16], eax
	mov	DWORD PTR _cb2d$[ebp+20], eax
; Line 180
	mov	DWORD PTR _cb2d$[ebp+8], 4
; Line 181
	mov	DWORD PTR _cb2d$[ebp+4], 0
; Line 182
	mov	DWORD PTR _cb2d$[ebp+12], 0
; Line 183
	mov	DWORD PTR _cb2d$[ebp+16], 0
; Line 184
	mov	DWORD PTR _cb2d$[ebp], 96		; 00000060H
; Line 185
	mov	DWORD PTR _cb2d$[ebp+20], 96		; 00000060H
; Line 186
	xor	eax, eax
	mov	DWORD PTR _c2sd$[ebp], eax
	mov	DWORD PTR _c2sd$[ebp+4], eax
	mov	DWORD PTR _c2sd$[ebp+8], eax
; Line 187
	lea	eax, DWORD PTR _cb2$[ebp]
	mov	DWORD PTR _c2sd$[ebp], eax
; Line 188
	mov	ecx, DWORD PTR _this$[ebp]
	call	??C?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QBEPAUID3D11Device@@XZ ; Microsoft::WRL::ComPtr<ID3D11Device>::operator->
	mov	DWORD PTR tv383[ebp], eax
	mov	eax, DWORD PTR tv383[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR tv462[ebp], edx
	lea	eax, DWORD PTR $T33[ebp]
	push	eax
	lea	ecx, DWORD PTR _pC2Buff$[ebp]
	call	??I?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D11Buffer>::operator&
	mov	ecx, eax
	call	??B?$ComPtrRef@V?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11Buffer@@XZ ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11Buffer> >::operator ID3D11Buffer * *
	mov	DWORD PTR tv460[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR tv460[ebp]
	push	ecx
	lea	edx, DWORD PTR _c2sd$[ebp]
	push	edx
	lea	eax, DWORD PTR _cb2d$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv383[ebp]
	push	ecx
	call	DWORD PTR tv462[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN4@DrawTriang
	mov	eax, DWORD PTR _hr$[ebp]
	push	eax
	push	OFFSET ??_C@_0DA@OCAIHLLA@F?3?2WindowSandbox?2WindowSandbox?2@
	mov	ecx, DWORD PTR ?__LINE__Var@?0??DrawTriangle@Graphics@@QAEXMMM@Z@4JA
	add	ecx, 95					; 0000005fH
	push	ecx
	lea	ecx, DWORD PTR $T32[ebp]
	call	??0GraphicsException@Graphics@@QAE@HPBDJ@Z ; Graphics::GraphicsException::GraphicsException
	push	OFFSET __TI3?AVGraphicsException@Graphics@@
	lea	edx, DWORD PTR $T32[ebp]
	push	edx
	call	__CxxThrowException@8
$LN4@DrawTriang:
; Line 190
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??C?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@QBEPAUID3D11DeviceContext@@XZ ; Microsoft::WRL::ComPtr<ID3D11DeviceContext>::operator->
	mov	DWORD PTR tv475[ebp], eax
	mov	eax, DWORD PTR tv475[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+64]
	mov	DWORD PTR tv486[ebp], edx
	lea	ecx, DWORD PTR _pC2Buff$[ebp]
	call	?GetAddressOf@?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QAEPAPAUID3D11Buffer@@XZ ; Microsoft::WRL::ComPtr<ID3D11Buffer>::GetAddressOf
	mov	DWORD PTR tv484[ebp], eax
	mov	esi, esp
	mov	eax, DWORD PTR tv484[ebp]
	push	eax
	push	1
	push	0
	mov	ecx, DWORD PTR tv475[ebp]
	push	ecx
	call	DWORD PTR tv486[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 193
	push	4
	lea	ecx, DWORD PTR _pPixelShader$[ebp]
	call	?__autoclassinit2@?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@QAEXI@Z
	lea	ecx, DWORD PTR _pPixelShader$[ebp]
	call	??0?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11PixelShader>::ComPtr<ID3D11PixelShader>
	mov	BYTE PTR __$EHRec$[ebp+8], 3
; Line 194
	push	4
	lea	ecx, DWORD PTR _pBlob$[ebp]
	call	?__autoclassinit2@?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QAEXI@Z
	lea	ecx, DWORD PTR _pBlob$[ebp]
	call	??0?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D10Blob>::ComPtr<ID3D10Blob>
	mov	BYTE PTR __$EHRec$[ebp+8], 4
; Line 195
	lea	eax, DWORD PTR $T31[ebp]
	push	eax
	lea	ecx, DWORD PTR _pBlob$[ebp]
	call	??I?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D10Blob>::operator&
	mov	ecx, eax
	call	??B?$ComPtrRef@V?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D10Blob@@XZ ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D10Blob> >::operator ID3D10Blob * *
	push	eax
	push	OFFSET ??_C@_1CA@PHIKDPIA@?$AAP?$AAi?$AAx?$AAe?$AAl?$AAS?$AAh?$AAa?$AAd?$AAe?$AAr?$AA?4?$AAc?$AAs?$AAo@
	call	_D3DReadFileToBlob@8
; Line 196
	mov	ecx, DWORD PTR _this$[ebp]
	call	??C?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QBEPAUID3D11Device@@XZ ; Microsoft::WRL::ComPtr<ID3D11Device>::operator->
	mov	DWORD PTR tv508[ebp], eax
	mov	eax, DWORD PTR tv508[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+60]
	mov	DWORD PTR tv542[ebp], edx
	lea	eax, DWORD PTR $T30[ebp]
	push	eax
	lea	ecx, DWORD PTR _pPixelShader$[ebp]
	call	??I?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D11PixelShader>::operator&
	mov	ecx, eax
	call	??B?$ComPtrRef@V?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11PixelShader@@XZ ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11PixelShader> >::operator ID3D11PixelShader * *
	mov	DWORD PTR tv540[ebp], eax
	lea	ecx, DWORD PTR _pBlob$[ebp]
	call	??C?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QBEPAUID3D10Blob@@XZ ; Microsoft::WRL::ComPtr<ID3D10Blob>::operator->
	mov	DWORD PTR tv522[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR tv522[ebp]
	push	ecx
	mov	edx, DWORD PTR tv522[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+16]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv538[ebp], eax
	lea	ecx, DWORD PTR _pBlob$[ebp]
	call	??C?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QBEPAUID3D10Blob@@XZ ; Microsoft::WRL::ComPtr<ID3D10Blob>::operator->
	mov	DWORD PTR tv530[ebp], eax
	mov	esi, esp
	mov	edx, DWORD PTR tv530[ebp]
	push	edx
	mov	eax, DWORD PTR tv530[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+12]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv536[ebp], eax
	mov	esi, esp
	mov	eax, DWORD PTR tv540[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR tv538[ebp]
	push	ecx
	mov	edx, DWORD PTR tv536[ebp]
	push	edx
	mov	eax, DWORD PTR tv508[ebp]
	push	eax
	call	DWORD PTR tv542[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN5@DrawTriang
	mov	eax, DWORD PTR _hr$[ebp]
	push	eax
	push	OFFSET ??_C@_0DA@OCAIHLLA@F?3?2WindowSandbox?2WindowSandbox?2@
	mov	ecx, DWORD PTR ?__LINE__Var@?0??DrawTriangle@Graphics@@QAEXMMM@Z@4JA
	add	ecx, 103				; 00000067H
	push	ecx
	lea	ecx, DWORD PTR $T29[ebp]
	call	??0GraphicsException@Graphics@@QAE@HPBDJ@Z ; Graphics::GraphicsException::GraphicsException
	push	OFFSET __TI3?AVGraphicsException@Graphics@@
	lea	edx, DWORD PTR $T29[ebp]
	push	edx
	call	__CxxThrowException@8
$LN5@DrawTriang:
; Line 198
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??C?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@QBEPAUID3D11DeviceContext@@XZ ; Microsoft::WRL::ComPtr<ID3D11DeviceContext>::operator->
	mov	DWORD PTR tv555[ebp], eax
	mov	eax, DWORD PTR tv555[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR tv566[ebp], edx
	lea	ecx, DWORD PTR _pPixelShader$[ebp]
	call	?Get@?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@QBEPAUID3D11PixelShader@@XZ ; Microsoft::WRL::ComPtr<ID3D11PixelShader>::Get
	mov	DWORD PTR tv564[ebp], eax
	mov	esi, esp
	push	0
	push	0
	mov	eax, DWORD PTR tv564[ebp]
	push	eax
	mov	ecx, DWORD PTR tv555[ebp]
	push	ecx
	call	DWORD PTR tv566[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 205
	movss	xmm0, DWORD PTR _angle$[ebx]
	call	?XMMatrixRotationY@DirectX@@YQ?AUXMMATRIX@1@M@Z ; DirectX::XMMatrixRotationY
	movaps	XMMWORD PTR $T17[ebp+48], xmm3
	movaps	XMMWORD PTR $T17[ebp+32], xmm2
	movaps	XMMWORD PTR $T17[ebp+16], xmm1
	movaps	XMMWORD PTR $T17[ebp], xmm0
	mov	ecx, 16					; 00000010H
	lea	esi, DWORD PTR $T17[ebp]
	lea	edi, DWORD PTR $T23[ebp]
	rep movsd
	movss	xmm0, DWORD PTR _angle$[ebx]
	divss	xmm0, DWORD PTR __real@40000000
	call	?XMMatrixRotationX@DirectX@@YQ?AUXMMATRIX@1@M@Z ; DirectX::XMMatrixRotationX
	movaps	XMMWORD PTR $T15[ebp+48], xmm3
	movaps	XMMWORD PTR $T15[ebp+32], xmm2
	movaps	XMMWORD PTR $T15[ebp+16], xmm1
	movaps	XMMWORD PTR $T15[ebp], xmm0
	mov	ecx, 16					; 00000010H
	lea	esi, DWORD PTR $T15[ebp]
	lea	edi, DWORD PTR $T22[ebp]
	rep movsd
	lea	ecx, DWORD PTR $T23[ebp]
	movaps	xmm0, XMMWORD PTR $T22[ebp]
	movaps	xmm1, XMMWORD PTR $T22[ebp+16]
	movaps	xmm2, XMMWORD PTR $T22[ebp+32]
	movaps	xmm3, XMMWORD PTR $T22[ebp+48]
	call	??DXMMATRIX@DirectX@@QBQ?AU01@U01@@Z	; DirectX::XMMATRIX::operator*
	movaps	XMMWORD PTR $T16[ebp+48], xmm3
	movaps	XMMWORD PTR $T16[ebp+32], xmm2
	movaps	XMMWORD PTR $T16[ebp+16], xmm1
	movaps	XMMWORD PTR $T16[ebp], xmm0
	mov	ecx, 16					; 00000010H
	lea	esi, DWORD PTR $T16[ebp]
	lea	edi, DWORD PTR $T24[ebp]
	rep movsd
	movss	xmm2, DWORD PTR __real@40a00000
	xorps	xmm1, xmm1
	xorps	xmm0, xmm0
	call	?XMMatrixTranslation@DirectX@@YQ?AUXMMATRIX@1@MMM@Z ; DirectX::XMMatrixTranslation
	movaps	XMMWORD PTR $T13[ebp+48], xmm3
	movaps	XMMWORD PTR $T13[ebp+32], xmm2
	movaps	XMMWORD PTR $T13[ebp+16], xmm1
	movaps	XMMWORD PTR $T13[ebp], xmm0
	mov	ecx, 16					; 00000010H
	lea	esi, DWORD PTR $T13[ebp]
	lea	edi, DWORD PTR $T21[ebp]
	rep movsd
	lea	ecx, DWORD PTR $T24[ebp]
	movaps	xmm0, XMMWORD PTR $T21[ebp]
	movaps	xmm1, XMMWORD PTR $T21[ebp+16]
	movaps	xmm2, XMMWORD PTR $T21[ebp+32]
	movaps	xmm3, XMMWORD PTR $T21[ebp+48]
	call	??DXMMATRIX@DirectX@@QBQ?AU01@U01@@Z	; DirectX::XMMATRIX::operator*
	movaps	XMMWORD PTR $T14[ebp+48], xmm3
	movaps	XMMWORD PTR $T14[ebp+32], xmm2
	movaps	XMMWORD PTR $T14[ebp+16], xmm1
	movaps	XMMWORD PTR $T14[ebp], xmm0
	mov	ecx, 16					; 00000010H
	lea	esi, DWORD PTR $T14[ebp]
	lea	edi, DWORD PTR $T25[ebp]
	rep movsd
	movss	xmm3, DWORD PTR __real@41200000
	movss	xmm2, DWORD PTR __real@3f000000
	movss	xmm1, DWORD PTR __real@3f800000
	movss	xmm0, DWORD PTR __real@3f800000
	call	?XMMatrixPerspectiveLH@DirectX@@YQ?AUXMMATRIX@1@MMMM@Z ; DirectX::XMMatrixPerspectiveLH
	movaps	XMMWORD PTR $T11[ebp+48], xmm3
	movaps	XMMWORD PTR $T11[ebp+32], xmm2
	movaps	XMMWORD PTR $T11[ebp+16], xmm1
	movaps	XMMWORD PTR $T11[ebp], xmm0
	mov	ecx, 16					; 00000010H
	lea	esi, DWORD PTR $T11[ebp]
	lea	edi, DWORD PTR $T20[ebp]
	rep movsd
	lea	ecx, DWORD PTR $T25[ebp]
	movaps	xmm0, XMMWORD PTR $T20[ebp]
	movaps	xmm1, XMMWORD PTR $T20[ebp+16]
	movaps	xmm2, XMMWORD PTR $T20[ebp+32]
	movaps	xmm3, XMMWORD PTR $T20[ebp+48]
	call	??DXMMATRIX@DirectX@@QBQ?AU01@U01@@Z	; DirectX::XMMATRIX::operator*
	movaps	XMMWORD PTR $T12[ebp+48], xmm3
	movaps	XMMWORD PTR $T12[ebp+32], xmm2
	movaps	XMMWORD PTR $T12[ebp+16], xmm1
	movaps	XMMWORD PTR $T12[ebp], xmm0
	mov	ecx, 16					; 00000010H
	lea	esi, DWORD PTR $T12[ebp]
	lea	edi, DWORD PTR $T26[ebp]
	rep movsd
	xorps	xmm2, xmm2
	movss	xmm1, DWORD PTR _mouseY$[ebx]
	movss	xmm0, DWORD PTR _mouseX$[ebx]
	call	?XMMatrixTranslation@DirectX@@YQ?AUXMMATRIX@1@MMM@Z ; DirectX::XMMatrixTranslation
	movaps	XMMWORD PTR $T9[ebp+48], xmm3
	movaps	XMMWORD PTR $T9[ebp+32], xmm2
	movaps	XMMWORD PTR $T9[ebp+16], xmm1
	movaps	XMMWORD PTR $T9[ebp], xmm0
	mov	ecx, 16					; 00000010H
	lea	esi, DWORD PTR $T9[ebp]
	lea	edi, DWORD PTR $T19[ebp]
	rep movsd
	lea	ecx, DWORD PTR $T26[ebp]
	movaps	xmm0, XMMWORD PTR $T19[ebp]
	movaps	xmm1, XMMWORD PTR $T19[ebp+16]
	movaps	xmm2, XMMWORD PTR $T19[ebp+32]
	movaps	xmm3, XMMWORD PTR $T19[ebp+48]
	call	??DXMMATRIX@DirectX@@QBQ?AU01@U01@@Z	; DirectX::XMMATRIX::operator*
	movaps	XMMWORD PTR $T10[ebp+48], xmm3
	movaps	XMMWORD PTR $T10[ebp+32], xmm2
	movaps	XMMWORD PTR $T10[ebp+16], xmm1
	movaps	XMMWORD PTR $T10[ebp], xmm0
	mov	ecx, 16					; 00000010H
	lea	esi, DWORD PTR $T10[ebp]
	lea	edi, DWORD PTR $T27[ebp]
	rep movsd
	movaps	xmm0, XMMWORD PTR $T27[ebp]
	movaps	xmm1, XMMWORD PTR $T27[ebp+16]
	movaps	xmm2, XMMWORD PTR $T27[ebp+32]
	movaps	xmm3, XMMWORD PTR $T27[ebp+48]
	call	?XMMatrixTranspose@DirectX@@YQ?AUXMMATRIX@1@U21@@Z ; DirectX::XMMatrixTranspose
	movaps	XMMWORD PTR $T18[ebp+48], xmm3
	movaps	XMMWORD PTR $T18[ebp+32], xmm2
	movaps	XMMWORD PTR $T18[ebp+16], xmm1
	movaps	XMMWORD PTR $T18[ebp], xmm0
	mov	ecx, 16					; 00000010H
	lea	esi, DWORD PTR $T18[ebp]
	lea	edi, DWORD PTR $T28[ebp]
	rep movsd
	mov	ecx, 16					; 00000010H
	lea	esi, DWORD PTR $T28[ebp]
	lea	edi, DWORD PTR _cb$[ebp]
	rep movsd
; Line 215
	push	4
	lea	ecx, DWORD PTR _pCBuff$[ebp]
	call	?__autoclassinit2@?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QAEXI@Z
	lea	ecx, DWORD PTR _pCBuff$[ebp]
	call	??0?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Buffer>::ComPtr<ID3D11Buffer>
	mov	BYTE PTR __$EHRec$[ebp+8], 5
; Line 216
	xor	eax, eax
	mov	DWORD PTR _cbd$[ebp], eax
	mov	DWORD PTR _cbd$[ebp+4], eax
	mov	DWORD PTR _cbd$[ebp+8], eax
	mov	DWORD PTR _cbd$[ebp+12], eax
	mov	DWORD PTR _cbd$[ebp+16], eax
	mov	DWORD PTR _cbd$[ebp+20], eax
; Line 217
	mov	DWORD PTR _cbd$[ebp+8], 4
; Line 218
	mov	DWORD PTR _cbd$[ebp+4], 2
; Line 219
	mov	DWORD PTR _cbd$[ebp+12], 65536		; 00010000H
; Line 220
	mov	DWORD PTR _cbd$[ebp+16], 0
; Line 221
	mov	DWORD PTR _cbd$[ebp], 64		; 00000040H
; Line 222
	mov	DWORD PTR _cbd$[ebp+20], 64		; 00000040H
; Line 223
	xor	eax, eax
	mov	DWORD PTR _csd$[ebp], eax
	mov	DWORD PTR _csd$[ebp+4], eax
	mov	DWORD PTR _csd$[ebp+8], eax
; Line 224
	lea	eax, DWORD PTR _cb$[ebp]
	mov	DWORD PTR _csd$[ebp], eax
; Line 225
	mov	ecx, DWORD PTR _this$[ebp]
	call	??C?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QBEPAUID3D11Device@@XZ ; Microsoft::WRL::ComPtr<ID3D11Device>::operator->
	mov	DWORD PTR tv646[ebp], eax
	mov	eax, DWORD PTR tv646[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR tv661[ebp], edx
	lea	eax, DWORD PTR $T8[ebp]
	push	eax
	lea	ecx, DWORD PTR _pCBuff$[ebp]
	call	??I?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D11Buffer>::operator&
	mov	ecx, eax
	call	??B?$ComPtrRef@V?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11Buffer@@XZ ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11Buffer> >::operator ID3D11Buffer * *
	mov	DWORD PTR tv659[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR tv659[ebp]
	push	ecx
	lea	edx, DWORD PTR _csd$[ebp]
	push	edx
	lea	eax, DWORD PTR _cbd$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv646[ebp]
	push	ecx
	call	DWORD PTR tv661[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN6@DrawTriang
	mov	eax, DWORD PTR _hr$[ebp]
	push	eax
	push	OFFSET ??_C@_0DA@OCAIHLLA@F?3?2WindowSandbox?2WindowSandbox?2@
	mov	ecx, DWORD PTR ?__LINE__Var@?0??DrawTriangle@Graphics@@QAEXMMM@Z@4JA
	add	ecx, 132				; 00000084H
	push	ecx
	lea	ecx, DWORD PTR $T7[ebp]
	call	??0GraphicsException@Graphics@@QAE@HPBDJ@Z ; Graphics::GraphicsException::GraphicsException
	push	OFFSET __TI3?AVGraphicsException@Graphics@@
	lea	edx, DWORD PTR $T7[ebp]
	push	edx
	call	__CxxThrowException@8
$LN6@DrawTriang:
; Line 227
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??C?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@QBEPAUID3D11DeviceContext@@XZ ; Microsoft::WRL::ComPtr<ID3D11DeviceContext>::operator->
	mov	DWORD PTR tv674[ebp], eax
	mov	eax, DWORD PTR tv674[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR tv685[ebp], edx
	lea	ecx, DWORD PTR _pCBuff$[ebp]
	call	?GetAddressOf@?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QAEPAPAUID3D11Buffer@@XZ ; Microsoft::WRL::ComPtr<ID3D11Buffer>::GetAddressOf
	mov	DWORD PTR tv683[ebp], eax
	mov	esi, esp
	mov	eax, DWORD PTR tv683[ebp]
	push	eax
	push	1
	push	0
	mov	ecx, DWORD PTR tv674[ebp]
	push	ecx
	call	DWORD PTR tv685[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 231
	push	4
	lea	ecx, DWORD PTR _pVS$[ebp]
	call	?__autoclassinit2@?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@QAEXI@Z
	lea	ecx, DWORD PTR _pVS$[ebp]
	call	??0?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11VertexShader>::ComPtr<ID3D11VertexShader>
	mov	BYTE PTR __$EHRec$[ebp+8], 6
; Line 232
	lea	eax, DWORD PTR $T6[ebp]
	push	eax
	lea	ecx, DWORD PTR _pBlob$[ebp]
	call	??I?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D10Blob>::operator&
	mov	ecx, eax
	call	??B?$ComPtrRef@V?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D10Blob@@XZ ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D10Blob> >::operator ID3D10Blob * *
	push	eax
	push	OFFSET ??_C@_1CC@HBAHMJMC@?$AAV?$AAe?$AAr?$AAt?$AAe?$AAx?$AAS?$AAh?$AAa?$AAd?$AAe?$AAr?$AA?4?$AAc?$AAs@
	call	_D3DReadFileToBlob@8
; Line 233
	mov	ecx, DWORD PTR _this$[ebp]
	call	??C?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QBEPAUID3D11Device@@XZ ; Microsoft::WRL::ComPtr<ID3D11Device>::operator->
	mov	DWORD PTR tv702[ebp], eax
	mov	eax, DWORD PTR tv702[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+48]
	mov	DWORD PTR tv736[ebp], edx
	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	lea	ecx, DWORD PTR _pVS$[ebp]
	call	??I?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D11VertexShader>::operator&
	mov	ecx, eax
	call	??B?$ComPtrRef@V?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11VertexShader@@XZ ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11VertexShader> >::operator ID3D11VertexShader * *
	mov	DWORD PTR tv734[ebp], eax
	lea	ecx, DWORD PTR _pBlob$[ebp]
	call	??C?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QBEPAUID3D10Blob@@XZ ; Microsoft::WRL::ComPtr<ID3D10Blob>::operator->
	mov	DWORD PTR tv716[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR tv716[ebp]
	push	ecx
	mov	edx, DWORD PTR tv716[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+16]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv732[ebp], eax
	lea	ecx, DWORD PTR _pBlob$[ebp]
	call	??C?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QBEPAUID3D10Blob@@XZ ; Microsoft::WRL::ComPtr<ID3D10Blob>::operator->
	mov	DWORD PTR tv724[ebp], eax
	mov	esi, esp
	mov	edx, DWORD PTR tv724[ebp]
	push	edx
	mov	eax, DWORD PTR tv724[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+12]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv730[ebp], eax
	mov	esi, esp
	mov	eax, DWORD PTR tv734[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR tv732[ebp]
	push	ecx
	mov	edx, DWORD PTR tv730[ebp]
	push	edx
	mov	eax, DWORD PTR tv702[ebp]
	push	eax
	call	DWORD PTR tv736[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN7@DrawTriang
	mov	eax, DWORD PTR _hr$[ebp]
	push	eax
	push	OFFSET ??_C@_0DA@OCAIHLLA@F?3?2WindowSandbox?2WindowSandbox?2@
	mov	ecx, DWORD PTR ?__LINE__Var@?0??DrawTriangle@Graphics@@QAEXMMM@Z@4JA
	add	ecx, 140				; 0000008cH
	push	ecx
	lea	ecx, DWORD PTR $T4[ebp]
	call	??0GraphicsException@Graphics@@QAE@HPBDJ@Z ; Graphics::GraphicsException::GraphicsException
	push	OFFSET __TI3?AVGraphicsException@Graphics@@
	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	call	__CxxThrowException@8
$LN7@DrawTriang:
; Line 235
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??C?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@QBEPAUID3D11DeviceContext@@XZ ; Microsoft::WRL::ComPtr<ID3D11DeviceContext>::operator->
	mov	DWORD PTR tv749[ebp], eax
	mov	eax, DWORD PTR tv749[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR tv760[ebp], edx
	lea	ecx, DWORD PTR _pVS$[ebp]
	call	?Get@?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@QBEPAUID3D11VertexShader@@XZ ; Microsoft::WRL::ComPtr<ID3D11VertexShader>::Get
	mov	DWORD PTR tv758[ebp], eax
	mov	esi, esp
	push	0
	push	0
	mov	eax, DWORD PTR tv758[ebp]
	push	eax
	mov	ecx, DWORD PTR tv749[ebp]
	push	ecx
	call	DWORD PTR tv760[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 238
	push	4
	lea	ecx, DWORD PTR _pIL$[ebp]
	call	?__autoclassinit2@?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@QAEXI@Z
	lea	ecx, DWORD PTR _pIL$[ebp]
	call	??0?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11InputLayout>::ComPtr<ID3D11InputLayout>
	mov	BYTE PTR __$EHRec$[ebp+8], 7
; Line 240
	mov	DWORD PTR _ied$[ebp], OFFSET ??_C@_08GCJNLIKG@Position@
	mov	DWORD PTR _ied$[ebp+4], 0
	mov	DWORD PTR _ied$[ebp+8], 6
	mov	DWORD PTR _ied$[ebp+12], 0
	mov	DWORD PTR _ied$[ebp+16], 0
	mov	DWORD PTR _ied$[ebp+20], 0
	mov	DWORD PTR _ied$[ebp+24], 0
; Line 242
	mov	ecx, DWORD PTR _this$[ebp]
	call	??C?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QBEPAUID3D11Device@@XZ ; Microsoft::WRL::ComPtr<ID3D11Device>::operator->
	mov	DWORD PTR tv770[ebp], eax
	mov	eax, DWORD PTR tv770[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR tv809[ebp], edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	lea	ecx, DWORD PTR _pIL$[ebp]
	call	??I?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D11InputLayout>::operator&
	mov	ecx, eax
	call	??B?$ComPtrRef@V?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11InputLayout@@XZ ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11InputLayout> >::operator ID3D11InputLayout * *
	mov	DWORD PTR tv807[ebp], eax
	lea	ecx, DWORD PTR _pBlob$[ebp]
	call	??C?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QBEPAUID3D10Blob@@XZ ; Microsoft::WRL::ComPtr<ID3D10Blob>::operator->
	mov	DWORD PTR tv783[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR tv783[ebp]
	push	ecx
	mov	edx, DWORD PTR tv783[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+16]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv805[ebp], eax
	lea	ecx, DWORD PTR _pBlob$[ebp]
	call	??C?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QBEPAUID3D10Blob@@XZ ; Microsoft::WRL::ComPtr<ID3D10Blob>::operator->
	mov	DWORD PTR tv791[ebp], eax
	mov	esi, esp
	mov	edx, DWORD PTR tv791[ebp]
	push	edx
	mov	eax, DWORD PTR tv791[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+12]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv803[ebp], eax
	lea	eax, DWORD PTR _ied$[ebp]
	push	eax
	call	??$size@UD3D11_INPUT_ELEMENT_DESC@@$00@std@@YAIAAY00$$CBUD3D11_INPUT_ELEMENT_DESC@@@Z ; std::size<D3D11_INPUT_ELEMENT_DESC,1>
	add	esp, 4
	mov	DWORD PTR tv801[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR tv807[ebp]
	push	ecx
	mov	edx, DWORD PTR tv805[ebp]
	push	edx
	mov	eax, DWORD PTR tv803[ebp]
	push	eax
	mov	ecx, DWORD PTR tv801[ebp]
	push	ecx
	lea	edx, DWORD PTR _ied$[ebp]
	push	edx
	mov	eax, DWORD PTR tv770[ebp]
	push	eax
	call	DWORD PTR tv809[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN8@DrawTriang
	mov	eax, DWORD PTR _hr$[ebp]
	push	eax
	push	OFFSET ??_C@_0DA@OCAIHLLA@F?3?2WindowSandbox?2WindowSandbox?2@
	mov	ecx, DWORD PTR ?__LINE__Var@?0??DrawTriangle@Graphics@@QAEXMMM@Z@4JA
	add	ecx, 149				; 00000095H
	push	ecx
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0GraphicsException@Graphics@@QAE@HPBDJ@Z ; Graphics::GraphicsException::GraphicsException
	push	OFFSET __TI3?AVGraphicsException@Graphics@@
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	call	__CxxThrowException@8
$LN8@DrawTriang:
; Line 245
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??C?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@QBEPAUID3D11DeviceContext@@XZ ; Microsoft::WRL::ComPtr<ID3D11DeviceContext>::operator->
	mov	DWORD PTR tv822[ebp], eax
	mov	eax, DWORD PTR tv822[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+68]
	mov	DWORD PTR tv831[ebp], edx
	lea	ecx, DWORD PTR _pIL$[ebp]
	call	?Get@?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@QBEPAUID3D11InputLayout@@XZ ; Microsoft::WRL::ComPtr<ID3D11InputLayout>::Get
	mov	DWORD PTR tv829[ebp], eax
	mov	esi, esp
	mov	eax, DWORD PTR tv829[ebp]
	push	eax
	mov	ecx, DWORD PTR tv822[ebp]
	push	ecx
	call	DWORD PTR tv831[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 248
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??C?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@QBEPAUID3D11DeviceContext@@XZ ; Microsoft::WRL::ComPtr<ID3D11DeviceContext>::operator->
	mov	DWORD PTR tv836[ebp], eax
	mov	eax, DWORD PTR tv836[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+96]
	mov	DWORD PTR tv841[ebp], edx
	mov	esi, esp
	push	4
	mov	eax, DWORD PTR tv836[ebp]
	push	eax
	call	DWORD PTR tv841[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 252
	movss	xmm0, DWORD PTR __real@44000000
	movss	DWORD PTR _vp$[ebp+8], xmm0
; Line 253
	movss	xmm0, DWORD PTR __real@44000000
	movss	DWORD PTR _vp$[ebp+12], xmm0
; Line 254
	xorps	xmm0, xmm0
	movss	DWORD PTR _vp$[ebp+16], xmm0
; Line 255
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _vp$[ebp+20], xmm0
; Line 256
	xorps	xmm0, xmm0
	movss	DWORD PTR _vp$[ebp], xmm0
; Line 257
	xorps	xmm0, xmm0
	movss	DWORD PTR _vp$[ebp+4], xmm0
; Line 258
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??C?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@QBEPAUID3D11DeviceContext@@XZ ; Microsoft::WRL::ComPtr<ID3D11DeviceContext>::operator->
	mov	DWORD PTR tv846[ebp], eax
	mov	eax, DWORD PTR tv846[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+176]
	mov	DWORD PTR tv852[ebp], edx
	mov	esi, esp
	lea	eax, DWORD PTR _vp$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR tv846[ebp]
	push	ecx
	call	DWORD PTR tv852[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 261
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??C?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@QBEPAUID3D11DeviceContext@@XZ ; Microsoft::WRL::ComPtr<ID3D11DeviceContext>::operator->
	mov	DWORD PTR tv857[ebp], eax
	mov	eax, DWORD PTR tv857[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+48]
	mov	DWORD PTR tv900[ebp], edx
	lea	eax, DWORD PTR _index$[ebp]
	push	eax
	call	??$size@G$0CE@@std@@YAIAAY0CE@$$CBG@Z	; std::size<unsigned short,36>
	add	esp, 4
	mov	DWORD PTR tv898[ebp], eax
	mov	esi, esp
	push	0
	push	0
	mov	ecx, DWORD PTR tv898[ebp]
	push	ecx
	mov	edx, DWORD PTR tv857[ebp]
	push	edx
	call	DWORD PTR tv900[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 262
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR _pIL$[ebp]
	call	??1?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11InputLayout>::~ComPtr<ID3D11InputLayout>
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR _pVS$[ebp]
	call	??1?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11VertexShader>::~ComPtr<ID3D11VertexShader>
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _pCBuff$[ebp]
	call	??1?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Buffer>::~ComPtr<ID3D11Buffer>
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	lea	ecx, DWORD PTR _pBlob$[ebp]
	call	??1?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D10Blob>::~ComPtr<ID3D10Blob>
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	lea	ecx, DWORD PTR _pPixelShader$[ebp]
	call	??1?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11PixelShader>::~ComPtr<ID3D11PixelShader>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	lea	ecx, DWORD PTR _pC2Buff$[ebp]
	call	??1?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Buffer>::~ComPtr<ID3D11Buffer>
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR _pIBuff$[ebp]
	call	??1?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Buffer>::~ComPtr<ID3D11Buffer>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _pVBuff$[ebp]
	call	??1?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Buffer>::~ComPtr<ID3D11Buffer>
$LN1@DrawTriang:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN44@DrawTriang
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	mov	esp, ebx
	pop	ebx
	ret	12					; 0000000cH
	npad	1
$LN44@DrawTriang:
	DD	24					; 00000018H
	DD	$LN43@DrawTriang
$LN43@DrawTriang:
	DD	-144					; ffffff70H
	DD	96					; 00000060H
	DD	$LN18@DrawTriang
	DD	-156					; ffffff64H
	DD	4
	DD	$LN19@DrawTriang
	DD	-188					; ffffff44H
	DD	24					; 00000018H
	DD	$LN20@DrawTriang
	DD	-208					; ffffff30H
	DD	12					; 0000000cH
	DD	$LN21@DrawTriang
	DD	-288					; fffffee0H
	DD	72					; 00000048H
	DD	$LN22@DrawTriang
	DD	-300					; fffffed4H
	DD	4
	DD	$LN23@DrawTriang
	DD	-332					; fffffeb4H
	DD	24					; 00000018H
	DD	$LN24@DrawTriang
	DD	-352					; fffffea0H
	DD	12					; 0000000cH
	DD	$LN25@DrawTriang
	DD	-364					; fffffe94H
	DD	4
	DD	$LN26@DrawTriang
	DD	-376					; fffffe88H
	DD	4
	DD	$LN27@DrawTriang
	DD	-480					; fffffe20H
	DD	96					; 00000060H
	DD	$LN28@DrawTriang
	DD	-492					; fffffe14H
	DD	4
	DD	$LN29@DrawTriang
	DD	-524					; fffffdf4H
	DD	24					; 00000018H
	DD	$LN30@DrawTriang
	DD	-544					; fffffde0H
	DD	12					; 0000000cH
	DD	$LN31@DrawTriang
	DD	-556					; fffffdd4H
	DD	4
	DD	$LN32@DrawTriang
	DD	-568					; fffffdc8H
	DD	4
	DD	$LN33@DrawTriang
	DD	-640					; fffffd80H
	DD	64					; 00000040H
	DD	$LN34@DrawTriang
	DD	-652					; fffffd74H
	DD	4
	DD	$LN35@DrawTriang
	DD	-684					; fffffd54H
	DD	24					; 00000018H
	DD	$LN36@DrawTriang
	DD	-704					; fffffd40H
	DD	12					; 0000000cH
	DD	$LN37@DrawTriang
	DD	-716					; fffffd34H
	DD	4
	DD	$LN38@DrawTriang
	DD	-728					; fffffd28H
	DD	4
	DD	$LN39@DrawTriang
	DD	-764					; fffffd04H
	DD	28					; 0000001cH
	DD	$LN40@DrawTriang
	DD	-796					; fffffce4H
	DD	24					; 00000018H
	DD	$LN41@DrawTriang
$LN41@DrawTriang:
	DB	118					; 00000076H
	DB	112					; 00000070H
	DB	0
$LN40@DrawTriang:
	DB	105					; 00000069H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	0
$LN39@DrawTriang:
	DB	112					; 00000070H
	DB	73					; 00000049H
	DB	76					; 0000004cH
	DB	0
$LN38@DrawTriang:
	DB	112					; 00000070H
	DB	86					; 00000056H
	DB	83					; 00000053H
	DB	0
$LN37@DrawTriang:
	DB	99					; 00000063H
	DB	115					; 00000073H
	DB	100					; 00000064H
	DB	0
$LN36@DrawTriang:
	DB	99					; 00000063H
	DB	98					; 00000062H
	DB	100					; 00000064H
	DB	0
$LN35@DrawTriang:
	DB	112					; 00000070H
	DB	67					; 00000043H
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	0
$LN34@DrawTriang:
	DB	99					; 00000063H
	DB	98					; 00000062H
	DB	0
$LN33@DrawTriang:
	DB	112					; 00000070H
	DB	66					; 00000042H
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	98					; 00000062H
	DB	0
$LN32@DrawTriang:
	DB	112					; 00000070H
	DB	80					; 00000050H
	DB	105					; 00000069H
	DB	120					; 00000078H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	83					; 00000053H
	DB	104					; 00000068H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN31@DrawTriang:
	DB	99					; 00000063H
	DB	50					; 00000032H
	DB	115					; 00000073H
	DB	100					; 00000064H
	DB	0
$LN30@DrawTriang:
	DB	99					; 00000063H
	DB	98					; 00000062H
	DB	50					; 00000032H
	DB	100					; 00000064H
	DB	0
$LN29@DrawTriang:
	DB	112					; 00000070H
	DB	67					; 00000043H
	DB	50					; 00000032H
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	0
$LN28@DrawTriang:
	DB	99					; 00000063H
	DB	98					; 00000062H
	DB	50					; 00000032H
	DB	0
$LN27@DrawTriang:
	DB	111					; 0000006fH
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	0
$LN26@DrawTriang:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	0
$LN25@DrawTriang:
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	100					; 00000064H
	DB	0
$LN24@DrawTriang:
	DB	105					; 00000069H
	DB	98					; 00000062H
	DB	100					; 00000064H
	DB	0
$LN23@DrawTriang:
	DB	112					; 00000070H
	DB	73					; 00000049H
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	0
$LN22@DrawTriang:
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	0
$LN21@DrawTriang:
	DB	118					; 00000076H
	DB	115					; 00000073H
	DB	100					; 00000064H
	DB	0
$LN20@DrawTriang:
	DB	118					; 00000076H
	DB	98					; 00000062H
	DB	100					; 00000064H
	DB	0
$LN19@DrawTriang:
	DB	112					; 00000070H
	DB	86					; 00000056H
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	0
$LN18@DrawTriang:
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?DrawTriangle@Graphics@@QAEXMMM@Z$0:
	lea	ecx, DWORD PTR _pVBuff$[ebp]
	jmp	??1?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Buffer>::~ComPtr<ID3D11Buffer>
__unwindfunclet$?DrawTriangle@Graphics@@QAEXMMM@Z$1:
	lea	ecx, DWORD PTR _pIBuff$[ebp]
	jmp	??1?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Buffer>::~ComPtr<ID3D11Buffer>
__unwindfunclet$?DrawTriangle@Graphics@@QAEXMMM@Z$2:
	lea	ecx, DWORD PTR _pC2Buff$[ebp]
	jmp	??1?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Buffer>::~ComPtr<ID3D11Buffer>
__unwindfunclet$?DrawTriangle@Graphics@@QAEXMMM@Z$3:
	lea	ecx, DWORD PTR _pPixelShader$[ebp]
	jmp	??1?$ComPtr@UID3D11PixelShader@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11PixelShader>::~ComPtr<ID3D11PixelShader>
__unwindfunclet$?DrawTriangle@Graphics@@QAEXMMM@Z$4:
	lea	ecx, DWORD PTR _pBlob$[ebp]
	jmp	??1?$ComPtr@UID3D10Blob@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D10Blob>::~ComPtr<ID3D10Blob>
__unwindfunclet$?DrawTriangle@Graphics@@QAEXMMM@Z$5:
	lea	ecx, DWORD PTR _pCBuff$[ebp]
	jmp	??1?$ComPtr@UID3D11Buffer@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Buffer>::~ComPtr<ID3D11Buffer>
__unwindfunclet$?DrawTriangle@Graphics@@QAEXMMM@Z$6:
	lea	ecx, DWORD PTR _pVS$[ebp]
	jmp	??1?$ComPtr@UID3D11VertexShader@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11VertexShader>::~ComPtr<ID3D11VertexShader>
__unwindfunclet$?DrawTriangle@Graphics@@QAEXMMM@Z$7:
	lea	ecx, DWORD PTR _pIL$[ebp]
	jmp	??1?$ComPtr@UID3D11InputLayout@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11InputLayout>::~ComPtr<ID3D11InputLayout>
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$?DrawTriangle@Graphics@@QAEXMMM@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-4520]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?DrawTriangle@Graphics@@QAEXMMM@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?DrawTriangle@Graphics@@QAEXMMM@Z ENDP			; Graphics::DrawTriangle
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ClearBuffer@Graphics@@QAEXMMM@Z
_TEXT	SEGMENT
tv95 = -244						; size = 4
tv77 = -244						; size = 4
tv129 = -240						; size = 4
tv79 = -240						; size = 4
tv84 = -236						; size = 4
tv68 = -236						; size = 4
_colour$ = -36						; size = 16
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_r$ = 8							; size = 4
_g$ = 12						; size = 4
_b$ = 16						; size = 4
?ClearBuffer@Graphics@@QAEXMMM@Z PROC			; Graphics::ClearBuffer, COMDAT
; _this$ = ecx
; File F:\WindowSandbox\WindowSandbox\src\Graphics.cpp
; Line 269
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __AA27F043_Graphics@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 270
	movss	xmm0, DWORD PTR _r$[ebp]
	movss	DWORD PTR _colour$[ebp], xmm0
	movss	xmm0, DWORD PTR _g$[ebp]
	movss	DWORD PTR _colour$[ebp+4], xmm0
	movss	xmm0, DWORD PTR _b$[ebp]
	movss	DWORD PTR _colour$[ebp+8], xmm0
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR _colour$[ebp+12], xmm0
; Line 271
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??C?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@QBEPAUID3D11DeviceContext@@XZ ; Microsoft::WRL::ComPtr<ID3D11DeviceContext>::operator->
	mov	DWORD PTR tv68[ebp], eax
	mov	eax, DWORD PTR tv68[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+200]
	mov	DWORD PTR tv79[ebp], edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?Get@?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@QBEPAUID3D11RenderTargetView@@XZ ; Microsoft::WRL::ComPtr<ID3D11RenderTargetView>::Get
	mov	DWORD PTR tv77[ebp], eax
	mov	esi, esp
	lea	eax, DWORD PTR _colour$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv77[ebp]
	push	ecx
	mov	edx, DWORD PTR tv68[ebp]
	push	edx
	call	DWORD PTR tv79[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 272
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??C?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@QBEPAUID3D11DeviceContext@@XZ ; Microsoft::WRL::ComPtr<ID3D11DeviceContext>::operator->
	mov	DWORD PTR tv84[ebp], eax
	mov	eax, DWORD PTR tv84[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+212]
	mov	DWORD PTR tv129[ebp], edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?Get@?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@QBEPAUID3D11DepthStencilView@@XZ ; Microsoft::WRL::ComPtr<ID3D11DepthStencilView>::Get
	mov	DWORD PTR tv95[ebp], eax
	mov	esi, esp
	push	0
	push	ecx
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [esp], xmm0
	push	1
	mov	eax, DWORD PTR tv95[ebp]
	push	eax
	mov	ecx, DWORD PTR tv84[ebp]
	push	ecx
	call	DWORD PTR tv129[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 273
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@ClearBuffe
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
	npad	1
$LN5@ClearBuffe:
	DD	1
	DD	$LN4@ClearBuffe
$LN4@ClearBuffe:
	DD	-36					; ffffffdcH
	DD	16					; 00000010H
	DD	$LN3@ClearBuffe
$LN3@ClearBuffe:
	DB	99					; 00000063H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	0
?ClearBuffer@Graphics@@QAEXMMM@Z ENDP			; Graphics::ClearBuffer
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?EndFrame@Graphics@@QAEXXZ
_TEXT	SEGMENT
tv75 = -308						; size = 4
tv68 = -304						; size = 4
$T1 = -296						; size = 76
_hr$ = -20						; size = 4
_this$ = -8						; size = 4
?EndFrame@Graphics@@QAEXXZ PROC				; Graphics::EndFrame, COMDAT
; _this$ = ecx
; File F:\WindowSandbox\WindowSandbox\src\Graphics.cpp
; Line 264
	push	ebp
	mov	ebp, esp
	sub	esp, 308				; 00000134H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-308]
	mov	ecx, 77					; 0000004dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __AA27F043_Graphics@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 266
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??C?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QBEPAUIDXGISwapChain@@XZ ; Microsoft::WRL::ComPtr<IDXGISwapChain>::operator->
	mov	DWORD PTR tv68[ebp], eax
	mov	eax, DWORD PTR tv68[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR tv75[ebp], edx
	mov	esi, esp
	push	0
	push	1
	mov	eax, DWORD PTR tv68[ebp]
	push	eax
	call	DWORD PTR tv75[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN3@EndFrame
	mov	eax, DWORD PTR _hr$[ebp]
	push	eax
	push	OFFSET ??_C@_0DA@OCAIHLLA@F?3?2WindowSandbox?2WindowSandbox?2@
	mov	ecx, DWORD PTR ?__LINE__Var@?0??EndFrame@Graphics@@QAEXXZ@4JA
	add	ecx, 2
	push	ecx
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0GraphicsException@Graphics@@QAE@HPBDJ@Z ; Graphics::GraphicsException::GraphicsException
	push	OFFSET __TI3?AVGraphicsException@Graphics@@
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	call	__CxxThrowException@8
$LN3@EndFrame:
; Line 267
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 308				; 00000134H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?EndFrame@Graphics@@QAEXXZ ENDP				; Graphics::EndFrame
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0Graphics@@QAE@PAUHWND__@@@Z
_TEXT	SEGMENT
tv194 = -1308						; size = 4
tv422 = -1304						; size = 4
tv262 = -1304						; size = 4
tv181 = -1304						; size = 4
tv452 = -1300						; size = 4
tv424 = -1300						; size = 4
tv264 = -1300						; size = 4
tv196 = -1300						; size = 4
tv454 = -1296						; size = 4
tv409 = -1296						; size = 4
tv350 = -1296						; size = 4
tv322 = -1296						; size = 4
tv299 = -1296						; size = 4
tv253 = -1296						; size = 4
tv229 = -1296						; size = 4
tv172 = -1296						; size = 4
tv456 = -1292						; size = 4
tv426 = -1292						; size = 4
tv384 = -1292						; size = 4
tv324 = -1292						; size = 4
tv301 = -1292						; size = 4
tv266 = -1292						; size = 4
tv231 = -1292						; size = 4
tv198 = -1292						; size = 4
tv439 = -1288						; size = 4
tv400 = -1288						; size = 4
tv337 = -1288						; size = 4
tv314 = -1288						; size = 4
tv287 = -1288						; size = 4
tv244 = -1288						; size = 4
tv216 = -1288						; size = 4
tv162 = -1288						; size = 4
$T2 = -1280						; size = 76
$T3 = -1196						; size = 4
$T4 = -1184						; size = 76
$T5 = -1100						; size = 4
$T6 = -1088						; size = 76
$T7 = -1004						; size = 4
$T8 = -992						; size = 76
$T9 = -908						; size = 4
$T10 = -896						; size = 76
$T11 = -812						; size = 4
$T12 = -800						; size = 76
$T13 = -716						; size = 4
$T14 = -704						; size = 4
$T15 = -692						; size = 4
_dDsv$ = -296						; size = 24
_dD$ = -264						; size = 44
_pDS$ = -212						; size = 4
_pDSS$ = -200						; size = 4
_dsd$ = -188						; size = 52
_pBackBuf$ = -128					; size = 4
_sd$ = -116						; size = 60
_layer$ = -48						; size = 4
_hr$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_hWnd$ = 8						; size = 4
??0Graphics@@QAE@PAUHWND__@@@Z PROC			; Graphics::Graphics, COMDAT
; _this$ = ecx
; File F:\WindowSandbox\WindowSandbox\src\Graphics.cpp
; Line 15
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0Graphics@@QAE@PAUHWND__@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 1296				; 00000510H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-1308]
	mov	ecx, 324				; 00000144H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __AA27F043_Graphics@cpp
	call	@__CheckForDebuggerJustMyCode@4
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Device>::ComPtr<ID3D11Device>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IDXGISwapChain>::ComPtr<IDXGISwapChain>
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11DeviceContext>::ComPtr<ID3D11DeviceContext>
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	??0?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11RenderTargetView>::ComPtr<ID3D11RenderTargetView>
	mov	BYTE PTR __$EHRec$[ebp+8], 3
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??0?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11DepthStencilView>::ComPtr<ID3D11DepthStencilView>
	mov	BYTE PTR __$EHRec$[ebp+8], 4
; Line 19
	mov	DWORD PTR _layer$[ebp], 2
; Line 24
	push	60					; 0000003cH
	push	0
	lea	eax, DWORD PTR _sd$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 25
	mov	DWORD PTR _sd$[ebp], 0
; Line 26
	mov	DWORD PTR _sd$[ebp+4], 0
; Line 27
	mov	DWORD PTR _sd$[ebp+16], 87		; 00000057H
; Line 28
	mov	DWORD PTR _sd$[ebp+8], 0
; Line 29
	mov	DWORD PTR _sd$[ebp+12], 0
; Line 30
	mov	DWORD PTR _sd$[ebp+24], 0
; Line 31
	mov	DWORD PTR _sd$[ebp+20], 0
; Line 32
	mov	DWORD PTR _sd$[ebp+28], 1
; Line 33
	mov	DWORD PTR _sd$[ebp+32], 0
; Line 34
	mov	DWORD PTR _sd$[ebp+36], 32		; 00000020H
; Line 35
	mov	DWORD PTR _sd$[ebp+40], 1
; Line 36
	mov	eax, DWORD PTR _hWnd$[ebp]
	mov	DWORD PTR _sd$[ebp+44], eax
; Line 37
	mov	DWORD PTR _sd$[ebp+48], 1
; Line 38
	mov	DWORD PTR _sd$[ebp+52], 0
; Line 39
	mov	DWORD PTR _sd$[ebp+56], 0
; Line 41
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	mov	DWORD PTR tv162[ebp], eax
	lea	ecx, DWORD PTR $T15[ebp]
	push	ecx
	mov	ecx, DWORD PTR tv162[ebp]
	call	??I?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D11DeviceContext>::operator&
	mov	ecx, eax
	call	??B?$ComPtrRef@V?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11DeviceContext@@XZ ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11DeviceContext> >::operator ID3D11DeviceContext * *
	mov	DWORD PTR tv198[ebp], eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv172[ebp], edx
	lea	eax, DWORD PTR $T14[ebp]
	push	eax
	mov	ecx, DWORD PTR tv172[ebp]
	call	??I?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11Device@@@WRL@Microsoft@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D11Device>::operator&
	mov	ecx, eax
	call	??B?$ComPtrRef@V?$ComPtr@UID3D11Device@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11Device@@XZ ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11Device> >::operator ID3D11Device * *
	mov	DWORD PTR tv196[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	mov	DWORD PTR tv181[ebp], ecx
	lea	edx, DWORD PTR $T13[ebp]
	push	edx
	mov	ecx, DWORD PTR tv181[ebp]
	call	??I?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@@Details@12@XZ ; Microsoft::WRL::ComPtr<IDXGISwapChain>::operator&
	mov	ecx, eax
	call	??B?$ComPtrRef@V?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUIDXGISwapChain@@XZ ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IDXGISwapChain> >::operator IDXGISwapChain * *
	mov	DWORD PTR tv194[ebp], eax
	mov	eax, DWORD PTR tv198[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR tv196[ebp]
	push	ecx
	mov	edx, DWORD PTR tv194[ebp]
	push	edx
	lea	eax, DWORD PTR _sd$[ebp]
	push	eax
	push	7
	push	0
	push	0
	mov	ecx, DWORD PTR _layer$[ebp]
	push	ecx
	push	0
	push	1
	push	0
	call	_D3D11CreateDeviceAndSwapChain@48
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN2@Graphics
	mov	eax, DWORD PTR _hr$[ebp]
	push	eax
	push	OFFSET ??_C@_0DA@OCAIHLLA@F?3?2WindowSandbox?2WindowSandbox?2@
	mov	ecx, DWORD PTR ?__LINE__Var@?0???0Graphics@@QAE@PAUHWND__@@@Z@4JA
	add	ecx, 40					; 00000028H
	push	ecx
	lea	ecx, DWORD PTR $T12[ebp]
	call	??0GraphicsException@Graphics@@QAE@HPBDJ@Z ; Graphics::GraphicsException::GraphicsException
	push	OFFSET __TI3?AVGraphicsException@Graphics@@
	lea	edx, DWORD PTR $T12[ebp]
	push	edx
	call	__CxxThrowException@8
$LN2@Graphics:
; Line 57
	push	4
	lea	ecx, DWORD PTR _pBackBuf$[ebp]
	call	?__autoclassinit2@?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@QAEXI@Z
	lea	ecx, DWORD PTR _pBackBuf$[ebp]
	call	??0?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Resource>::ComPtr<ID3D11Resource>
	mov	BYTE PTR __$EHRec$[ebp+8], 5
; Line 58
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??C?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QBEPAUIDXGISwapChain@@XZ ; Microsoft::WRL::ComPtr<IDXGISwapChain>::operator->
	mov	DWORD PTR tv216[ebp], eax
	mov	eax, DWORD PTR tv216[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR tv231[ebp], edx
	lea	eax, DWORD PTR $T11[ebp]
	push	eax
	lea	ecx, DWORD PTR _pBackBuf$[ebp]
	call	??I?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D11Resource>::operator&
	mov	ecx, eax
	call	??B?$ComPtrRef@V?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QBEPAPAXXZ ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11Resource> >::operator void * *
	mov	DWORD PTR tv229[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR tv229[ebp]
	push	ecx
	push	OFFSET __GUID_dc8e63f3_d12b_4952_b47b_5e45026a862d
	push	0
	mov	edx, DWORD PTR tv216[ebp]
	push	edx
	call	DWORD PTR tv231[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN3@Graphics
	mov	eax, DWORD PTR _hr$[ebp]
	push	eax
	push	OFFSET ??_C@_0DA@OCAIHLLA@F?3?2WindowSandbox?2WindowSandbox?2@
	mov	ecx, DWORD PTR ?__LINE__Var@?0???0Graphics@@QAE@PAUHWND__@@@Z@4JA
	add	ecx, 43					; 0000002bH
	push	ecx
	lea	ecx, DWORD PTR $T10[ebp]
	call	??0GraphicsException@Graphics@@QAE@HPBDJ@Z ; Graphics::GraphicsException::GraphicsException
	push	OFFSET __TI3?AVGraphicsException@Graphics@@
	lea	edx, DWORD PTR $T10[ebp]
	push	edx
	call	__CxxThrowException@8
$LN3@Graphics:
; Line 59
	mov	ecx, DWORD PTR _this$[ebp]
	call	??C?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QBEPAUID3D11Device@@XZ ; Microsoft::WRL::ComPtr<ID3D11Device>::operator->
	mov	DWORD PTR tv244[ebp], eax
	mov	eax, DWORD PTR tv244[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR tv266[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 12					; 0000000cH
	mov	DWORD PTR tv253[ebp], eax
	lea	ecx, DWORD PTR $T9[ebp]
	push	ecx
	mov	ecx, DWORD PTR tv253[ebp]
	call	??I?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D11RenderTargetView>::operator&
	mov	ecx, eax
	call	??B?$ComPtrRef@V?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11RenderTargetView@@XZ ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11RenderTargetView> >::operator ID3D11RenderTargetView * *
	mov	DWORD PTR tv264[ebp], eax
	lea	ecx, DWORD PTR _pBackBuf$[ebp]
	call	?Get@?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@QBEPAUID3D11Resource@@XZ ; Microsoft::WRL::ComPtr<ID3D11Resource>::Get
	mov	DWORD PTR tv262[ebp], eax
	mov	esi, esp
	mov	edx, DWORD PTR tv264[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR tv262[ebp]
	push	eax
	mov	ecx, DWORD PTR tv244[ebp]
	push	ecx
	call	DWORD PTR tv266[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN4@Graphics
	mov	eax, DWORD PTR _hr$[ebp]
	push	eax
	push	OFFSET ??_C@_0DA@OCAIHLLA@F?3?2WindowSandbox?2WindowSandbox?2@
	mov	ecx, DWORD PTR ?__LINE__Var@?0???0Graphics@@QAE@PAUHWND__@@@Z@4JA
	add	ecx, 44					; 0000002cH
	push	ecx
	lea	ecx, DWORD PTR $T8[ebp]
	call	??0GraphicsException@Graphics@@QAE@HPBDJ@Z ; Graphics::GraphicsException::GraphicsException
	push	OFFSET __TI3?AVGraphicsException@Graphics@@
	lea	edx, DWORD PTR $T8[ebp]
	push	edx
	call	__CxxThrowException@8
$LN4@Graphics:
; Line 61
	push	52					; 00000034H
	push	0
	lea	eax, DWORD PTR _dsd$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 62
	mov	DWORD PTR _dsd$[ebp], 1
; Line 63
	mov	DWORD PTR _dsd$[ebp+4], 1
; Line 64
	mov	DWORD PTR _dsd$[ebp+8], 2
; Line 65
	push	4
	lea	ecx, DWORD PTR _pDSS$[ebp]
	call	?__autoclassinit2@?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@QAEXI@Z
	lea	ecx, DWORD PTR _pDSS$[ebp]
	call	??0?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11DepthStencilState>::ComPtr<ID3D11DepthStencilState>
	mov	BYTE PTR __$EHRec$[ebp+8], 6
; Line 66
	mov	ecx, DWORD PTR _this$[ebp]
	call	??C?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QBEPAUID3D11Device@@XZ ; Microsoft::WRL::ComPtr<ID3D11Device>::operator->
	mov	DWORD PTR tv287[ebp], eax
	mov	eax, DWORD PTR tv287[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+84]
	mov	DWORD PTR tv301[ebp], edx
	lea	eax, DWORD PTR $T7[ebp]
	push	eax
	lea	ecx, DWORD PTR _pDSS$[ebp]
	call	??I?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D11DepthStencilState>::operator&
	mov	ecx, eax
	call	??B?$ComPtrRef@V?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11DepthStencilState@@XZ ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11DepthStencilState> >::operator ID3D11DepthStencilState * *
	mov	DWORD PTR tv299[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR tv299[ebp]
	push	ecx
	lea	edx, DWORD PTR _dsd$[ebp]
	push	edx
	mov	eax, DWORD PTR tv287[ebp]
	push	eax
	call	DWORD PTR tv301[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN5@Graphics
	mov	eax, DWORD PTR _hr$[ebp]
	push	eax
	push	OFFSET ??_C@_0DA@OCAIHLLA@F?3?2WindowSandbox?2WindowSandbox?2@
	mov	ecx, DWORD PTR ?__LINE__Var@?0???0Graphics@@QAE@PAUHWND__@@@Z@4JA
	add	ecx, 51					; 00000033H
	push	ecx
	lea	ecx, DWORD PTR $T6[ebp]
	call	??0GraphicsException@Graphics@@QAE@HPBDJ@Z ; Graphics::GraphicsException::GraphicsException
	push	OFFSET __TI3?AVGraphicsException@Graphics@@
	lea	edx, DWORD PTR $T6[ebp]
	push	edx
	call	__CxxThrowException@8
$LN5@Graphics:
; Line 68
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??C?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@QBEPAUID3D11DeviceContext@@XZ ; Microsoft::WRL::ComPtr<ID3D11DeviceContext>::operator->
	mov	DWORD PTR tv314[ebp], eax
	mov	eax, DWORD PTR tv314[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+144]
	mov	DWORD PTR tv324[ebp], edx
	lea	ecx, DWORD PTR _pDSS$[ebp]
	call	?Get@?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@QBEPAUID3D11DepthStencilState@@XZ ; Microsoft::WRL::ComPtr<ID3D11DepthStencilState>::Get
	mov	DWORD PTR tv322[ebp], eax
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR tv322[ebp]
	push	eax
	mov	ecx, DWORD PTR tv314[ebp]
	push	ecx
	call	DWORD PTR tv324[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 70
	push	4
	lea	ecx, DWORD PTR _pDS$[ebp]
	call	?__autoclassinit2@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAEXI@Z
	lea	ecx, DWORD PTR _pDS$[ebp]
	call	??0?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::ComPtr<ID3D11Texture2D>
	mov	BYTE PTR __$EHRec$[ebp+8], 7
; Line 71
	push	44					; 0000002cH
	push	0
	lea	eax, DWORD PTR _dD$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 72
	mov	DWORD PTR _dD$[ebp], 512		; 00000200H
; Line 73
	mov	DWORD PTR _dD$[ebp+4], 512		; 00000200H
; Line 74
	mov	DWORD PTR _dD$[ebp+8], 1
; Line 75
	mov	DWORD PTR _dD$[ebp+12], 1
; Line 76
	mov	DWORD PTR _dD$[ebp+16], 40		; 00000028H
; Line 77
	mov	DWORD PTR _dD$[ebp+20], 1
; Line 78
	mov	DWORD PTR _dD$[ebp+24], 0
; Line 79
	mov	DWORD PTR _dD$[ebp+28], 0
; Line 80
	mov	DWORD PTR _dD$[ebp+32], 64		; 00000040H
; Line 81
	mov	ecx, DWORD PTR _this$[ebp]
	call	??C?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QBEPAUID3D11Device@@XZ ; Microsoft::WRL::ComPtr<ID3D11Device>::operator->
	mov	DWORD PTR tv337[ebp], eax
	mov	eax, DWORD PTR tv337[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR tv384[ebp], edx
	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	lea	ecx, DWORD PTR _pDS$[ebp]
	call	??I?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::operator&
	mov	ecx, eax
	call	??B?$ComPtrRef@V?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11Texture2D@@XZ ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11Texture2D> >::operator ID3D11Texture2D * *
	mov	DWORD PTR tv350[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR tv350[ebp]
	push	ecx
	push	0
	lea	edx, DWORD PTR _dD$[ebp]
	push	edx
	mov	eax, DWORD PTR tv337[ebp]
	push	eax
	call	DWORD PTR tv384[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN6@Graphics
	mov	eax, DWORD PTR _hr$[ebp]
	push	eax
	push	OFFSET ??_C@_0DA@OCAIHLLA@F?3?2WindowSandbox?2WindowSandbox?2@
	mov	ecx, DWORD PTR ?__LINE__Var@?0???0Graphics@@QAE@PAUHWND__@@@Z@4JA
	add	ecx, 66					; 00000042H
	push	ecx
	lea	ecx, DWORD PTR $T4[ebp]
	call	??0GraphicsException@Graphics@@QAE@HPBDJ@Z ; Graphics::GraphicsException::GraphicsException
	push	OFFSET __TI3?AVGraphicsException@Graphics@@
	lea	edx, DWORD PTR $T4[ebp]
	push	edx
	call	__CxxThrowException@8
$LN6@Graphics:
; Line 83
	xor	eax, eax
	mov	DWORD PTR _dDsv$[ebp], eax
	mov	DWORD PTR _dDsv$[ebp+4], eax
	mov	DWORD PTR _dDsv$[ebp+8], eax
	mov	DWORD PTR _dDsv$[ebp+12], eax
	mov	DWORD PTR _dDsv$[ebp+16], eax
	mov	DWORD PTR _dDsv$[ebp+20], eax
; Line 84
	mov	DWORD PTR _dDsv$[ebp], 40		; 00000028H
; Line 85
	mov	DWORD PTR _dDsv$[ebp+4], 3
; Line 86
	mov	DWORD PTR _dDsv$[ebp+12], 0
; Line 88
	mov	ecx, DWORD PTR _this$[ebp]
	call	??C?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QBEPAUID3D11Device@@XZ ; Microsoft::WRL::ComPtr<ID3D11Device>::operator->
	mov	DWORD PTR tv400[ebp], eax
	mov	eax, DWORD PTR tv400[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+40]
	mov	DWORD PTR tv426[ebp], edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	mov	DWORD PTR tv409[ebp], eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR tv409[ebp]
	call	??I?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@QAE?AV?$ComPtrRef@V?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@@Details@12@XZ ; Microsoft::WRL::ComPtr<ID3D11DepthStencilView>::operator&
	mov	ecx, eax
	call	??B?$ComPtrRef@V?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@@Details@WRL@Microsoft@@QAEPAPAUID3D11DepthStencilView@@XZ ; Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ID3D11DepthStencilView> >::operator ID3D11DepthStencilView * *
	mov	DWORD PTR tv424[ebp], eax
	lea	ecx, DWORD PTR _pDS$[ebp]
	call	?Get@?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QBEPAUID3D11Texture2D@@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::Get
	mov	DWORD PTR tv422[ebp], eax
	mov	esi, esp
	mov	edx, DWORD PTR tv424[ebp]
	push	edx
	lea	eax, DWORD PTR _dDsv$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv422[ebp]
	push	ecx
	mov	edx, DWORD PTR tv400[ebp]
	push	edx
	call	DWORD PTR tv426[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hr$[ebp], eax
	cmp	DWORD PTR _hr$[ebp], 0
	jge	SHORT $LN7@Graphics
	mov	eax, DWORD PTR _hr$[ebp]
	push	eax
	push	OFFSET ??_C@_0DA@OCAIHLLA@F?3?2WindowSandbox?2WindowSandbox?2@
	mov	ecx, DWORD PTR ?__LINE__Var@?0???0Graphics@@QAE@PAUHWND__@@@Z@4JA
	add	ecx, 73					; 00000049H
	push	ecx
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0GraphicsException@Graphics@@QAE@HPBDJ@Z ; Graphics::GraphicsException::GraphicsException
	push	OFFSET __TI3?AVGraphicsException@Graphics@@
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	call	__CxxThrowException@8
$LN7@Graphics:
; Line 90
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??C?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@QBEPAUID3D11DeviceContext@@XZ ; Microsoft::WRL::ComPtr<ID3D11DeviceContext>::operator->
	mov	DWORD PTR tv439[ebp], eax
	mov	eax, DWORD PTR tv439[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+132]
	mov	DWORD PTR tv456[ebp], edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?Get@?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@QBEPAUID3D11DepthStencilView@@XZ ; Microsoft::WRL::ComPtr<ID3D11DepthStencilView>::Get
	mov	DWORD PTR tv454[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	call	?GetAddressOf@?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@QAEPAPAUID3D11RenderTargetView@@XZ ; Microsoft::WRL::ComPtr<ID3D11RenderTargetView>::GetAddressOf
	mov	DWORD PTR tv452[ebp], eax
	mov	esi, esp
	mov	eax, DWORD PTR tv454[ebp]
	push	eax
	mov	ecx, DWORD PTR tv452[ebp]
	push	ecx
	push	1
	mov	edx, DWORD PTR tv439[ebp]
	push	edx
	call	DWORD PTR tv456[ebp]
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 91
	mov	BYTE PTR __$EHRec$[ebp+8], 6
	lea	ecx, DWORD PTR _pDS$[ebp]
	call	??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
	mov	BYTE PTR __$EHRec$[ebp+8], 5
	lea	ecx, DWORD PTR _pDSS$[ebp]
	call	??1?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11DepthStencilState>::~ComPtr<ID3D11DepthStencilState>
	mov	BYTE PTR __$EHRec$[ebp+8], 4
	lea	ecx, DWORD PTR _pBackBuf$[ebp]
	call	??1?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Resource>::~ComPtr<ID3D11Resource>
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
$LN8@Graphics:
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN26@Graphics
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 1308				; 0000051cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN26@Graphics:
	DD	7
	DD	$LN25@Graphics
$LN25@Graphics:
	DD	-116					; ffffff8cH
	DD	60					; 0000003cH
	DD	$LN17@Graphics
	DD	-128					; ffffff80H
	DD	4
	DD	$LN18@Graphics
	DD	-188					; ffffff44H
	DD	52					; 00000034H
	DD	$LN19@Graphics
	DD	-200					; ffffff38H
	DD	4
	DD	$LN20@Graphics
	DD	-212					; ffffff2cH
	DD	4
	DD	$LN21@Graphics
	DD	-264					; fffffef8H
	DD	44					; 0000002cH
	DD	$LN22@Graphics
	DD	-296					; fffffed8H
	DD	24					; 00000018H
	DD	$LN23@Graphics
$LN23@Graphics:
	DB	100					; 00000064H
	DB	68					; 00000044H
	DB	115					; 00000073H
	DB	118					; 00000076H
	DB	0
$LN22@Graphics:
	DB	100					; 00000064H
	DB	68					; 00000044H
	DB	0
$LN21@Graphics:
	DB	112					; 00000070H
	DB	68					; 00000044H
	DB	83					; 00000053H
	DB	0
$LN20@Graphics:
	DB	112					; 00000070H
	DB	68					; 00000044H
	DB	83					; 00000053H
	DB	83					; 00000053H
	DB	0
$LN19@Graphics:
	DB	100					; 00000064H
	DB	115					; 00000073H
	DB	100					; 00000064H
	DB	0
$LN18@Graphics:
	DB	112					; 00000070H
	DB	66					; 00000042H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
$LN17@Graphics:
	DB	115					; 00000073H
	DB	100					; 00000064H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0Graphics@@QAE@PAUHWND__@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$ComPtr@UID3D11Device@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Device>::~ComPtr<ID3D11Device>
__unwindfunclet$??0Graphics@@QAE@PAUHWND__@@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	jmp	??1?$ComPtr@UIDXGISwapChain@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IDXGISwapChain>::~ComPtr<IDXGISwapChain>
__unwindfunclet$??0Graphics@@QAE@PAUHWND__@@@Z$2:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	jmp	??1?$ComPtr@UID3D11DeviceContext@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11DeviceContext>::~ComPtr<ID3D11DeviceContext>
__unwindfunclet$??0Graphics@@QAE@PAUHWND__@@@Z$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 12					; 0000000cH
	jmp	??1?$ComPtr@UID3D11RenderTargetView@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11RenderTargetView>::~ComPtr<ID3D11RenderTargetView>
__unwindfunclet$??0Graphics@@QAE@PAUHWND__@@@Z$4:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	jmp	??1?$ComPtr@UID3D11DepthStencilView@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11DepthStencilView>::~ComPtr<ID3D11DepthStencilView>
__unwindfunclet$??0Graphics@@QAE@PAUHWND__@@@Z$5:
	lea	ecx, DWORD PTR _pBackBuf$[ebp]
	jmp	??1?$ComPtr@UID3D11Resource@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Resource>::~ComPtr<ID3D11Resource>
__unwindfunclet$??0Graphics@@QAE@PAUHWND__@@@Z$6:
	lea	ecx, DWORD PTR _pDSS$[ebp]
	jmp	??1?$ComPtr@UID3D11DepthStencilState@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11DepthStencilState>::~ComPtr<ID3D11DepthStencilState>
__unwindfunclet$??0Graphics@@QAE@PAUHWND__@@@Z$7:
	lea	ecx, DWORD PTR _pDS$[ebp]
	jmp	??1?$ComPtr@UID3D11Texture2D@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<ID3D11Texture2D>::~ComPtr<ID3D11Texture2D>
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??0Graphics@@QAE@PAUHWND__@@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-1312]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0Graphics@@QAE@PAUHWND__@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0Graphics@@QAE@PAUHWND__@@@Z ENDP			; Graphics::Graphics
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GGraphicsException@Graphics@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GGraphicsException@Graphics@@UAEPAXI@Z PROC		; Graphics::GraphicsException::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1GraphicsException@Graphics@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	76					; 0000004cH
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GGraphicsException@Graphics@@UAEPAXI@Z ENDP		; Graphics::GraphicsException::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0GraphicsException@Graphics@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0GraphicsException@Graphics@@QAE@ABV01@@Z PROC	; Graphics::GraphicsException::GraphicsException, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Exception@@QAE@ABV0@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7GraphicsException@Graphics@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+72]
	mov	DWORD PTR [eax+72], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0GraphicsException@Graphics@@QAE@ABV01@@Z ENDP	; Graphics::GraphicsException::GraphicsException
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1GraphicsException@Graphics@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1GraphicsException@Graphics@@UAE@XZ PROC		; Graphics::GraphicsException::~GraphicsException, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Exception@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1GraphicsException@Graphics@@UAE@XZ ENDP		; Graphics::GraphicsException::~GraphicsException
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetErrorString@GraphicsException@Graphics@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?GetErrorString@GraphicsException@Graphics@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ PROC ; Graphics::GraphicsException::GetErrorString, COMDAT
; _this$ = ecx
; File F:\WindowSandbox\WindowSandbox\src\Graphics.cpp
; Line 312
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetErrorString@GraphicsException@Graphics@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __AA27F043_Graphics@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 313
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	push	ecx
	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	push	edx
	call	?TranslateErrorCode@GraphicsException@Graphics@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@J@Z ; Graphics::GraphicsException::TranslateErrorCode
	add	esp, 8
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 314
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?GetErrorString@GraphicsException@Graphics@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetErrorString@GraphicsException@Graphics@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetErrorString@GraphicsException@Graphics@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ENDP ; Graphics::GraphicsException::GetErrorString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetErrorCode@GraphicsException@Graphics@@QBEJXZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?GetErrorCode@GraphicsException@Graphics@@QBEJXZ PROC	; Graphics::GraphicsException::GetErrorCode, COMDAT
; _this$ = ecx
; File F:\WindowSandbox\WindowSandbox\src\Graphics.cpp
; Line 308
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetErrorCode@GraphicsException@Graphics@@QBEJXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __AA27F043_Graphics@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 309
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+72]
; Line 310
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?GetErrorCode@GraphicsException@Graphics@@QBEJXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetErrorCode@GraphicsException@Graphics@@QBEJXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetErrorCode@GraphicsException@Graphics@@QBEJXZ ENDP	; Graphics::GraphicsException::GetErrorCode
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?TranslateErrorCode@GraphicsException@Graphics@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@J@Z
_TEXT	SEGMENT
_errorString$ = -72					; size = 28
_nMsgLen$ = -36						; size = 4
_pMsgBuf$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_hr$ = 12						; size = 4
?TranslateErrorCode@GraphicsException@Graphics@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@J@Z PROC ; Graphics::GraphicsException::TranslateErrorCode, COMDAT
; File F:\WindowSandbox\WindowSandbox\src\Graphics.cpp
; Line 294
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?TranslateErrorCode@GraphicsException@Graphics@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@J@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __AA27F043_Graphics@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 295
	mov	DWORD PTR _pMsgBuf$[ebp], 0
; Line 296
	mov	esi, esp
	push	0
	push	0
	lea	eax, DWORD PTR _pMsgBuf$[ebp]
	push	eax
	push	1024					; 00000400H
	mov	ecx, DWORD PTR _hr$[ebp]
	push	ecx
	push	0
	push	4864					; 00001300H
	call	DWORD PTR __imp__FormatMessageA@28
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _nMsgLen$[ebp], eax
; Line 300
	cmp	DWORD PTR _nMsgLen$[ebp], 0
	jne	SHORT $LN2@TranslateE
; Line 301
	push	OFFSET ??_C@_0BF@KPHDJHEI@Undefined?5Error?5Code@
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	jmp	SHORT $LN3@TranslateE
$LN2@TranslateE:
; Line 303
	mov	eax, DWORD PTR _pMsgBuf$[ebp]
	push	eax
	lea	ecx, DWORD PTR _errorString$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 304
	mov	esi, esp
	mov	eax, DWORD PTR _pMsgBuf$[ebp]
	push	eax
	call	DWORD PTR __imp__LocalFree@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 305
	lea	eax, DWORD PTR _errorString$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	lea	ecx, DWORD PTR _errorString$[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
$LN3@TranslateE:
; Line 306
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@TranslateE
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN8@TranslateE:
	DD	2
	DD	$LN7@TranslateE
$LN7@TranslateE:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN4@TranslateE
	DD	-72					; ffffffb8H
	DD	28					; 0000001cH
	DD	$LN5@TranslateE
$LN5@TranslateE:
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	0
$LN4@TranslateE:
	DB	112					; 00000070H
	DB	77					; 0000004dH
	DB	115					; 00000073H
	DB	103					; 00000067H
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?TranslateErrorCode@GraphicsException@Graphics@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@J@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-272]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?TranslateErrorCode@GraphicsException@Graphics@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@J@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?TranslateErrorCode@GraphicsException@Graphics@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@J@Z ENDP ; Graphics::GraphicsException::TranslateErrorCode
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetType@GraphicsException@Graphics@@UBEPBDXZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?GetType@GraphicsException@Graphics@@UBEPBDXZ PROC	; Graphics::GraphicsException::GetType, COMDAT
; _this$ = ecx
; File F:\WindowSandbox\WindowSandbox\src\Graphics.cpp
; Line 290
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?GetType@GraphicsException@Graphics@@UBEPBDXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __AA27F043_Graphics@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 291
	mov	eax, OFFSET ??_C@_0BD@EBLMECGC@Graphics?5Exception@
; Line 292
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?GetType@GraphicsException@Graphics@@UBEPBDXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?GetType@GraphicsException@Graphics@@UBEPBDXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?GetType@GraphicsException@Graphics@@UBEPBDXZ ENDP	; Graphics::GraphicsException::GetType
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?what@GraphicsException@Graphics@@UBEPBDXZ
_TEXT	SEGMENT
tv174 = -536						; size = 4
tv172 = -532						; size = 4
tv169 = -528						; size = 4
tv164 = -524						; size = 4
tv162 = -520						; size = 4
tv158 = -516						; size = 4
tv151 = -512						; size = 4
tv153 = -508						; size = 4
tv143 = -504						; size = 4
$T2 = -496						; size = 4
$T3 = -484						; size = 28
$T4 = -448						; size = 28
$T5 = -412						; size = 28
_oss$ = -184						; size = 152
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?what@GraphicsException@Graphics@@UBEPBDXZ PROC		; Graphics::GraphicsException::what, COMDAT
; _this$ = ecx
; File F:\WindowSandbox\WindowSandbox\src\Graphics.cpp
; Line 279
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?what@GraphicsException@Graphics@@UBEPBDXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 524				; 0000020cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-536]
	mov	ecx, 131				; 00000083H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __AA27F043_Graphics@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 280
	push	152					; 00000098H
	lea	ecx, DWORD PTR _oss$[ebp]
	call	?__autoclassinit2@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXI@Z
	push	1
	lea	ecx, DWORD PTR _oss$[ebp]
	call	??0?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >
; Line 281
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	lea	ecx, DWORD PTR _oss$[ebp]
	push	ecx
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	DWORD PTR tv143[ebp], eax
	mov	esi, esp
	push	OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
	mov	ecx, DWORD PTR tv143[ebp]
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	OFFSET ??_C@_0N@CHALHMAE@?$FLError?5Code?$FN@
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	DWORD PTR tv153[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetErrorCode@GraphicsException@Graphics@@QBEJXZ ; Graphics::GraphicsException::GetErrorCode
	mov	DWORD PTR tv151[ebp], eax
	mov	esi, esp
	mov	edx, DWORD PTR tv151[ebp]
	push	edx
	mov	ecx, DWORD PTR tv153[ebp]
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@J@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv158[ebp], eax
	mov	esi, esp
	push	OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
	mov	ecx, DWORD PTR tv158[ebp]
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	OFFSET ??_C@_0O@BLDOFIJ@?$FLDescription?$FN@
	push	eax
	call	??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z ; std::operator<<<std::char_traits<char> >
	add	esp, 8
	mov	DWORD PTR tv162[ebp], eax
	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetErrorString@GraphicsException@Graphics@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; Graphics::GraphicsException::GetErrorString
	mov	DWORD PTR tv164[ebp], eax
	mov	ecx, DWORD PTR tv164[ebp]
	push	ecx
	mov	edx, DWORD PTR tv162[ebp]
	push	edx
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	mov	DWORD PTR tv169[ebp], eax
	mov	esi, esp
	push	OFFSET ??$endl@DU?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@@Z ; std::endl<char,std::char_traits<char> >
	mov	ecx, DWORD PTR tv169[ebp]
	call	DWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv172[ebp], eax
	lea	eax, DWORD PTR $T5[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetOriginString@Exception@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ ; Exception::GetOriginString
	mov	DWORD PTR tv174[ebp], eax
	mov	ecx, DWORD PTR tv174[ebp]
	push	ecx
	mov	edx, DWORD PTR tv172[ebp]
	push	edx
	call	??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z ; std::operator<<<char,std::char_traits<char>,std::allocator<char> >
	add	esp, 8
	lea	ecx, DWORD PTR $T5[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	lea	ecx, DWORD PTR $T4[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 286
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	lea	ecx, DWORD PTR _oss$[ebp]
	call	?str@?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBE?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >::str
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Line 287
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	mov	DWORD PTR $T2[ebp], eax
	lea	ecx, DWORD PTR _oss$[ebp]
	call	??_D?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEXXZ
	mov	eax, DWORD PTR $T2[ebp]
; Line 288
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@what
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 536				; 00000218H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@what:
	DD	1
	DD	$LN5@what
$LN5@what:
	DD	-184					; ffffff48H
	DD	152					; 00000098H
	DD	$LN3@what
$LN3@what:
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	115					; 00000073H
	DB	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?what@GraphicsException@Graphics@@UBEPBDXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-540]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?what@GraphicsException@Graphics@@UBEPBDXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?what@GraphicsException@Graphics@@UBEPBDXZ ENDP		; Graphics::GraphicsException::what
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0GraphicsException@Graphics@@QAE@HPBDJ@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_line$ = 8						; size = 4
_file$ = 12						; size = 4
_hr$ = 16						; size = 4
??0GraphicsException@Graphics@@QAE@HPBDJ@Z PROC		; Graphics::GraphicsException::GraphicsException, COMDAT
; _this$ = ecx
; File F:\WindowSandbox\WindowSandbox\src\Graphics.cpp
; Line 277
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __AA27F043_Graphics@cpp
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _file$[ebp]
	push	eax
	mov	ecx, DWORD PTR _line$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Exception@@QAE@IPBD@Z		; Exception::Exception
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7GraphicsException@Graphics@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _hr$[ebp]
	mov	DWORD PTR [eax+72], ecx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0GraphicsException@Graphics@@QAE@HPBDJ@Z ENDP		; Graphics::GraphicsException::GraphicsException
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??B?$fpos@U_Mbstatet@@@std@@QBE_JXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??B?$fpos@U_Mbstatet@@@std@@QBE_JXZ PROC		; std::fpos<_Mbstatet>::operator __int64, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\iosfwd
; Line 67
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __3E6EDFAA_iosfwd
	call	@__CheckForDebuggerJustMyCode@4
; Line 70
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	add	edx, DWORD PTR [ecx+8]
	mov	esi, DWORD PTR [eax+4]
	adc	esi, DWORD PTR [ecx+12]
	mov	eax, edx
	mov	edx, esi
; Line 71
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??B?$fpos@U_Mbstatet@@@std@@QBE_JXZ ENDP		; std::fpos<_Mbstatet>::operator __int64
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$fpos@U_Mbstatet@@@std@@QAE@_J@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Off$ = 8						; size = 8
??0?$fpos@U_Mbstatet@@@std@@QAE@_J@Z PROC		; std::fpos<_Mbstatet>::fpos<_Mbstatet>, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\iosfwd
; Line 55
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __3E6EDFAA_iosfwd
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Off$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR __Off$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0
	mov	DWORD PTR [eax+12], 0
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$fpos@U_Mbstatet@@@std@@QAE@_J@Z ENDP		; std::fpos<_Mbstatet>::fpos<_Mbstatet>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAEPAXI@Z PROC	; Microsoft::WRL::ComPtr<IUnknown>::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAEPAXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN2@vector
	push	OFFSET ??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IUnknown>::~ComPtr<IUnknown>
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIIP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN3@vector
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	lea	edx, DWORD PTR [ecx*4+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAXI@Z				; operator delete[]
	add	esp, 8
$LN3@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN5@vector
$LN2@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IUnknown>::~ComPtr<IUnknown>
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN4@vector
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN4@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN5@vector:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAEPAXI@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAEPAXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAEPAXI@Z ENDP	; Microsoft::WRL::ComPtr<IUnknown>::`vector deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAE@XZ PROC	; Microsoft::WRL::ComPtr<IUnknown>::~ComPtr<IUnknown>, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 230
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 231
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IUnknown>::InternalRelease
; Line 232
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAE@XZ ENDP	; Microsoft::WRL::ComPtr<IUnknown>::~ComPtr<IUnknown>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IAEKXZ
_TEXT	SEGMENT
_temp$ = -44						; size = 4
_ref$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IAEKXZ PROC ; Microsoft::WRL::ComPtr<IUnknown>::InternalRelease, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 169
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IAEKXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 170
	mov	DWORD PTR _ref$[ebp], 0
; Line 171
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _temp$[ebp], ecx
; Line 173
	cmp	DWORD PTR _temp$[ebp], 0
	je	SHORT $LN2@InternalRe
; Line 175
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 176
	mov	eax, DWORD PTR _temp$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _temp$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ref$[ebp], eax
$LN2@InternalRe:
; Line 179
	mov	eax, DWORD PTR _ref$[ebp]
; Line 180
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IAEKXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-244]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IAEKXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IAEKXZ ENDP ; Microsoft::WRL::ComPtr<IUnknown>::InternalRelease
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GException@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GException@@UAEPAXI@Z PROC				; Exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Exception@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	72					; 00000048H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GException@@UAEPAXI@Z ENDP				; Exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0Exception@@QAE@ABV0@@Z
_TEXT	SEGMENT
tv134 = -220						; size = 4
tv93 = -220						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0Exception@@QAE@ABV0@@Z PROC				; Exception::Exception, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0Exception@@QAE@ABV0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0exception@std@@QAE@ABV01@@Z		; std::exception::exception
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Exception@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	mov	DWORD PTR tv93[ebp], eax
	mov	ecx, DWORD PTR ___that$[ebp]
	add	ecx, 16					; 00000010H
	push	ecx
	mov	ecx, DWORD PTR tv93[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 44					; 0000002cH
	mov	DWORD PTR tv134[ebp], eax
	mov	ecx, DWORD PTR ___that$[ebp]
	add	ecx, 44					; 0000002cH
	push	ecx
	mov	ecx, DWORD PTR tv134[ebp]
	call	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0Exception@@QAE@ABV0@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1exception@std@@UAE@XZ		; std::exception::~exception
__unwindfunclet$??0Exception@@QAE@ABV0@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??0Exception@@QAE@ABV0@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-224]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0Exception@@QAE@ABV0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0Exception@@QAE@ABV0@@Z ENDP				; Exception::Exception
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1Exception@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1Exception@@UAE@XZ PROC				; Exception::~Exception, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 44					; 0000002cH
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1exception@std@@UAE@XZ		; std::exception::~exception
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1Exception@@UAE@XZ ENDP				; Exception::~Exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABV?$allocator@D@2@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABV?$allocator@D@2@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; Line 1347
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABV?$allocator@D@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __A58979FC_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 1348
	mov	eax, DWORD PTR _this$[ebp]
; Line 1349
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABV?$allocator@D@2@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABV?$allocator@D@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABV?$allocator@D@2@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$allocator@D@2@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$allocator@D@2@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; Line 1343
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$allocator@D@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __A58979FC_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 1344
	mov	eax, DWORD PTR _this$[ebp]
; Line 1345
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$allocator@D@2@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$allocator@D@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$allocator@D@2@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABEABV?$allocator@D@2@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABEABV?$allocator@D@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; Line 4328
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABEABV?$allocator@D@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __D15AFF60_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 4329
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QBEABV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
; Line 4330
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABEABV?$allocator@D@2@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABEABV?$allocator@D@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABEABV?$allocator@D@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; Line 4324
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __D15AFF60_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 4325
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
; Line 4326
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@@Z
_TEXT	SEGMENT
tv79 = -208						; size = 4
_this$ = -8						; size = 4
__Right$ = 8						; size = 4
?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Swap_proxy_and_iterators, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; Line 4320
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __D15AFF60_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 4321
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv79[ebp], eax
	mov	ecx, DWORD PTR __Right$[ebp]
	push	ecx
	mov	ecx, DWORD PTR tv79[ebp]
	call	?_Swap_proxy_and_iterators@_Container_base12@std@@QAEXAAU12@@Z ; std::_Container_base12::_Swap_proxy_and_iterators
; Line 4322
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Swap_proxy_and_iterators
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ
_TEXT	SEGMENT
$T2 = -245						; size = 1
__Al$3 = -44						; size = 4
__Ptr$4 = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; Line 4299
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __D15AFF60_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 4300
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
; Line 4301
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QBE_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@Tidy_deall
; Line 4302
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __Ptr$4[ebp], ecx
; Line 4303
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	mov	DWORD PTR __Al$3[ebp], eax
; Line 4304
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	push	eax
	call	??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z ; std::_Destroy_in_place<char *>
	add	esp, 4
; Line 4305
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR __Ptr$4[ebp]
	push	edx
	mov	ecx, DWORD PTR __Al$3[ebp]
	call	?deallocate@?$allocator@D@std@@QAEXQADI@Z ; std::allocator<char>::deallocate
$LN2@Tidy_deall:
; Line 4308
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
; Line 4309
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 15			; 0000000fH
; Line 4311
	mov	BYTE PTR $T2[ebp], 0
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, 1
	imul	edx, ecx, 0
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+4]
	push	ecx
	call	?assign@?$_Narrow_char_traits@DH@std@@SAXAADABD@Z ; std::_Narrow_char_traits<char,int>::assign
	add	esp, 8
; Line 4312
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-256]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ
_TEXT	SEGMENT
$T2 = -221						; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; Line 4292
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __D15AFF60_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 4293
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
; Line 4294
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 15			; 0000000fH
; Line 4296
	mov	BYTE PTR $T2[ebp], 0
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, 1
	imul	edx, ecx, 0
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+4]
	push	ecx
	call	?assign@?$_Narrow_char_traits@DH@std@@SAXAADABD@Z ; std::_Narrow_char_traits<char,int>::assign
	add	esp, 8
; Line 4297
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABEII@Z
_TEXT	SEGMENT
tv74 = -224						; size = 4
tv76 = -220						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Requested$ = 8					; size = 4
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABEII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; Line 4213
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABEII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 212				; 000000d4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-224]
	mov	ecx, 53					; 00000035H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __D15AFF60_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 4214
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	DWORD PTR tv76[ebp], eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR tv74[ebp], ecx
	mov	edx, DWORD PTR tv76[ebp]
	push	edx
	mov	eax, DWORD PTR tv74[ebp]
	push	eax
	mov	ecx, DWORD PTR __Requested$[ebp]
	push	ecx
	call	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAIIII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
	add	esp, 12					; 0000000cH
; Line 4215
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 224				; 000000e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABEII@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-228]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABEII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABEII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAIIII@Z
_TEXT	SEGMENT
$T2 = -228						; size = 4
__Masked$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__Requested$ = 8					; size = 4
__Old$ = 12						; size = 4
__Max$ = 16						; size = 4
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAIIII@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth, COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; Line 4200
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAIIII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __D15AFF60_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 4201
	mov	eax, DWORD PTR __Requested$[ebp]
	or	eax, 15					; 0000000fH
	mov	DWORD PTR __Masked$[ebp], eax
; Line 4202
	mov	eax, DWORD PTR __Masked$[ebp]
	cmp	eax, DWORD PTR __Max$[ebp]
	jbe	SHORT $LN2@Calculate_
; Line 4203
	mov	eax, DWORD PTR __Max$[ebp]
	jmp	SHORT $LN4@Calculate_
$LN2@Calculate_:
; Line 4206
	mov	eax, DWORD PTR __Old$[ebp]
	shr	eax, 1
	mov	ecx, DWORD PTR __Max$[ebp]
	sub	ecx, eax
	cmp	DWORD PTR __Old$[ebp], ecx
	jbe	SHORT $LN3@Calculate_
; Line 4207
	mov	eax, DWORD PTR __Max$[ebp]
	jmp	SHORT $LN4@Calculate_
$LN3@Calculate_:
; Line 4210
	mov	eax, DWORD PTR __Old$[ebp]
	shr	eax, 1
	add	eax, DWORD PTR __Old$[ebp]
	mov	DWORD PTR $T2[ebp], eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	lea	edx, DWORD PTR __Masked$[ebp]
	push	edx
	call	??$max@I@std@@YAABIABI0@Z		; std::max<unsigned int>
	add	esp, 8
	mov	eax, DWORD PTR [eax]
$LN4@Calculate_:
; Line 4211
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@Calculate_
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN8@Calculate_:
	DD	1
	DD	$LN7@Calculate_
$LN7@Calculate_:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN5@Calculate_
$LN5@Calculate_:
	DB	95					; 0000005fH
	DB	77					; 0000004dH
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	107					; 0000006bH
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAIIII@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-236]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAIIII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAIIII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
$T2 = -276						; size = 4
$T3 = -264						; size = 4
$T4 = -252						; size = 4
__Storage_max$ = -48					; size = 4
__Alloc_max$ = -36					; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; Line 3689
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 268				; 0000010cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 67					; 00000043H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __D15AFF60_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 3690
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABEABV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	push	eax
	call	?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ; std::_Default_allocator_traits<std::allocator<char> >::max_size
	add	esp, 4
	mov	DWORD PTR __Alloc_max$[ebp], eax
; Line 3691
	mov	DWORD PTR $T4[ebp], 16			; 00000010H
	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	lea	ecx, DWORD PTR __Alloc_max$[ebp]
	push	ecx
	call	??$max@I@std@@YAABIABI0@Z		; std::max<unsigned int>
	add	esp, 8
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR __Storage_max$[ebp], edx
; Line 3693
	mov	eax, DWORD PTR __Storage_max$[ebp]
	sub	eax, 1
	mov	DWORD PTR $T3[ebp], eax
	call	?max@?$numeric_limits@H@std@@SAHXZ	; std::numeric_limits<int>::max
	mov	DWORD PTR $T2[ebp], eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	call	??$min@I@std@@YAABIABI0@Z		; std::min<unsigned int>
	add	esp, 8
	mov	eax, DWORD PTR [eax]
; Line 3696
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@max_size
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN6@max_size:
	DD	1
	DD	$LN5@max_size
$LN5@max_size:
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN3@max_size
$LN3@max_size:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	95					; 0000005fH
	DB	109					; 0000006dH
	DB	97					; 00000061H
	DB	120					; 00000078H
	DB	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-284]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; Line 3685
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __D15AFF60_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 3686
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]
; Line 3687
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; Line 3671
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __D15AFF60_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 3672
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
; Line 3673
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?data@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::data
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; Line 3667
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __D15AFF60_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 3668
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
; Line 3669
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; Line 2983
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __D15AFF60_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 2984
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	?length@?$_Narrow_char_traits@DH@std@@SAIQBD@Z ; std::_Narrow_char_traits<char,int>::length
	add	esp, 4
	push	eax
	call	??$_Convert_size@I@std@@YAII@Z		; std::_Convert_size<unsigned int>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 2985
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z
_TEXT	SEGMENT
$T1 = -233						; size = 1
$T2 = -221						; size = 1
__Old_ptr$3 = -20					; size = 4
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; Line 2964
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __D15AFF60_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 2966
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Count$[ebp]
	cmp	ecx, DWORD PTR [eax+24]
	ja	SHORT $LN2@assign
; Line 2967
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	DWORD PTR __Old_ptr$3[ebp], eax
; Line 2968
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Count$[ebp]
	mov	DWORD PTR [eax+20], ecx
; Line 2969
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Old_ptr$3[ebp]
	push	edx
	call	?move@?$_Narrow_char_traits@DH@std@@SAPADQADQBDI@Z ; std::_Narrow_char_traits<char,int>::move
	add	esp, 12					; 0000000cH
; Line 2970
	mov	BYTE PTR $T2[ebp], 0
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR __Old_ptr$3[ebp]
	add	ecx, DWORD PTR __Count$[ebp]
	push	ecx
	call	?assign@?$_Narrow_char_traits@DH@std@@SAXAADABD@Z ; std::_Narrow_char_traits<char,int>::assign
	add	esp, 8
; Line 2971
	mov	eax, DWORD PTR _this$[ebp]
	jmp	SHORT $LN1@assign
$LN2@assign:
; Line 2974
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	movzx	ecx, BYTE PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR __Count$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Reallocate_for@V<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV34@QBDI@Z@PBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV01@IV<lambda_1>@?1??assign@01@QAEAAV01@QBDI@Z@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign'::`2'::<lambda_1>,char const *>
$LN1@assign:
; Line 2981
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
__To_delete$ = -60					; size = 4
_$S10$ = -45						; size = 1
__Alproxy$ = -36					; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; Line 2722
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __D15AFF60_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 2723
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; Line 2725
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	push	eax
	lea	ecx, DWORD PTR _$S10$[ebp]
	call	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
	lea	eax, DWORD PTR _$S10$[ebp]
	mov	DWORD PTR __Alproxy$[ebp], eax
; Line 2726
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __To_delete$[ebp], ecx
; Line 2727
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 2728
	mov	eax, DWORD PTR __To_delete$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Alproxy$[ebp]
	push	ecx
	call	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
	add	esp, 8
; Line 2730
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@basic_stri
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN6@basic_stri:
	DD	1
	DD	$LN5@basic_stri
$LN5@basic_stri:
	DD	-45					; ffffffd3H
	DD	1
	DD	$LN3@basic_stri
$LN3@basic_stri:
	DB	36					; 00000024H
	DB	83					; 00000053H
	DB	49					; 00000031H
	DB	48					; 00000030H
	DB	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-260]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXABV12@@Z
_TEXT	SEGMENT
$T1 = -312						; size = 4
$T2 = -300						; size = 4
__New_array$ = -96					; size = 4
__New_capacity$ = -84					; size = 4
__Al$ = -72						; size = 4
__My_data$ = -60					; size = 4
__Right_ptr$ = -48					; size = 4
__Right_size$ = -36					; size = 4
__Right_data$ = -24					; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
__Right$ = 8						; size = 4
?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXABV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct_lv_contents, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; Line 2650
	push	ebp
	mov	ebp, esp
	sub	esp, 316				; 0000013cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-316]
	mov	ecx, 79					; 0000004fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __D15AFF60_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 2655
	mov	eax, DWORD PTR __Right$[ebp]
	mov	DWORD PTR __Right_data$[ebp], eax
; Line 2656
	mov	eax, DWORD PTR __Right_data$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR __Right_size$[ebp], ecx
; Line 2657
	mov	ecx, DWORD PTR __Right_data$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
	mov	DWORD PTR __Right_ptr$[ebp], eax
; Line 2658
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __My_data$[ebp], eax
; Line 2659
	cmp	DWORD PTR __Right_size$[ebp], 16	; 00000010H
	jae	SHORT $LN2@Construct_
; Line 2660
	push	16					; 00000010H
	mov	eax, DWORD PTR __Right_ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __My_data$[ebp]
	add	ecx, 4
	push	ecx
	call	?copy@?$_Narrow_char_traits@DH@std@@SAPADQADQBDI@Z ; std::_Narrow_char_traits<char,int>::copy
	add	esp, 12					; 0000000cH
; Line 2661
	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR __Right_size$[ebp]
	mov	DWORD PTR [eax+20], ecx
; Line 2662
	mov	eax, DWORD PTR __My_data$[ebp]
	mov	DWORD PTR [eax+24], 15			; 0000000fH
; Line 2663
	jmp	$LN1@Construct_
$LN2@Construct_:
; Line 2666
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	mov	DWORD PTR __Al$[ebp], eax
; Line 2667
	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	mov	DWORD PTR $T2[ebp], eax
	mov	eax, DWORD PTR __Right_size$[ebp]
	or	eax, 15					; 0000000fH
	mov	DWORD PTR $T1[ebp], eax
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	lea	edx, DWORD PTR $T1[ebp]
	push	edx
	call	??$min@I@std@@YAABIABI0@Z		; std::min<unsigned int>
	add	esp, 8
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR __New_capacity$[ebp], eax
; Line 2668
	mov	eax, DWORD PTR __New_capacity$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?allocate@?$allocator@D@std@@QAEPADI@Z	; std::allocator<char>::allocate
	mov	DWORD PTR __New_array$[ebp], eax
; Line 2669
	lea	eax, DWORD PTR __New_array$[ebp]
	push	eax
	mov	ecx, DWORD PTR __My_data$[ebp]
	add	ecx, 4
	push	ecx
	call	??$_Construct_in_place@PADABQAD@std@@YAXAAPADABQAD@Z ; std::_Construct_in_place<char *,char * const &>
	add	esp, 8
; Line 2670
	mov	eax, DWORD PTR __Right_size$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR __Right_ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR __New_array$[ebp]
	push	edx
	call	??$_Unfancy@D@std@@YAPADPAD@Z		; std::_Unfancy<char>
	add	esp, 4
	push	eax
	call	?copy@?$_Narrow_char_traits@DH@std@@SAPADQADQBDI@Z ; std::_Narrow_char_traits<char,int>::copy
	add	esp, 12					; 0000000cH
; Line 2671
	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR __Right_size$[ebp]
	mov	DWORD PTR [eax+20], ecx
; Line 2672
	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR __New_capacity$[ebp]
	mov	DWORD PTR [eax+24], ecx
$LN1@Construct_:
; Line 2673
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@Construct_
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 316				; 0000013cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN6@Construct_:
	DD	1
	DD	$LN5@Construct_
$LN5@Construct_:
	DD	-96					; ffffffa0H
	DD	4
	DD	$LN4@Construct_
$LN4@Construct_:
	DB	95					; 0000005fH
	DB	78					; 0000004eH
	DB	101					; 00000065H
	DB	119					; 00000077H
	DB	95					; 0000005fH
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	0
?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXABV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct_lv_contents
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@U?$integral_constant@_N$00@2@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
___formal$ = 12						; size = 1
?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@U?$integral_constant@_N$00@2@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; Line 2609
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@U?$integral_constant@_N$00@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __D15AFF60_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 2616
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QBE_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@Take_conte
; Line 2618
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Swap_proxy_and_iterators
; Line 2619
	jmp	SHORT $LN3@Take_conte
$LN2@Take_conte:
; Line 2620
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all
$LN3@Take_conte:
; Line 2624
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Memcpy_val_from
; Line 2625
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
; Line 2626
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@U?$integral_constant@_N$00@2@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@U?$integral_constant@_N$00@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@U?$integral_constant@_N$00@2@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXABV12@@Z
_TEXT	SEGMENT
__Right_data_mem$ = -44					; size = 4
__My_data_mem$ = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXABV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Memcpy_val_from, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; Line 2600
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXABV12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __D15AFF60_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 2602
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPAV?$_String_val@U?$_Simple_types@D@std@@@0@AAV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<char> > >
	add	esp, 4
	add	eax, 4
	mov	DWORD PTR __My_data_mem$[ebp], eax
; Line 2604
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPBV?$_String_val@U?$_Simple_types@D@std@@@0@ABV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<char> > const >
	add	esp, 4
	add	eax, 4
	mov	DWORD PTR __Right_data_mem$[ebp], eax
; Line 2606
	push	24					; 00000018H
	mov	eax, DWORD PTR __Right_data_mem$[ebp]
	push	eax
	mov	ecx, DWORD PTR __My_data_mem$[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 2607
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXABV12@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-244]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXABV12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXABV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Memcpy_val_from
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z
_TEXT	SEGMENT
$T2 = -221						; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; Line 2586
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __D15AFF60_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 2587
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	call	??$addressof@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@YAPAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@AAV10@@Z ; std::addressof<std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	add	esp, 4
	cmp	DWORD PTR _this$[ebp], eax
	je	SHORT $LN2@operator
; Line 2588
	xor	eax, eax
	mov	BYTE PTR $T2[ebp], al
	movzx	ecx, BYTE PTR $T2[ebp]
	push	ecx
	mov	edx, DWORD PTR __Right$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Move_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@U_Equal_allocators@2@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Move_assign
$LN2@operator:
; Line 2591
	mov	eax, DWORD PTR _this$[ebp]
; Line 2592
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Move_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@U_Equal_allocators@2@@Z
_TEXT	SEGMENT
tv72 = -236						; size = 4
tv74 = -232						; size = 4
$T2 = -221						; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
___formal$ = 12						; size = 1
?_Move_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@U_Equal_allocators@2@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Move_assign, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; Line 2558
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Move_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@U_Equal_allocators@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 224				; 000000e0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-236]
	mov	ecx, 56					; 00000038H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __D15AFF60_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 2559
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; Line 2560
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	mov	DWORD PTR tv74[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	mov	DWORD PTR tv72[ebp], eax
	mov	eax, DWORD PTR tv74[ebp]
	push	eax
	mov	ecx, DWORD PTR tv72[ebp]
	push	ecx
	call	??$_Pocma@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@0@Z ; std::_Pocma<std::allocator<char> >
	add	esp, 8
; Line 2561
	xor	eax, eax
	mov	BYTE PTR $T2[ebp], al
	movzx	ecx, BYTE PTR $T2[ebp]
	push	ecx
	mov	edx, DWORD PTR __Right$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@U?$integral_constant@_N$00@2@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents
; Line 2562
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 236				; 000000ecH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Move_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@U_Equal_allocators@2@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-240]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Move_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@U_Equal_allocators@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Move_assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@U_Equal_allocators@2@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Move_assign
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z
_TEXT	SEGMENT
tv75 = -272						; size = 4
tv94 = -268						; size = 4
tv77 = -268						; size = 4
$T2 = -257						; size = 1
$T3 = -245						; size = 1
$T4 = -233						; size = 1
$T5 = -221						; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; Line 2418
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 260				; 00000104H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-272]
	mov	ecx, 65					; 00000041H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __D15AFF60_xstring
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv77[ebp], eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	push	eax
	call	??$move@AAV?$allocator@D@std@@@std@@YA$$QAV?$allocator@D@0@AAV10@@Z ; std::move<std::allocator<char> &>
	add	esp, 4
	mov	DWORD PTR tv75[ebp], eax
	mov	cl, BYTE PTR $T5[ebp]
	mov	BYTE PTR $T4[ebp], cl
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	movzx	eax, BYTE PTR $T4[ebp]
	push	eax
	mov	ecx, DWORD PTR tv77[ebp]
	call	??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@D@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >
; Line 2419
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv94[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	push	eax
	lea	ecx, DWORD PTR $T3[ebp]
	call	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
	push	eax
	mov	ecx, DWORD PTR tv94[ebp]
	call	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QAEX$$QAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
; Line 2420
	xor	eax, eax
	mov	BYTE PTR $T2[ebp], al
	movzx	ecx, BYTE PTR $T2[ebp]
	push	ecx
	mov	edx, DWORD PTR __Right$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXAAV12@U?$integral_constant@_N$00@2@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents
; Line 2421
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 272				; 00000110H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-276]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@$$QAV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z
_TEXT	SEGMENT
tv69 = -276						; size = 4
$T2 = -265						; size = 1
__Proxy$ = -64						; size = 8
_$S12$ = -45						; size = 1
__Alproxy$ = -36					; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; Line 2335
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-276]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __D15AFF60_xstring
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	movzx	ecx, BYTE PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR tv69[ebp]
	call	??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 2336
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	push	eax
	lea	ecx, DWORD PTR _$S12$[ebp]
	call	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
	lea	eax, DWORD PTR _$S12$[ebp]
	mov	DWORD PTR __Alproxy$[ebp], eax
; Line 2337
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Alproxy$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Proxy$[ebp]
	call	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAV?$allocator@U_Container_proxy@std@@@1@AAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 2338
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
; Line 2339
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@QBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Line 2340
	lea	ecx, DWORD PTR __Proxy$[ebp]
	call	?_Release@_Basic_container_proxy_ptr12@std@@QAEXXZ ; std::_Basic_container_proxy_ptr12::_Release
; Line 2341
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Proxy$[ebp]
	call	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@basic_stri
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 276				; 00000114H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN9@basic_stri:
	DD	2
	DD	$LN8@basic_stri
$LN8@basic_stri:
	DD	-45					; ffffffd3H
	DD	1
	DD	$LN5@basic_stri
	DD	-64					; ffffffc0H
	DD	8
	DD	$LN6@basic_stri
$LN6@basic_stri:
	DB	95					; 0000005fH
	DB	80					; 00000050H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
$LN5@basic_stri:
	DB	36					; 00000024H
	DB	83					; 00000053H
	DB	49					; 00000031H
	DB	50					; 00000032H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z$1:
	lea	ecx, DWORD PTR __Proxy$[ebp]
	jmp	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-280]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@QBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$allocator@D@1@@Z
_TEXT	SEGMENT
tv87 = -244						; size = 4
tv70 = -244						; size = 4
$T2 = -233						; size = 1
$T3 = -221						; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$allocator@D@1@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; Line 2292
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$allocator@D@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __D15AFF60_xstring
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv70[ebp], eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	movzx	edx, BYTE PTR $T3[ebp]
	push	edx
	mov	ecx, DWORD PTR tv70[ebp]
	call	??$?0ABV?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@ABV?$allocator@D@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> const &>
; Line 2293
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv87[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	call	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
	push	eax
	mov	ecx, DWORD PTR tv87[ebp]
	call	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QAEX$$QAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
; Line 2294
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
; Line 2295
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$allocator@D@1@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$allocator@D@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV?$allocator@D@1@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
tv76 = -304						; size = 4
tv78 = -300						; size = 4
$T2 = -289						; size = 1
$T3 = -277						; size = 1
$T4 = -265						; size = 1
__Proxy$ = -64						; size = 8
_$S14$ = -45						; size = 1
__Alproxy$ = -36					; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; Line 2273
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 292				; 00000124H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-304]
	mov	ecx, 73					; 00000049H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __D15AFF60_xstring
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR tv78[ebp], eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@ABEABV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	push	eax
	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	call	?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@ABV32@@Z ; std::_Default_allocator_traits<std::allocator<char> >::select_on_container_copy_construction
	add	esp, 8
	mov	DWORD PTR tv76[ebp], eax
	mov	dl, BYTE PTR $T3[ebp]
	mov	BYTE PTR $T2[ebp], dl
	mov	eax, DWORD PTR tv76[ebp]
	push	eax
	movzx	ecx, BYTE PTR $T2[ebp]
	push	ecx
	mov	ecx, DWORD PTR tv78[ebp]
	call	??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@D@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0
; Line 2274
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	push	eax
	lea	ecx, DWORD PTR _$S14$[ebp]
	call	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
	lea	eax, DWORD PTR _$S14$[ebp]
	mov	DWORD PTR __Alproxy$[ebp], eax
; Line 2275
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Alproxy$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Proxy$[ebp]
	call	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAV?$allocator@U_Container_proxy@std@@@1@AAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	mov	BYTE PTR __$EHRec$[ebp+8], 1
; Line 2276
	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXABV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct_lv_contents
; Line 2277
	lea	ecx, DWORD PTR __Proxy$[ebp]
	call	?_Release@_Basic_container_proxy_ptr12@std@@QAEXXZ ; std::_Basic_container_proxy_ptr12::_Release
; Line 2278
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Proxy$[ebp]
	call	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@basic_stri
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 304				; 00000130H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN9@basic_stri:
	DD	2
	DD	$LN8@basic_stri
$LN8@basic_stri:
	DD	-45					; ffffffd3H
	DD	1
	DD	$LN5@basic_stri
	DD	-64					; ffffffc0H
	DD	8
	DD	$LN6@basic_stri
$LN6@basic_stri:
	DB	95					; 0000005fH
	DB	80					; 00000050H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
$LN5@basic_stri:
	DB	36					; 00000024H
	DB	83					; 00000053H
	DB	49					; 00000031H
	DB	52					; 00000034H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ
__unwindfunclet$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z$1:
	lea	ecx, DWORD PTR __Proxy$[ebp]
	jmp	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-308]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; Line 2180
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __D15AFF60_xstring
	call	@__CheckForDebuggerJustMyCode@4
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; Line 2178
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __D15AFF60_xstring
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
tv66 = -220						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QBE_NXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; Line 2152
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QBE_NXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __D15AFF60_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 2153
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	jb	SHORT $LN3@Large_stri
	mov	DWORD PTR tv66[ebp], 1
	jmp	SHORT $LN4@Large_stri
$LN3@Large_stri:
	mov	DWORD PTR tv66[ebp], 0
$LN4@Large_stri:
	mov	al, BYTE PTR tv66[ebp]
; Line 2154
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QBE_NXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-224]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QBE_NXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QBE_NXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ
_TEXT	SEGMENT
__Result$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; Line 2143
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __D15AFF60_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 2144
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR __Result$[ebp], eax
; Line 2145
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QBE_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@Myptr
; Line 2146
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	??$_Unfancy@D@std@@YAPADPAD@Z		; std::_Unfancy<char>
	add	esp, 4
	mov	DWORD PTR __Result$[ebp], eax
$LN2@Myptr:
; Line 2149
	mov	eax, DWORD PTR __Result$[ebp]
; Line 2150
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ
_TEXT	SEGMENT
__Result$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; Line 2134
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __D15AFF60_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 2135
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR __Result$[ebp], eax
; Line 2136
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QBE_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@Myptr
; Line 2137
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	??$_Unfancy@D@std@@YAPADPAD@Z		; std::_Unfancy<char>
	add	esp, 4
	mov	DWORD PTR __Result$[ebp], eax
$LN2@Myptr:
; Line 2140
	mov	eax, DWORD PTR __Result$[ebp]
; Line 2141
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-232]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QAEPADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; Line 2124
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __D15AFF60_xstring
	call	@__CheckForDebuggerJustMyCode@4
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Container_base12@std@@QAE@XZ	; std::_Container_base12::_Container_base12
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+20], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@ABV32@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Al$ = 12						; size = 4
?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@ABV32@@Z PROC ; std::_Default_allocator_traits<std::allocator<char> >::select_on_container_copy_construction, COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; Line 706
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __A58979FC_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 707
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
; Line 708
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@ABV32@@Z ENDP ; std::_Default_allocator_traits<std::allocator<char> >::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<char> >::max_size, COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; Line 702
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __A58979FC_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 703
	or	eax, -1
; Line 704
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SAIABV?$allocator@D@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<char> >::max_size
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Xlen_string@std@@YAXXZ
_TEXT	SEGMENT
?_Xlen_string@std@@YAXXZ PROC				; std::_Xlen_string, COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; Line 2200
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __D15AFF60_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 2201
	push	OFFSET ??_C@_0BA@JFNIOLAK@string?5too?5long@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Xlen_strin:
; Line 2202
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Xlen_string@std@@YAXXZ ENDP				; std::_Xlen_string
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
?eof@?$_Narrow_char_traits@DH@std@@SAHXZ PROC		; std::_Narrow_char_traits<char,int>::eof, COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; Line 400
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?eof@?$_Narrow_char_traits@DH@std@@SAHXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __D15AFF60_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 401
	or	eax, -1
; Line 402
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?eof@?$_Narrow_char_traits@DH@std@@SAHXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?eof@?$_Narrow_char_traits@DH@std@@SAHXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ENDP		; std::_Narrow_char_traits<char,int>::eof
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?not_eof@?$_Narrow_char_traits@DH@std@@SAHABH@Z
_TEXT	SEGMENT
tv68 = -212						; size = 4
tv69 = -208						; size = 4
__$EHRec$ = -12						; size = 12
__Meta$ = 8						; size = 4
?not_eof@?$_Narrow_char_traits@DH@std@@SAHABH@Z PROC	; std::_Narrow_char_traits<char,int>::not_eof, COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; Line 396
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?not_eof@?$_Narrow_char_traits@DH@std@@SAHABH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 200				; 000000c8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-212]
	mov	ecx, 50					; 00000032H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __D15AFF60_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 397
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	mov	ecx, DWORD PTR __Meta$[ebp]
	cmp	DWORD PTR [ecx], eax
	je	SHORT $LN5@not_eof
	mov	edx, DWORD PTR __Meta$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR tv69[ebp], eax
	jmp	SHORT $LN6@not_eof
$LN5@not_eof:
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	test	eax, eax
	jne	SHORT $LN3@not_eof
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN4@not_eof
$LN3@not_eof:
	mov	DWORD PTR tv68[ebp], 0
$LN4@not_eof:
	mov	ecx, DWORD PTR tv68[ebp]
	mov	DWORD PTR tv69[ebp], ecx
$LN6@not_eof:
	mov	eax, DWORD PTR tv69[ebp]
; Line 398
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 212				; 000000d4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?not_eof@?$_Narrow_char_traits@DH@std@@SAHABH@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-216]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?not_eof@?$_Narrow_char_traits@DH@std@@SAHABH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?not_eof@?$_Narrow_char_traits@DH@std@@SAHABH@Z ENDP	; std::_Narrow_char_traits<char,int>::not_eof
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NABH0@Z
_TEXT	SEGMENT
tv65 = -208						; size = 4
__$EHRec$ = -12						; size = 12
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NABH0@Z PROC ; std::_Narrow_char_traits<char,int>::eq_int_type, COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; Line 392
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NABH0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __D15AFF60_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 393
	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN3@eq_int_typ
	mov	DWORD PTR tv65[ebp], 1
	jmp	SHORT $LN4@eq_int_typ
$LN3@eq_int_typ:
	mov	DWORD PTR tv65[ebp], 0
$LN4@eq_int_typ:
	mov	al, BYTE PTR tv65[ebp]
; Line 394
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NABH0@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-212]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NABH0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NABH0@Z ENDP ; std::_Narrow_char_traits<char,int>::eq_int_type
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?to_int_type@?$_Narrow_char_traits@DH@std@@SAHABD@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Ch$ = 8						; size = 4
?to_int_type@?$_Narrow_char_traits@DH@std@@SAHABD@Z PROC ; std::_Narrow_char_traits<char,int>::to_int_type, COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; Line 388
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?to_int_type@?$_Narrow_char_traits@DH@std@@SAHABD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __D15AFF60_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 389
	mov	eax, DWORD PTR __Ch$[ebp]
	movzx	eax, BYTE PTR [eax]
; Line 390
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?to_int_type@?$_Narrow_char_traits@DH@std@@SAHABD@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?to_int_type@?$_Narrow_char_traits@DH@std@@SAHABD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?to_int_type@?$_Narrow_char_traits@DH@std@@SAHABD@Z ENDP ; std::_Narrow_char_traits<char,int>::to_int_type
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?to_char_type@?$_Narrow_char_traits@DH@std@@SADABH@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Meta$ = 8						; size = 4
?to_char_type@?$_Narrow_char_traits@DH@std@@SADABH@Z PROC ; std::_Narrow_char_traits<char,int>::to_char_type, COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; Line 384
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?to_char_type@?$_Narrow_char_traits@DH@std@@SADABH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __D15AFF60_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 385
	mov	eax, DWORD PTR __Meta$[ebp]
	mov	al, BYTE PTR [eax]
; Line 386
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?to_char_type@?$_Narrow_char_traits@DH@std@@SADABH@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?to_char_type@?$_Narrow_char_traits@DH@std@@SADABH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?to_char_type@?$_Narrow_char_traits@DH@std@@SADABH@Z ENDP ; std::_Narrow_char_traits<char,int>::to_char_type
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?eq@?$_Narrow_char_traits@DH@std@@SA_NABD0@Z
_TEXT	SEGMENT
tv67 = -208						; size = 4
__$EHRec$ = -12						; size = 12
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?eq@?$_Narrow_char_traits@DH@std@@SA_NABD0@Z PROC	; std::_Narrow_char_traits<char,int>::eq, COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; Line 376
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?eq@?$_Narrow_char_traits@DH@std@@SA_NABD0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __D15AFF60_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 377
	mov	eax, DWORD PTR __Left$[ebp]
	movsx	ecx, BYTE PTR [eax]
	mov	edx, DWORD PTR __Right$[ebp]
	movsx	eax, BYTE PTR [edx]
	cmp	ecx, eax
	jne	SHORT $LN3@eq
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@eq
$LN3@eq:
	mov	DWORD PTR tv67[ebp], 0
$LN4@eq:
	mov	al, BYTE PTR tv67[ebp]
; Line 378
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?eq@?$_Narrow_char_traits@DH@std@@SA_NABD0@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-212]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?eq@?$_Narrow_char_traits@DH@std@@SA_NABD0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?eq@?$_Narrow_char_traits@DH@std@@SA_NABD0@Z ENDP	; std::_Narrow_char_traits<char,int>::eq
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?assign@?$_Narrow_char_traits@DH@std@@SAXAADABD@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$_Narrow_char_traits@DH@std@@SAXAADABD@Z PROC	; std::_Narrow_char_traits<char,int>::assign, COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; Line 372
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?assign@?$_Narrow_char_traits@DH@std@@SAXAADABD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __D15AFF60_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 373
	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl
; Line 374
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?assign@?$_Narrow_char_traits@DH@std@@SAXAADABD@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?assign@?$_Narrow_char_traits@DH@std@@SAXAADABD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?assign@?$_Narrow_char_traits@DH@std@@SAXAADABD@Z ENDP	; std::_Narrow_char_traits<char,int>::assign
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?move@?$_Narrow_char_traits@DH@std@@SAPADQADQBDI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$_Narrow_char_traits@DH@std@@SAPADQADQBDI@Z PROC	; std::_Narrow_char_traits<char,int>::move, COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; Line 361
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?move@?$_Narrow_char_traits@DH@std@@SAPADQADQBDI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __D15AFF60_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 363
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First2$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First1$[ebp]
	push	edx
	call	_memmove
	add	esp, 12					; 0000000cH
; Line 364
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?move@?$_Narrow_char_traits@DH@std@@SAPADQADQBDI@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?move@?$_Narrow_char_traits@DH@std@@SAPADQADQBDI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?move@?$_Narrow_char_traits@DH@std@@SAPADQADQBDI@Z ENDP	; std::_Narrow_char_traits<char,int>::move
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?copy@?$_Narrow_char_traits@DH@std@@SAPADQADQBDI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$_Narrow_char_traits@DH@std@@SAPADQADQBDI@Z PROC	; std::_Narrow_char_traits<char,int>::copy, COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; Line 326
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?copy@?$_Narrow_char_traits@DH@std@@SAPADQADQBDI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __D15AFF60_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 328
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First2$[ebp]
	push	ecx
	mov	edx, DWORD PTR __First1$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 329
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?copy@?$_Narrow_char_traits@DH@std@@SAPADQADQBDI@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?copy@?$_Narrow_char_traits@DH@std@@SAPADQADQBDI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?copy@?$_Narrow_char_traits@DH@std@@SAPADQADQBDI@Z ENDP	; std::_Narrow_char_traits<char,int>::copy
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?length@?$_Narrow_char_traits@DH@std@@SAIQBD@Z
_TEXT	SEGMENT
tv66 = -220						; size = 4
tv75 = -213						; size = 1
tv72 = -212						; size = 4
tv69 = -208						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
?length@?$_Narrow_char_traits@DH@std@@SAIQBD@Z PROC	; std::_Narrow_char_traits<char,int>::length, COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstring
; Line 305
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?length@?$_Narrow_char_traits@DH@std@@SAIQBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __D15AFF60_xstring
	call	@__CheckForDebuggerJustMyCode@4
; Line 318
	mov	eax, DWORD PTR __First$[ebp]
	mov	DWORD PTR tv69[ebp], eax
	mov	ecx, DWORD PTR tv69[ebp]
	add	ecx, 1
	mov	DWORD PTR tv72[ebp], ecx
$LL3@length:
	mov	edx, DWORD PTR tv69[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR tv75[ebp], al
	add	DWORD PTR tv69[ebp], 1
	cmp	BYTE PTR tv75[ebp], 0
	jne	SHORT $LL3@length
	mov	ecx, DWORD PTR tv69[ebp]
	sub	ecx, DWORD PTR tv72[ebp]
	mov	DWORD PTR tv66[ebp], ecx
	mov	eax, DWORD PTR tv66[ebp]
; Line 323
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?length@?$_Narrow_char_traits@DH@std@@SAIQBD@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-224]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?length@?$_Narrow_char_traits@DH@std@@SAIQBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?length@?$_Narrow_char_traits@DH@std@@SAIQBD@Z ENDP	; std::_Narrow_char_traits<char,int>::length
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC		; std::allocator<char>::allocate, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; Line 806
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __A58979FC_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 807
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Get_size_of_n@$00@std@@YAII@Z	; std::_Get_size_of_n<1>
	add	esp, 4
	push	eax
	call	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
	add	esp, 4
; Line 808
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXQADI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXQADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; Line 801
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __A58979FC_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 803
	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z	; std::_Deallocate<8,0>
	add	esp, 8
; Line 804
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@D@std@@QAEXQADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0?$allocator@D@std@@QAE@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; Line 795
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$allocator@D@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __A58979FC_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$allocator@D@std@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$allocator@D@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Construct_in_place@U_Container_proxy@std@@PAU_Container_base12@2@@std@@YAXAAU_Container_proxy@0@$$QAPAU_Container_base12@0@@Z
_TEXT	SEGMENT
tv78 = -220						; size = 4
$T2 = -212						; size = 4
__$EHRec$ = -12						; size = 12
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@U_Container_proxy@std@@PAU_Container_base12@2@@std@@YAXAAU_Container_proxy@0@$$QAPAU_Container_base12@0@@Z PROC ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>, COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; Line 228
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Construct_in_place@U_Container_proxy@std@@PAU_Container_base12@2@@std@@YAXAAU_Container_proxy@0@$$QAPAU_Container_base12@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __A58979FC_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR __Obj$[ebp]
	push	eax
	call	??$addressof@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@AAU10@@Z ; std::addressof<std::_Container_proxy>
	add	esp, 4
	push	eax
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T2[ebp], eax
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@PAU_Container_base12@std@@@std@@YA$$QAPAU_Container_base12@0@AAPAU10@@Z ; std::forward<std::_Container_base12 *>
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR tv78[ebp], edx
	mov	eax, DWORD PTR tv78[ebp]
	push	eax
	mov	ecx, DWORD PTR $T2[ebp]
	call	??0_Container_proxy@std@@QAE@PAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy
; Line 231
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Construct_in_place@U_Container_proxy@std@@PAU_Container_base12@2@@std@@YAXAAU_Container_proxy@0@$$QAPAU_Container_base12@0@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-224]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Construct_in_place@U_Container_proxy@std@@PAU_Container_base12@2@@std@@YAXAAU_Container_proxy@0@$$QAPAU_Container_base12@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Construct_in_place@U_Container_proxy@std@@PAU_Container_base12@2@@std@@YAXAAU_Container_proxy@0@$$QAPAU_Container_base12@0@@Z ENDP ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$addressof@U_Container_base12@std@@@std@@YAPAU_Container_base12@0@AAU10@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Val$ = 8						; size = 4
??$addressof@U_Container_base12@std@@@std@@YAPAU_Container_base12@0@AAU10@@Z PROC ; std::addressof<std::_Container_base12>, COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xstddef
; Line 274
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$addressof@U_Container_base12@std@@@std@@YAPAU_Container_base12@0@AAU10@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __38038D2D_xstddef
	call	@__CheckForDebuggerJustMyCode@4
; Line 275
	mov	eax, DWORD PTR __Val$[ebp]
; Line 276
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$addressof@U_Container_base12@std@@@std@@YAPAU_Container_base12@0@AAU10@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$addressof@U_Container_base12@std@@@std@@YAPAU_Container_base12@0@AAU10@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$addressof@U_Container_base12@std@@@std@@YAPAU_Container_base12@0@AAU10@@Z ENDP ; std::addressof<std::_Container_base12>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Release@_Basic_container_proxy_ptr12@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?_Release@_Basic_container_proxy_ptr12@std@@QAEXXZ PROC	; std::_Basic_container_proxy_ptr12::_Release, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; Line 1266
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Release@_Basic_container_proxy_ptr12@std@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __A58979FC_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 1267
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 1268
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Release@_Basic_container_proxy_ptr12@std@@QAEXXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Release@_Basic_container_proxy_ptr12@std@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Release@_Basic_container_proxy_ptr12@std@@QAEXXZ ENDP	; std::_Basic_container_proxy_ptr12::_Release
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Swap_proxy_and_iterators@_Container_base12@std@@QAEXAAU12@@Z
_TEXT	SEGMENT
__Temp$ = -48						; size = 4
__Lock$ = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
?_Swap_proxy_and_iterators@_Container_base12@std@@QAEXAAU12@@Z PROC ; std::_Container_base12::_Swap_proxy_and_iterators, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; Line 1219
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Swap_proxy_and_iterators@_Container_base12@std@@QAEXAAU12@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __A58979FC_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 1221
	mov	esi, esp
	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1224
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Temp$[ebp], ecx
; Line 1225
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
; Line 1226
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR __Temp$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1228
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@Swap_proxy
; Line 1229
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], edx
$LN2@Swap_proxy:
; Line 1232
	mov	eax, DWORD PTR __Right$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@Swap_proxy
; Line 1233
	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Right$[ebp]
	mov	DWORD PTR [ecx], edx
$LN3@Swap_proxy:
; Line 1235
	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@Swap_proxy
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN8@Swap_proxy:
	DD	1
	DD	$LN7@Swap_proxy
$LN7@Swap_proxy:
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN5@Swap_proxy
$LN5@Swap_proxy:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Swap_proxy_and_iterators@_Container_base12@std@@QAEXAAU12@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Swap_proxy_and_iterators@_Container_base12@std@@QAEXAAU12@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Swap_proxy_and_iterators@_Container_base12@std@@QAEXAAU12@@Z ENDP ; std::_Container_base12::_Swap_proxy_and_iterators
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Orphan_all@_Container_base12@std@@QAEXXZ
_TEXT	SEGMENT
__Pnext$2 = -48						; size = 4
__Lock$3 = -36						; size = 4
_this$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
?_Orphan_all@_Container_base12@std@@QAEXXZ PROC		; std::_Container_base12::_Orphan_all, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; Line 1205
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Orphan_all@_Container_base12@std@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __A58979FC_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 1207
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN6@Orphan_all
; Line 1208
	mov	esi, esp
	push	3
	lea	ecx, DWORD PTR __Lock$3[ebp]
	call	DWORD PTR __imp_??0_Lockit@std@@QAE@H@Z
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1210
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	DWORD PTR __Pnext$2[ebp], ecx
	jmp	SHORT $LN4@Orphan_all
$LN2@Orphan_all:
	mov	eax, DWORD PTR __Pnext$2[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Pnext$2[ebp]
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx], eax
$LN4@Orphan_all:
	mov	eax, DWORD PTR __Pnext$2[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@Orphan_all
; Line 1211
	mov	eax, DWORD PTR __Pnext$2[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], 0
; Line 1212
	jmp	SHORT $LN2@Orphan_all
$LN3@Orphan_all:
; Line 1214
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+4], 0
; Line 1215
	mov	esi, esp
	lea	ecx, DWORD PTR __Lock$3[ebp]
	call	DWORD PTR __imp_??1_Lockit@std@@QAE@XZ
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@Orphan_all:
; Line 1217
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@Orphan_all
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN10@Orphan_all:
	DD	1
	DD	$LN9@Orphan_all
$LN9@Orphan_all:
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN7@Orphan_all
$LN7@Orphan_all:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Orphan_all@_Container_base12@std@@QAEXXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Orphan_all@_Container_base12@std@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Orphan_all@_Container_base12@std@@QAEXXZ ENDP		; std::_Container_base12::_Orphan_all
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0_Container_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0_Container_base12@std@@QAE@XZ PROC			; std::_Container_base12::_Container_base12, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; Line 1092
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0_Container_base12@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __A58979FC_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0_Container_base12@std@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0_Container_base12@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0_Container_base12@std@@QAE@XZ ENDP			; std::_Container_base12::_Container_base12
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0_Container_proxy@std@@QAE@PAU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Mycont_$ = 8						; size = 4
??0_Container_proxy@std@@QAE@PAU_Container_base12@1@@Z PROC ; std::_Container_proxy::_Container_proxy, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; Line 1084
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0_Container_proxy@std@@QAE@PAU_Container_base12@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __A58979FC_xmemory
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Mycont_$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0_Container_proxy@std@@QAE@PAU_Container_base12@1@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0_Container_proxy@std@@QAE@PAU_Container_base12@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0_Container_proxy@std@@QAE@PAU_Container_base12@1@@Z ENDP ; std::_Container_proxy::_Container_proxy
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Convert_size@I@std@@YAII@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Len$ = 8						; size = 4
??$_Convert_size@I@std@@YAII@Z PROC			; std::_Convert_size<unsigned int>, COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; Line 990
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Convert_size@I@std@@YAII@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __A58979FC_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 992
	mov	eax, DWORD PTR __Len$[ebp]
; Line 993
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Convert_size@I@std@@YAII@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Convert_size@I@std@@YAII@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Convert_size@I@std@@YAII@Z ENDP			; std::_Convert_size<unsigned int>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z
_TEXT	SEGMENT
__Back_shift$ = -44					; size = 4
__Min_back_shift$ = -32					; size = 4
__Ptr_container$ = -20					; size = 4
__Ptr_user$ = -8					; size = 4
__Ptr$ = 8						; size = 4
__Bytes$ = 12						; size = 4
?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z PROC ; std::_Adjust_manually_vector_aligned, COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; Line 132
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __A58979FC_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 134
	mov	eax, DWORD PTR __Bytes$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 39					; 00000027H
	mov	edx, DWORD PTR __Bytes$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 136
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Ptr_user$[ebp], ecx
; Line 137
	mov	eax, 4
	imul	ecx, eax, -1
	mov	edx, DWORD PTR __Ptr_user$[ebp]
	mov	eax, DWORD PTR [edx+ecx]
	mov	DWORD PTR __Ptr_container$[ebp], eax
$LN4@Adjust_man:
; Line 141
	mov	eax, 4
	imul	ecx, eax, -2
	mov	edx, DWORD PTR __Ptr_user$[ebp]
	cmp	DWORD PTR [edx+ecx], -84215046		; fafafafaH
	jne	SHORT $LN7@Adjust_man
	jmp	SHORT $LN2@Adjust_man
$LN7@Adjust_man:
	mov	esi, esp
	push	OFFSET ??_C@_0BB@FCMFBGOM@invalid?5argument@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	mov	eax, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z@4JA
	add	eax, 9
	push	eax
	push	OFFSET ??_C@_0GI@JMEOMKJO@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
	push	2
	call	DWORD PTR __imp___CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN19@Adjust_man
	int	3
$LN19@Adjust_man:
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z@4JA
	add	eax, 9
	push	eax
	push	OFFSET ??_C@_1NA@FEEOBALC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
	xor	eax, eax
	jne	SHORT $LN7@Adjust_man
$LN2@Adjust_man:
	xor	eax, eax
	jne	SHORT $LN4@Adjust_man
; Line 146
	mov	DWORD PTR __Min_back_shift$[ebp], 8
; Line 150
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	ecx, DWORD PTR [eax]
	sub	ecx, DWORD PTR __Ptr_container$[ebp]
	mov	DWORD PTR __Back_shift$[ebp], ecx
$LN10@Adjust_man:
; Line 151
	cmp	DWORD PTR __Back_shift$[ebp], 8
	jb	SHORT $LN13@Adjust_man
	cmp	DWORD PTR __Back_shift$[ebp], 39	; 00000027H
	ja	SHORT $LN13@Adjust_man
	jmp	SHORT $LN8@Adjust_man
$LN13@Adjust_man:
	mov	esi, esp
	push	OFFSET ??_C@_0BB@FCMFBGOM@invalid?5argument@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	mov	eax, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z@4JA
	add	eax, 19					; 00000013H
	push	eax
	push	OFFSET ??_C@_0GI@JMEOMKJO@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
	push	2
	call	DWORD PTR __imp___CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	SHORT $LN20@Adjust_man
	int	3
$LN20@Adjust_man:
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z@4JA
	add	eax, 19					; 00000013H
	push	eax
	push	OFFSET ??_C@_1NA@FEEOBALC@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
	call	DWORD PTR __imp___invalid_parameter
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
	xor	eax, eax
	jne	SHORT $LN13@Adjust_man
$LN8@Adjust_man:
	xor	eax, eax
	jne	SHORT $LN10@Adjust_man
; Line 152
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	ecx, DWORD PTR __Ptr_container$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 153
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z ENDP ; std::_Adjust_manually_vector_aligned
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Allocate@_Default_allocate_traits@std@@SAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
?_Allocate@_Default_allocate_traits@std@@SAPAXI@Z PROC	; std::_Default_allocate_traits::_Allocate, COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\xmemory
; Line 76
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __A58979FC_xmemory
	call	@__CheckForDebuggerJustMyCode@4
; Line 77
	mov	eax, DWORD PTR __Bytes$[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
; Line 78
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Allocate@_Default_allocate_traits@std@@SAPAXI@Z ENDP	; std::_Default_allocate_traits::_Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?max@?$numeric_limits@H@std@@SAHXZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
?max@?$numeric_limits@H@std@@SAHXZ PROC			; std::numeric_limits<int>::max, COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\limits
; Line 554
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?max@?$numeric_limits@H@std@@SAHXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __F2870A2C_limits
	call	@__CheckForDebuggerJustMyCode@4
; Line 555
	mov	eax, 2147483647				; 7fffffffH
; Line 556
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?max@?$numeric_limits@H@std@@SAHXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?max@?$numeric_limits@H@std@@SAHXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?max@?$numeric_limits@H@std@@SAHXZ ENDP			; std::numeric_limits<int>::max
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -208						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\exception
; Line 320
	push	ebp
	mov	ebp, esp
	sub	esp, 212				; 000000d4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-212]
	mov	ecx, 53					; 00000035H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __E4152856_exception
	call	@__CheckForDebuggerJustMyCode@4
; Line 321
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0bad_array_new_length@std@@QAE@XZ	; std::bad_array_new_length::bad_array_new_length
	push	OFFSET __TI3?AVbad_array_new_length@std@@
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	__CxxThrowException@8
$LN2@Throw_bad_:
; Line 322
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 212				; 000000d4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1bad_array_new_length@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	12					; 0000000cH
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0bad_alloc@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7bad_array_new_length@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1bad_alloc@std@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
; Line 141
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0bad_array_new_length@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E75714E4_vcruntime_exception@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 140
	push	OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0bad_alloc@std@@AAE@QBD@Z		; std::bad_alloc::bad_alloc
; Line 141
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7bad_array_new_length@std@@6B@
; Line 142
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0bad_array_new_length@std@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0bad_array_new_length@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1bad_alloc@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	12					; 0000000cH
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0exception@std@@QAE@ABV01@@Z		; std::exception::exception
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7bad_alloc@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1bad_alloc@std@@UAE@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1exception@std@@UAE@XZ		; std::exception::~exception
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1bad_alloc@std@@UAE@XZ ENDP				; std::bad_alloc::~bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0bad_alloc@std@@AAE@QBD@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Message$ = 8						; size = 4
??0bad_alloc@std@@AAE@QBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
; Line 130
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0bad_alloc@std@@AAE@QBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E75714E4_vcruntime_exception@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 129
	push	1
	mov	eax, DWORD PTR __Message$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0exception@std@@QAE@QBDH@Z		; std::exception::exception
; Line 130
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7bad_alloc@std@@6B@
; Line 131
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0bad_alloc@std@@AAE@QBD@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0bad_alloc@std@@AAE@QBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0bad_alloc@std@@AAE@QBD@Z ENDP			; std::bad_alloc::bad_alloc
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1exception@std@@UAE@XZ		; std::exception::~exception
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	12					; 0000000cH
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
tv69 = -208						; size = 4
_this$ = -8						; size = 4
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
; Line 94
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E75714E4_vcruntime_exception@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 95
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN3@what
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv69[ebp], edx
	jmp	SHORT $LN4@what
$LN3@what:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
$LN4@what:
	mov	eax, DWORD PTR tv69[ebp]
; Line 96
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
; Line 89
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1exception@std@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E75714E4_vcruntime_exception@h
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7exception@std@@6B@
; Line 90
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	push	eax
	call	___std_exception_destroy
	add	esp, 4
; Line 91
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1exception@std@@UAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1exception@std@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
; Line 72
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0exception@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E75714E4_vcruntime_exception@h
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7exception@std@@6B@
; Line 71
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax
; Line 73
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR __Other$[ebp]
	add	ecx, 4
	push	ecx
	call	___std_exception_copy
	add	esp, 8
; Line 74
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0exception@std@@QAE@ABV01@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0exception@std@@QAE@ABV01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0exception@std@@QAE@QBDH@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
__Message$ = 8						; size = 4
___formal$ = 12						; size = 4
??0exception@std@@QAE@QBDH@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_exception.h
; Line 66
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0exception@std@@QAE@QBDH@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __E75714E4_vcruntime_exception@h
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7exception@std@@6B@
; Line 65
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax
; Line 67
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Message$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 68
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0exception@std@@QAE@QBDH@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0exception@std@@QAE@QBDH@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0exception@std@@QAE@QBDH@Z ENDP			; std::exception::exception
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _fabsf
_TEXT	SEGMENT
tv72 = -196						; size = 4
__X$ = 8						; size = 4
_fabsf	PROC						; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_math.h
; Line 671
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __09340588_corecrt_math@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 672
	cvtss2sd xmm0, DWORD PTR __X$[ebp]
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	call	_fabs
	add	esp, 8
	fstp	DWORD PTR tv72[ebp]
	fld	DWORD PTR tv72[ebp]
; Line 673
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_fabsf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Size$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\include\vcruntime_new.h
; Line 167
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??2@YAPAXIPAX@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __8906660C_vcruntime_new@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 169
	mov	eax, DWORD PTR __Where$[ebp]
; Line 170
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??2@YAPAXIPAX@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??2@YAPAXIPAX@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??2@YAPAXIPAX@Z ENDP					; operator new
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__empty_global_delete@@YAXPAXIW4align_val_t@std@@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
?__empty_global_delete@@YAXPAXIW4align_val_t@std@@@Z PROC ; __empty_global_delete, COMDAT
; File F:\WindowSandbox\WindowSandbox\src\Graphics.cpp
; Line 315
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?__empty_global_delete@@YAXPAXIW4align_val_t@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __AA27F043_Graphics@cpp
	call	@__CheckForDebuggerJustMyCode@4
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?__empty_global_delete@@YAXPAXIW4align_val_t@std@@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?__empty_global_delete@@YAXPAXIW4align_val_t@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?__empty_global_delete@@YAXPAXIW4align_val_t@std@@@Z ENDP ; __empty_global_delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__empty_global_delete@@YAXPAXW4align_val_t@std@@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXW4align_val_t@std@@@Z PROC ; __empty_global_delete, COMDAT
; File F:\WindowSandbox\WindowSandbox\src\Graphics.cpp
; Line 315
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?__empty_global_delete@@YAXPAXW4align_val_t@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __AA27F043_Graphics@cpp
	call	@__CheckForDebuggerJustMyCode@4
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?__empty_global_delete@@YAXPAXW4align_val_t@std@@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?__empty_global_delete@@YAXPAXW4align_val_t@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?__empty_global_delete@@YAXPAXW4align_val_t@std@@@Z ENDP ; __empty_global_delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT
; File F:\WindowSandbox\WindowSandbox\src\Graphics.cpp
; Line 315
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?__empty_global_delete@@YAXPAXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __AA27F043_Graphics@cpp
	call	@__CheckForDebuggerJustMyCode@4
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?__empty_global_delete@@YAXPAXI@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?__empty_global_delete@@YAXPAXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT
; File F:\WindowSandbox\WindowSandbox\src\Graphics.cpp
; Line 315
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?__empty_global_delete@@YAXPAX@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __AA27F043_Graphics@cpp
	call	@__CheckForDebuggerJustMyCode@4
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?__empty_global_delete@@YAXPAX@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?__empty_global_delete@@YAXPAX@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
END
