; Listing generated by Microsoft (R) Optimizing Compiler Version 19.27.29111.0 

	TITLE	F:\WindowSandbox\WindowSandbox\src\EntryPoint.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	___pobjectentryfirst
PUBLIC	___pobjectentrymid
PUBLIC	___pobjectentrylast
PUBLIC	?DefaultDelegateCheckMode@WRL@Microsoft@@3W4DelegateCheckMode@12@B ; Microsoft::WRL::DefaultDelegateCheckMode
msvcjmc	SEGMENT
__7242C389_ctype@h DB 01H
__90A1F774_basetsd@h DB 01H
__367CC694_corecrt_memcpy_s@h DB 01H
__35D7DDB3_corecrt_memory@h DB 01H
__DC9673E3_corecrt_wstring@h DB 01H
__A29A7DFB_string@h DB 01H
__3C23D660_guiddef@h DB 01H
__AF541008_winnt@h DB 01H
__0D001789_processthreadsapi@h DB 01H
__F972325D_memoryapi@h DB 01H
__76CD430D_winerror@h DB 01H
__737D49DB_winbase@h DB 01H
__1B9502AC_winuser@h DB 01H
__0396F1A5_stralign@h DB 01H
__8906660C_vcruntime_new@h DB 01H
__09340588_corecrt_math@h DB 01H
__24E9E95F_stdlib@h DB 01H
__F8119FB4_cstdlib DB 01H
__0A4FAB91_cmath DB 01H
__F66CEB67_corecrt_stdio_config@h DB 01H
__101834BA_corecrt_wstdio@h DB 01H
__AD6A91B7_stdio@h DB 01H
__5467428D_corecrt_wconio@h DB 01H
__4442441F_corecrt_wio@h DB 01H
__45F4AF76_corecrt_wtime@h DB 01H
__186FF47F_stat@h DB 01H
__534C724A_wchar@h DB 01H
__5DDA4519_cstddef DB 01H
__85A9AA98_type_traits DB 01H
__0104A505_compare DB 01H
__4324C6B3_xutility DB 01H
__B0C4CEA9_malloc@h DB 01H
__E75714E4_vcruntime_exception@h DB 01H
__E4152856_exception DB 01H
__F2870A2C_limits DB 01H
__A58979FC_xmemory DB 01H
__AC6CB2D0_tuple DB 01H
__E0552A5D_xpolymorphic_allocator@h DB 01H
__D15AFF60_xstring DB 01H
__6D5B120B_stdexcept DB 01H
__160863A3_xcall_once@h DB 01H
__99B256EE_atomic DB 01H
__A9557183_system_error DB 01H
__FB364CBD_vcruntime_typeinfo@h DB 01H
__33FB35AA_typeinfo DB 01H
__4E2906A2_memory DB 01H
__626C51AD_xfacet DB 01H
__2C72D662_xlocinfo DB 01H
__0E648B51_xlocale DB 01H
__1597A171_xiosbase DB 01H
__90E3ED46_xlocnum DB 01H
__165C22CB_ios DB 01H
__3AFA803E_string DB 01H
__0ED96A82_algorithm DB 01H
__781ADC3E_Keyboard@h DB 01H
__833FA886_Mouse@h DB 01H
__2CCBBE23_propidl@h DB 01H
__AD360DAF_oleauto@h DB 01H
__F57271C6_d3d11sdklayers@h DB 01H
__FA3A9F83_d3d10@h DB 01H
__FBF8F5B4_d3d11@h DB 01H
__CECC34C3_roapi@h DB 01H
__7B118BD6_internal@h DB 01H
__687F9F38_client@h DB 01H
__AF08451A_xmmintrin@h DB 01H
__9AC87C20_roerrorapi@h DB 01H
__CBC843C8_implements@h DB 01H
__15F97165_intsafe@h DB 01H
__EF1EFFE3_corewrappers@h DB 01H
__278E1207_module@h DB 01H
__BF1AC9A0_event@h DB 01H
__2AF06AB2_optional DB 01H
__66FC323F_ratio DB 01H
__8AA3BE86_time@h DB 01H
__966A0CA6_chrono DB 01H
__2C02DA40_EntryPoint@cpp DB 01H
__E561F523_queue DB 01H
__7EA464AF_istream DB 01H
__1D745195_ostream DB 01H
__6FFBAAB7_streambuf DB 01H
__0657B1E2_deque DB 01H
__3E6EDFAA_iosfwd DB 01H
__CF1C1A3F_utility DB 01H
__528871F3_iterator DB 01H
__38038D2D_xstddef DB 01H
__EE19A480_xatomic@h DB 01H
msvcjmc	ENDS
;	COMDAT ?DefaultDelegateCheckMode@WRL@Microsoft@@3W4DelegateCheckMode@12@B
CONST	SEGMENT
?DefaultDelegateCheckMode@WRL@Microsoft@@3W4DelegateCheckMode@12@B DD 01H ; Microsoft::WRL::DefaultDelegateCheckMode
CONST	ENDS
;	COMDAT ___pobjectentrylast
minATL$__z	SEGMENT
___pobjectentrylast DD 00H
minATL$__z	ENDS
;	COMDAT ___pobjectentrymid
minATL$__m	SEGMENT
___pobjectentrymid DD 00H
minATL$__m	ENDS
;	COMDAT ___pobjectentryfirst
minATL$__a	SEGMENT
___pobjectentryfirst DD 00H
minATL$__a	ENDS
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXW4align_val_t@std@@@Z ; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXIW4align_val_t@std@@@Z ; __empty_global_delete
PUBLIC	_WinMain@16
PUBLIC	?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IUnknown>::InternalRelease
PUBLIC	??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAE@XZ	; Microsoft::WRL::ComPtr<IUnknown>::~ComPtr<IUnknown>
PUBLIC	??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAEPAXI@Z ; Microsoft::WRL::ComPtr<IUnknown>::`vector deleting destructor'
PUBLIC	??1Game@@QAE@XZ					; Game::~Game
PUBLIC	?__autoclassinit2@Game@@QAEXI@Z			; Game::__autoclassinit2
PUBLIC	__JustMyCode_Default
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	??_C@_07HLLGMCO@Sandbox@			; `string'
PUBLIC	??_R0?AVException@@@8				; Exception `RTTI Type Descriptor'
PUBLIC	??_C@_0BD@BEPCMMME@Standard?5Exception@		; `string'
PUBLIC	??_C@_0BC@BLOAIJL@Unknown?5Exception@		; `string'
PUBLIC	??_C@_0BF@KKBOEDFD@No?5Details?5Available@	; `string'
EXTRN	??_M@YGXPAXIIP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	??_V@YAXPAXI@Z:PROC				; operator delete[]
EXTRN	__imp__MessageBoxA@16:PROC
EXTRN	??1Window@@QAE@XZ:PROC				; Window::~Window
EXTRN	??0Game@@QAE@HHPBD@Z:PROC			; Game::Game
EXTRN	?Go@Game@@QAEHXZ:PROC				; Game::Go
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__CheckForDebuggerJustMyCode@4:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memset:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_C@_0BF@KKBOEDFD@No?5Details?5Available@
CONST	SEGMENT
??_C@_0BF@KKBOEDFD@No?5Details?5Available@ DB 'No Details Available', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@BLOAIJL@Unknown?5Exception@
CONST	SEGMENT
??_C@_0BC@BLOAIJL@Unknown?5Exception@ DB 'Unknown Exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@BEPCMMME@Standard?5Exception@
CONST	SEGMENT
??_C@_0BD@BEPCMMME@Standard?5Exception@ DB 'Standard Exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_R0?AVException@@@8
data$r	SEGMENT
??_R0?AVException@@@8 DD FLAT:??_7type_info@@6B@	; Exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVException@@', 00H
data$r	ENDS
;	COMDAT ??_C@_07HLLGMCO@Sandbox@
CONST	SEGMENT
??_C@_07HLLGMCO@Sandbox@ DB 'Sandbox', 00H		; `string'
CONST	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAEPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IAEKXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__tryblocktable$_WinMain@16 DD 00H
	DD	01H
	DD	02H
	DD	03H
	DD	FLAT:__catchsym$_WinMain@16$5
__unwindtable$_WinMain@16 DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$_WinMain@16$4
	DD	0ffffffffH
	DD	00H
__ehfuncinfo$_WinMain@16 DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$_WinMain@16
	DD	01H
	DD	FLAT:__tryblocktable$_WinMain@16
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__catchsym$_WinMain@16$5 DD 09H
	DD	FLAT:??_R0?AVException@@@8
	DD	0ffffff54H
	DD	FLAT:__catch$_WinMain@16$0
	DD	09H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	0ffffff48H
	DD	FLAT:__catch$_WinMain@16$1
	DD	040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$_WinMain@16$2
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?__empty_global_delete@@YAXPAXIW4align_val_t@std@@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?__empty_global_delete@@YAXPAXW4align_val_t@std@@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?__empty_global_delete@@YAXPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?__empty_global_delete@@YAXPAX@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	push	ebp
	mov	ebp, esp
	pop	ebp
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@Game@@QAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_classSize$ = 8						; size = 4
?__autoclassinit2@Game@@QAEXI@Z PROC			; Game::__autoclassinit2, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _classSize$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	_memset
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?__autoclassinit2@Game@@QAEXI@Z ENDP			; Game::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1Game@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1Game@@QAE@XZ PROC					; Game::~Game, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Window@@QAE@XZ			; Window::~Window
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1Game@@QAE@XZ ENDP					; Game::~Game
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
___flags$ = 8						; size = 4
??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAEPAXI@Z PROC	; Microsoft::WRL::ComPtr<IUnknown>::`vector deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAEPAXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 2
	je	SHORT $LN2@vector
	push	OFFSET ??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IUnknown>::~ComPtr<IUnknown>
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	push	ecx
	push	4
	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	call	??_M@YGXPAXIIP6EX0@Z@Z
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN3@vector
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	lea	edx, DWORD PTR [ecx*4+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	push	eax
	call	??_V@YAXPAXI@Z				; operator delete[]
	add	esp, 8
$LN3@vector:
	mov	eax, DWORD PTR _this$[ebp]
	sub	eax, 4
	jmp	SHORT $LN5@vector
$LN2@vector:
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAE@XZ ; Microsoft::WRL::ComPtr<IUnknown>::~ComPtr<IUnknown>
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN4@vector
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN4@vector:
	mov	eax, DWORD PTR _this$[ebp]
$LN5@vector:
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAEPAXI@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAEPAXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??_E?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAEPAXI@Z ENDP	; Microsoft::WRL::ComPtr<IUnknown>::`vector deleting destructor'
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAE@XZ
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAE@XZ PROC	; Microsoft::WRL::ComPtr<IUnknown>::~ComPtr<IUnknown>, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 230
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 231
	mov	ecx, DWORD PTR _this$[ebp]
	call	?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IAEKXZ ; Microsoft::WRL::ComPtr<IUnknown>::InternalRelease
; Line 232
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAE@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-220]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QAE@XZ ENDP	; Microsoft::WRL::ComPtr<IUnknown>::~ComPtr<IUnknown>
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IAEKXZ
_TEXT	SEGMENT
_temp$ = -44						; size = 4
_ref$ = -32						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IAEKXZ PROC ; Microsoft::WRL::ComPtr<IUnknown>::InternalRelease, COMDAT
; _this$ = ecx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\winrt\wrl\client.h
; Line 169
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IAEKXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __687F9F38_client@h
	call	@__CheckForDebuggerJustMyCode@4
; Line 170
	mov	DWORD PTR _ref$[ebp], 0
; Line 171
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _temp$[ebp], ecx
; Line 173
	cmp	DWORD PTR _temp$[ebp], 0
	je	SHORT $LN2@InternalRe
; Line 175
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
; Line 176
	mov	eax, DWORD PTR _temp$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	esi, esp
	mov	edx, DWORD PTR _temp$[ebp]
	push	edx
	mov	eax, DWORD PTR [ecx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ref$[ebp], eax
$LN2@InternalRe:
; Line 179
	mov	eax, DWORD PTR _ref$[ebp]
; Line 180
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IAEKXZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-244]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IAEKXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IAEKXZ ENDP ; Microsoft::WRL::ComPtr<IUnknown>::InternalRelease
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _WinMain@16
_TEXT	SEGMENT
tv91 = -388						; size = 4
tv142 = -384						; size = 4
tv93 = -384						; size = 4
_ex$2 = -184						; size = 4
_ex$3 = -172						; size = 4
_sandbox$4 = -160					; size = 136
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
_hInstance$ = 8						; size = 4
_hPrevInstance$ = 12					; size = 4
_pCmdLine$ = 16						; size = 4
_pCmdShow$ = 20						; size = 4
_WinMain@16 PROC					; COMDAT
; File F:\WindowSandbox\WindowSandbox\src\EntryPoint.cpp
; Line 9
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$_WinMain@16
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	sub	esp, 372				; 00000174H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-388]
	mov	ecx, 93					; 0000005dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
	mov	ecx, OFFSET __2C02DA40_EntryPoint@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 11
	mov	DWORD PTR __$EHRec$[ebp+12], 0
; Line 12
	push	136					; 00000088H
	lea	ecx, DWORD PTR _sandbox$4[ebp]
	call	?__autoclassinit2@Game@@QAEXI@Z
	push	OFFSET ??_C@_07HLLGMCO@Sandbox@
	push	512					; 00000200H
	push	512					; 00000200H
	lea	ecx, DWORD PTR _sandbox$4[ebp]
	call	??0Game@@QAE@HHPBD@Z			; Game::Game
	mov	DWORD PTR tv142[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 13
	lea	ecx, DWORD PTR _sandbox$4[ebp]
	call	?Go@Game@@QAEHXZ			; Game::Go
; Line 14
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	lea	ecx, DWORD PTR _sandbox$4[ebp]
	call	??1Game@@QAE@XZ
	jmp	$LN4@WinMain
__catch$_WinMain@16$0:
; Line 16
	mov	esi, esp
	mov	eax, DWORD PTR _ex$3[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _ex$3[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv93[ebp], eax
	mov	esi, esp
	mov	ecx, DWORD PTR _ex$3[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _ex$3[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv91[ebp], eax
	mov	esi, esp
	push	16					; 00000010H
	mov	ecx, DWORD PTR tv93[ebp]
	push	ecx
	mov	edx, DWORD PTR tv91[ebp]
	push	edx
	push	0
	call	DWORD PTR __imp__MessageBoxA@16
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 17
	mov	eax, $LN10@WinMain
	ret	0
__catch$_WinMain@16$1:
; Line 19
	mov	esi, esp
	push	16					; 00000010H
	push	OFFSET ??_C@_0BD@BEPCMMME@Standard?5Exception@
	mov	edi, esp
	mov	eax, DWORD PTR _ex$2[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _ex$2[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	push	0
	call	DWORD PTR __imp__MessageBoxA@16
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 20
	mov	eax, $LN12@WinMain
	ret	0
__catch$_WinMain@16$2:
; Line 22
	mov	esi, esp
	push	16					; 00000010H
	push	OFFSET ??_C@_0BC@BLOAIJL@Unknown?5Exception@
	push	OFFSET ??_C@_0BF@KKBOEDFD@No?5Details?5Available@
	push	0
	call	DWORD PTR __imp__MessageBoxA@16
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 23
	mov	eax, $LN14@WinMain
	ret	0
$LN4@WinMain:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT $LN13@WinMain
$LN14@WinMain:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	jmp	SHORT __tryend$_WinMain@16$3
$LN13@WinMain:
	jmp	SHORT $LN11@WinMain
$LN12@WinMain:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
; Line 20
	jmp	SHORT __tryend$_WinMain@16$3
$LN11@WinMain:
	jmp	SHORT __tryend$_WinMain@16$3
$LN10@WinMain:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
__tryend$_WinMain@16$3:
; Line 24
	or	eax, -1
; Line 25
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN20@WinMain
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 388				; 00000184H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	2
$LN20@WinMain:
	DD	3
	DD	$LN19@WinMain
$LN19@WinMain:
	DD	-160					; ffffff60H
	DD	136					; 00000088H
	DD	$LN15@WinMain
	DD	-172					; ffffff54H
	DD	4
	DD	$LN16@WinMain
	DD	-184					; ffffff48H
	DD	4
	DD	$LN17@WinMain
$LN17@WinMain:
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	0
$LN16@WinMain:
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	0
$LN15@WinMain:
	DB	115					; 00000073H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	98					; 00000062H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$_WinMain@16$4:
	lea	ecx, DWORD PTR _sandbox$4[ebp]
	jmp	??1Game@@QAE@XZ
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$_WinMain@16:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-392]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$_WinMain@16
	jmp	___CxxFrameHandler3
text$x	ENDS
_WinMain@16 ENDP
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__empty_global_delete@@YAXPAXIW4align_val_t@std@@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
?__empty_global_delete@@YAXPAXIW4align_val_t@std@@@Z PROC ; __empty_global_delete, COMDAT
; File F:\WindowSandbox\WindowSandbox\src\EntryPoint.cpp
; Line 26
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?__empty_global_delete@@YAXPAXIW4align_val_t@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __2C02DA40_EntryPoint@cpp
	call	@__CheckForDebuggerJustMyCode@4
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?__empty_global_delete@@YAXPAXIW4align_val_t@std@@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?__empty_global_delete@@YAXPAXIW4align_val_t@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?__empty_global_delete@@YAXPAXIW4align_val_t@std@@@Z ENDP ; __empty_global_delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__empty_global_delete@@YAXPAXW4align_val_t@std@@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXW4align_val_t@std@@@Z PROC ; __empty_global_delete, COMDAT
; File F:\WindowSandbox\WindowSandbox\src\EntryPoint.cpp
; Line 26
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?__empty_global_delete@@YAXPAXW4align_val_t@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __2C02DA40_EntryPoint@cpp
	call	@__CheckForDebuggerJustMyCode@4
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?__empty_global_delete@@YAXPAXW4align_val_t@std@@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?__empty_global_delete@@YAXPAXW4align_val_t@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?__empty_global_delete@@YAXPAXW4align_val_t@std@@@Z ENDP ; __empty_global_delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT
; File F:\WindowSandbox\WindowSandbox\src\EntryPoint.cpp
; Line 26
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?__empty_global_delete@@YAXPAXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __2C02DA40_EntryPoint@cpp
	call	@__CheckForDebuggerJustMyCode@4
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?__empty_global_delete@@YAXPAXI@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?__empty_global_delete@@YAXPAXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT
; File F:\WindowSandbox\WindowSandbox\src\EntryPoint.cpp
; Line 26
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?__empty_global_delete@@YAXPAX@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __2C02DA40_EntryPoint@cpp
	call	@__CheckForDebuggerJustMyCode@4
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?__empty_global_delete@@YAXPAX@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?__empty_global_delete@@YAXPAX@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
END
